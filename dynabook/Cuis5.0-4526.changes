'From Cuis 5.0 [latest update: #4553] on 10 April 2021 at 9:18:10 pm'!


----SNAPSHOT----(10 April 2021 21:18:30) Cuis5.0-4526.image priorSource: 0!

----SNAPSHOT----(11 April 2021 06:35:41) Cuis5.0-4526.image priorSource: 71!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

----STARTUP---- (11 April 2021 06:37:33) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

----STARTUP---- (11 April 2021 06:37:55) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk garbageCollect!

----SNAPSHOT----(11 April 2021 06:38:11) Cuis5.0-4526.image priorSource: 148!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

----STARTUP---- (11 April 2021 06:39:55) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----SNAPSHOT----(11 April 2021 06:40:53) Cuis5.0-4526.image priorSource: 10984!

Smalltalk growMemoryByAtLeast: 40000000!

----SNAPSHOT----(11 April 2021 06:41:44) Cuis5.0-4526.image priorSource: 18255!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

----STARTUP---- (11 April 2021 06:42:56) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk garbageCollect!

Smalltalk garbageCollect!

Smalltalk growMemoryByAtLeast: 40000000!

Smalltalk growMemoryByAtLeast: 40000000!

----SNAPSHOT----(11 April 2021 06:43:47) Cuis5.0-4526.image priorSource: 18378!

Smalltalk growMemoryByAtLeast: 400000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----SNAPSHOT----(11 April 2021 06:44:36) Cuis5.0-4526.image priorSource: 22822!

----STARTUP---- (11 April 2021 06:44:43) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 700000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 06:45:12) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 4000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 06:45:50) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 7000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 06:46:35) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 9000000000!

Smalltalk growMemoryByAtLeast: 9000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 06:47:25) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 9000000000!

Smalltalk growMemoryByAtLeast: 9000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 06:49:38) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 12000000000!

Smalltalk growMemoryByAtLeast: 12000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 06:53:22) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 400000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----SNAPSHOT----(11 April 2021 06:53:44) Cuis5.0-4526.image priorSource: 22822!

----STARTUP---- (11 April 2021 06:54:27) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 900000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 06:54:56) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----SNAPSHOT----(11 April 2021 06:56:06) Cuis5.0-4526.image priorSource: 22822!

'./Environments.st' asFileEntry fileIn!

'./Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'./dynabook/Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSimpleEnvironment: #Environments!

(SimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

----STARTUP---- (11 April 2021 06:57:21) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


'./dynabook/Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 06:59:08'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 06:59:08'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 06:59:08'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 06:59:08'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 06:59:08'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

----STARTUP---- (11 April 2021 06:59:45) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 9000000000!

'./dynabook/Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:00:16'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:00:16'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:00:16'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:00:16'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:00:16'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 07:00:49) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!Behavior methodsFor: 'private' stamp: 'GDK 4/11/2021 07:01:14' prior: 16799739!
         z#H4sIAAAAAAAAAH1UTWvbQBA9S79i8KkpQdBeCiYpOKUFQ1KXOPRSWhitZqVtV7vqzsqqS358
Z+UPOSbpxaykN+/NezPrBl1l6RMaa1x9g2zUZxrmwOYv3dPvnjhSlWezF2A1RQYmFwF1pADl
8UuDDFrgVIGUAlrrh8QECKxwQ64WIqgxlFgTKG8tqWi8g+jBK9WHAuChoVPwBBKawVgrIhuS
n64jl3QYolR8vQPDgALcYEx16eUrvWv9YmpRBJZamF6wlgpGQjcS7PuggylpM5CyaFrgXmuj
jKQgbNyhop1lqK0v0T5nUhoMkq4JVEkb9xTDdp/gHixMB7g4SHR18EM6t9R6QRsNjhQxY9gW
ucC/BNMa8UwFLBwPQoWi4ziik4a8FheiKh0zS3ixGV25vi0FKV+Nq+gPljYpbzCYdJTRdqSM
NuK33I4FGOq+FaeXTzdETKQAU1cnMnJwPoVyJAcfdpiJaY+SuDrPowFYukg1hcsJHWgiI+f7
ujnkgBvRTdQFfOS0iQZtAWsiWJU/JT6ovBp1cAx+aDAueTGFNZPsrrrD4xzevXmfZ49iNxIf
7cFjnp29mV/L3ls9AtcSxUov91mvdHo+u0JFnq1buQQR7a/DjD/sBgxX52pGP4Se5nmWfTsp
kvnfjZ5vtot4S8hxfl74Gt5+F6VZOF2oZ5dwXCkJnE2aSuKe5dmP0dGT+/D/P4Z/NfepTT0E
AAA=! !

----SNAPSHOT----(11 April 2021 07:01:17) Cuis5.0-4526.image priorSource: 99659!

'./dynabook/Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:02:10'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:02:10'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:02:10'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:02:10'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:02:10'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

----STARTUP---- (11 April 2021 07:02:18) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 40000000000!

----STARTUP---- (11 April 2021 07:03:32) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


'./dynabook/Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:04:04'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:04:04'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:04:04'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:04:04'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:04:04'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

----STARTUP---- (11 April 2021 07:04:37) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 40000000000!

'./dynabook/Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:05:27'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:05:27'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:05:27'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:05:27'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:05:27'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

----STARTUP---- (11 April 2021 07:05:35) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 10000000000!

'./dynabook/Environments.st' asFileEntry readStreamDo: [:x|x fileIn]!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:07:01'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:07:01'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:07:01'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:07:01'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:07:01'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 07:09:54) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 10000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:11:45'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:11:45'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:11:45'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:11:45'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:11:45'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

managerClass
	"Answer the environment manager class."

	^ EnvironmentManager !

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

environmentClass
	"Answer the environment manager class."
	
	^ Environment!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

singleInstanceGlobalName
	"Answer the name at which our single instance is put into Smalltalk.

	Answer nil if you do not want the single instance installed in Smalltalk.	"
	
	^ #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

initialize
	"Trigger class initialization upon install."

	super initialize!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

environment
	"Answer the value of environment"

	self assert: environment notNil.
	^ environment!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

externalSymbol
	"Answer the value of externalSymbol"

	self assert: externalSymbol notNil.
	^ externalSymbol!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

internalSymbol
	"Answer the value of internalSymbol"

	self assert: internalSymbol notNil.
	^ internalSymbol!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'class membership' stamp: 'KLG 11/3/2020 18:26:49'!

environmentRootClass
	"Answer the environment class."
	
	^ self class environmentRootClass!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:21:00'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class methodsFor: 'class membership' stamp: 'KLG 11/4/2020 14:54:05'!

environmentRootClass
	"Answer the environment class."
	
	^ Environment!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/4/2020 14:59:51'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:09:08'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 17:04:21'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 09:38:29'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:41:04'!

Class methodsFor: '*Environments' stamp: 'KLG 11/3/2020 16:40:37'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:01:57'!

Class methodsFor: '*Environments' stamp: 'KLG 11/5/2020 18:02:21'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----SNAPSHOT----(11 April 2021 07:11:50) Cuis5.0-4526.image priorSource: 124387!

----STARTUP---- (11 April 2021 07:13:44) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:14:05'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:14:05'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:14:05'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:14:05'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:14:05'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

----STARTUP---- (11 April 2021 07:15:41) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 20000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:16:22'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:16:22'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:16:22'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:16:22'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:16:22'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

metaclassClass
	"Answer the proper meta class for me."

	^ EnvironmentMetaclass!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

----STARTUP---- (11 April 2021 07:18:17) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 40000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:18:54'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:18:54'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:18:54'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:18:54'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:18:54'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 16:39:00'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 15:37:45'!

(SystemSimpleEnvironments>>#Environments>>#Environment) class methodsFor: 'manager' stamp: 'KLG 11/4/2020 16:28:43'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'instance creation' stamp: 'KLG 11/4/2020 12:27:49'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'denoting objects' stamp: 'KLG 11/4/2020 08:19:21'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class methodsFor: 'initialization' stamp: 'KLG 11/5/2020 19:14:35'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'accessing' stamp: 'KLG 11/3/2020 16:20:07'!

----STARTUP---- (11 April 2021 07:20:01) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:21:03'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:21:03'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:21:03'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:21:03'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:21:03'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

initialize
	"Initialize our instance variables (what else, Dude?"

	super initialize.
	bindingsDirty _ true.
	importSpecifications _ GlobalBindingIdentityDictionary new.
	importedBindings _ GlobalBindingIdentityDictionary new
	!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ ImportSpecification!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

environmentManagerClass
	"Answer the environment manager class."

	^ EnvironmentManager!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 07:21:49) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Smalltalk growMemoryByAtLeast: 40000000000!

'From Cuis 5.0 [latest update: #4439] on 5 November 2020 at 7:40:15 pm'!

'Description Environments that support imports from other environments or simple environments.'!

SystemOrganization addCategory: 'Environments'!

SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) category: 'Environments' stamp: 'GDK 4/11/2021 07:22:13'!
SystemSimpleEnvironmentMetaclass subclass: #EnvironmentMetaclass
	instanceVariableNames: 'importSpecifications bindingsDirty importedBindings'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) category: 'Environments' stamp: 'GDK 4/11/2021 07:22:13'!
SystemSimpleEnvironmentClassBuilder subclass: #EnvironmentClassBuilder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentClassBuilder) class
	instanceVariableNames: ''!

SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#Environment) category: 'Environments' stamp: 'GDK 4/11/2021 07:22:13'!
SystemSimpleEnvironment subclass: #Environment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#Environment) class
	instanceVariableNames: ''!

SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) category: 'Environments' stamp: 'GDK 4/11/2021 07:22:13'!
SystemSimpleEnvironmentManager subclass: #EnvironmentManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentManager) class
	instanceVariableNames: ''!

Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

!classDefinition: (SystemSimpleEnvironments>>#Environments>>#ImportSpecification) category: 'Environments' stamp: 'GDK 4/11/2021 07:22:13'!
Object subclass: #ImportSpecification
	instanceVariableNames: 'environment externalSymbol internalSymbol'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Environments'
	inSystemSimpleEnvironment: #Environments!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) class
	instanceVariableNames: ''!

I am the metaclass for environments.!

I am the class builder for environments with imports.

Currently we sole purpose is to direct the framework to use right metaclass.!

I am an environment with imports.!

I am the environment manager for normal environments.!

I specified an imported symbol.!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:31:08'!

(SystemSimpleEnvironments>>#Environments>>#ImportSpecification) methodsFor: 'fileIn/Out' stamp: 'KLG 11/3/2020 18:33:24'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:29:56'!

buildImportedBindings
	"Build the imported bindings."

	importSpecifications do: [ :importSpecification | | internalSymbol externalValue |
		externalValue _ importSpecification environment at: importSpecification externalSymbol.
		importedBindings
			at: (internalSymbol _ importSpecification internalSymbol)
			ifPresent: [ :ignoredValue |
				importedBindings associationAt: internalSymbol :: value: externalValue ]
			ifAbsent: [
				importedBindings
					at: internalSymbol
					put: externalValue ]].
	importedBindings associationsDo: [ :assoc |
		importSpecifications includesKey: assoc key :: ifFalse: [
			assoc value: nil ] ].
	bindingsDirty _ false!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/3/2020 16:28:55'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 08:53:01'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'importing' stamp: 'KLG 11/5/2020 09:37:54'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'class builder interface' stamp: 'KLG 11/5/2020 08:54:03'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:27:20'!

importSpecificationClass
	"Answer the class of the import specifications."

	^ self class importSpecificationClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'converting' stamp: 'KLG 11/3/2020 18:21:12'!

environmentManagerClass
	"Answer the environment manager class."

	^ self class environmentManagerClass!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) methodsFor: 'initialization' stamp: 'KLG 11/5/2020 08:40:29'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'instance creation' stamp: 'KLG 11/3/2020 16:22:56'!

(SystemSimpleEnvironments>>#Environments>>#EnvironmentMetaclass) class methodsFor: 'converting' stamp: 'KLG 11/4/2020 12:31:29'!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Environments.st----!

----STARTUP---- (11 April 2021 07:23:25) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


SystemSimpleEnvironment subclass: #SystemEnvironment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-SystemEnvironments'
	iSSe: #SystemEnvironments!

!classDefinition: (SystemSimpleEnvironments>>#SystemEnvironments>>#SystemEnvironment) category: 'Kernel-SystemEnvironments' stamp: 'GDK 4/11/2021 07:24:46'!
SystemSimpleEnvironment subclass: #SystemEnvironment
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-SystemEnvironments'
	inSystemSimpleEnvironment: #SystemEnvironments!

----QUIT----(11 April 2021 08:12:26) Cuis5.0-4526.image priorSource: 124387!

----STARTUP---- (11 April 2021 09:57:16) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(11 April 2021 14:04:15) Cuis5.0-4526.image priorSource: 203764!

----STARTUP---- (11 April 2021 16:29:21) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


PortalMorph subclass: #LockedPortalMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

!classDefinition: #LockedPortalMorph category: 'Morphic-Portals' stamp: 'GDK 4/11/2021 16:37:57'!
PortalMorph subclass: #LockedPortalMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

PortalMorph subclass: #LockedPortalMorph
	instanceVariableNames: 'lock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

!classDefinition: #LockedPortalMorph category: 'Morphic-Portals' stamp: 'GDK 4/11/2021 16:38:09'!
PortalMorph subclass: #LockedPortalMorph
	instanceVariableNames: 'lock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

----SNAPSHOT----(11 April 2021 16:38:12) Cuis5.0-4526.image priorSource: 203968!
!LockedPortalMorph methodsFor: 'no messages' stamp: 'GDK 4/11/2021 16:38:59' overrides: 16948855!
               z#H4sIAAAAAAAAAMvMyyzJTMzJrErlKi4tSC1SQAjoceXkJ2crxCukJeYUp+oBAGYPdQgqAAAA! !
!LockedPortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/11/2021 16:39:29'!
                            z#H4sIAAAAAAAAACtOLfHJT862UkjiqlHIUajhylGIV8gBiuhxgUggp6SoNFWPKy46SaEsMac0
NVYhNa+4tCjVSiEaqiAnVg8AA11c/0YAAAA=! !
!LockedPortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/11/2021 16:40:16' overrides: 16980810!
   z#H4sIAAAAAAAAAEspSiz3z7NSSObKyU/OVshMCykqTbVSiI4rTs1Ji9XjKi4tSC1SgKsCAANj
uNIvAAAA! !
!LockedPortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/11/2021 16:41:29' overrides: 16980802!
                               z#H4sIAAAAAAAAAEvJLC5ILEnOcC1LzSuxUkj0zS8qyMhMBnO5cvKTsxUy00KKSlOtFKLjilNz
0hQKUovS8otyrRSU0bSWZ5ZkOBall+YCecVWCtWoZtUqZOYFlwI1J+ckFgOlwXKxelxxxSBB
BTSzULQqAACPPgSYpAAAAA==! !

----SNAPSHOT----(11 April 2021 16:41:45) Cuis5.0-4526.image priorSource: 204956!

----QUIT----(11 April 2021 17:04:39) Cuis5.0-4526.image priorSource: 205967!

----STARTUP---- (12 April 2021 14:05:46) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(12 April 2021 14:21:48) Cuis5.0-4526.image priorSource: 206049!

----STARTUP---- (12 April 2021 14:22:22) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!LockedPortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/12/2021 18:06:42' prior: 50338072 overrides: 16980810!
            z#H4sIAAAAAAAAAEspSiz3z7NSSObKyU/OVshMCykqTbVSiI4rTs1Ji9XjAlEKxaklPkBZoHBx
aUFqkQJcUywAi5DTXz8AAAA=! !
!LockedPortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/12/2021 18:06:54' prior: 50338079 overrides: 16980802!
                               z#H4sIAAAAAAAAAEvJLC5ILEnOcC1LzSuxUkj0zS8qyMhMBnO5cvKTsxUy00KKSlOtFKLjilNz
0hQKUovS8otyrRSU0bSWZ5ZkOBall+YCecVWCtWoZtUqZOYFlwI1J+ckFgOlwXKxelwQQ4tT
S3yAdgEtKQapUUAzGsWkWAC2dTb3swAAAA==! !

----SNAPSHOT----(12 April 2021 18:06:59) Cuis5.0-4526.image priorSource: 206253!

----SNAPSHOT----(12 April 2021 18:13:46) Cuis5.0-4526.image priorSource: 207035!

----QUIT----(12 April 2021 18:43:57) Cuis5.0-4526.image priorSource: 207117!

----STARTUP---- (14 April 2021 07:54:20) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


'From Cuis 5.0 [latest update: #4550] on 29 March 2021 at 10:53:54 am'!
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:36:18'!
       z#H4sIAAAAAAAAAEsqLSnJz3PKL0pJLQrPTCnJ4OKMUzAEAPWEz6gWAAAA! !
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:34:25'!
                              z#H4sIAAAAAAAAAMtNzSt1yi9KSS0Kz0wpyeDijFMoTs1JUyjKL81LCc/MS8kvd84vykstKlbI
TAspKk21Uog2iAWy3RJzikEcw1gAcfHQS0MAAAA=! !
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:46:06'!
     z#H4sIAAAAAAAAACtOLsrPyUlKLArOyC93Ki0pyc8r5uKMUygpKk0FAJCBUqIcAAAA! !
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:39:24'!
                      z#H4sIAAAAAAAAACXMsQrCQBCE4Tp5iinVQkmwSqmQykJQSCFRDneDC3FP9i6cSB7eRLv5i2+S
KPm080ZsjVB85NmIhDHPEm44GndsrHcOCNEpOaODhFh7jXh50XiSD2ODolj/RcIKi8B9B/OD
UiPz/d6bsgVId7aBK1y27bRr14c5ynY54etEf4QJT/euUHwB7dZg5JsAAAA=! !
!PluggableButtonMorph methodsFor: 'initialization' stamp: 'len 3/29/2021 10:36:35' prior: 16977151 overrides: 16978551!
                    z#H4sIAAAAAAAAAEtJTUsszSlxyi9KSS0Kz0wpyeDijFMIyUjNTVVILi0qSs0rUUgqLSnJz0NS
AgBBx3vcNQAAAA==! !
!SystemWindow methodsFor: 'drawing' stamp: 'len 3/29/2021 10:41:37' prior: 17063927 overrides: 17112261!
                        z#H4sIAAAAAAAAAI2QwWrDMAyGz85TiD5AHyDXQE8jhS2wwwhFi5VUoNpFdpZLH352Ujp3h7Gb
LP36v9+yisvR1YANui8MlblB5CjUePEK6mdnG6+ONMCtMsXoBIFkhIXtRDGsvX1l1h6Hzl/f
2Vm/VMbw2OlMNXzA03bxEJ7OkRT6ZPBEPEF3pgvBMKuSi1uczfgu+bVR4lJtdq95CMNdDMdr
ZO9QNjpMipaT8X6XxWv2fI91iexB8ULFbZJNSluXyfsVeEAJD2Lrt5g/0NT5E9cIhsDDf3Dp
u4KfJG9R2U3AY+tjy5KP+7B7yYLSp/8GONp7BOQBAAA=! !
!SystemWindow methodsFor: 'initialization' stamp: 'len 3/29/2021 10:39:47' prior: 17064102 overrides: 16978551!
                          z#H4sIAAAAAAAAAEtJTUsszSlxyi9KSS0Kz0wpyeDiVHLMKy5PLVIoyUhVgMorJIEVKJSDVCik
5UMki1KTUzPLUov0lLg44xRCMlJzUxWSS4uKUvNKgCrzUvLLkcwFANSFtRFqAAAA! !
!SystemWindow methodsFor: 'initialization' stamp: 'len 3/29/2021 10:42:48' prior: 17064157!
                     z#H4sIAAAAAAAAAEWNwQrCMBBEz8lXDD148NAq/oAKehb0rLQ6tYGQLclKRfx4Ez14W+btvFGn
nts2bh+qEtLuqQxqTbUJaWKEDgS/GVTwSEQvEVcv+ZpBMs4/LivQtRHdT1ID1pxy07cdPQa6
+6BwqfRvxdMRY5RRojoJrS9RGeolaMqEPSPDlamurHmDeFtDXHD4E0wu3GQ6lel9rmEUF/To
XsQcyxWaBstFbc2Za34AwqVBauMAAAA=! !
!SystemWindow methodsFor: 'label' stamp: 'len 3/29/2021 10:42:01' prior: 17064173!
            z#H4sIAAAAAAAAAMtJTErN8UjNTM8o4eJUcswrLk8tUijJSFXIAIsppOVDuOWZeSn55Qpg5XpK
XJxxCgFFqWmpRal5yanFUNmQzJKcVLf8vBKFnMy81OCCxOTMvHRtQwDHwWGvYwAAAA==! !
!BrowserWindow methodsFor: 'GUI building' stamp: 'len 3/29/2021 10:52:17' prior: 16811842!
                  z#H4sIAAAAAAAAAE2OQQrCMBBF1+kp5gQeoK5KNy4UBBV3SkymZiRNJDOhCj28tVHobpj3/uff
Mnm7i+npyLReM7fR5z6cSVwN5vvYEkulRjAzgLFSv+sKW/2OWeY0BBxKdPUXKqW0Ld0nxsb7
ReG6wMY+MgumJhSvBkbfwXLUYSAxDhk6eqHdIN2d1HB02COYnBIGmXyRGPY6YOHThEvZ8AF0
9c1n3wAAAA==! !
!ScrollBar methodsFor: 'geometry' stamp: 'len 3/29/2021 10:46:54' prior: 17012802!
z#H4sIAAAAAAAAAI2PQUsDMRCFz8mveMddC+K5pyIoeiu20IMskt2ddQPZTJlMVKQ/3hir0Ju3
x3uP780MvByz0i74kcRac8JIQR1O1vyIFzT7mRbCkEUoKtIgHELvZDfz+21W5Zjgp71kWuM5
UZjQV/fuQ0u/K9m9C+k7vOlarNDUziR0Xn1iXnCFNxcytXDpMSq9klxbU4s+PbD4T47qgjXm
b6lokyoAC8tx3nLy6jmu0bMU9+BHncvc+aHNhd1V0u9d/0Nt0FySK7hFhy8EfxkWRQEAAA==! !
!ScrollBar methodsFor: 'geometry' stamp: 'len 3/29/2021 10:47:46' prior: 17012846!
    z#H4sIAAAAAAAAAF2RwU7DMBBEz85XjHpqURoh1FNvIIHKlVbigApy0k1s4diVvWla1I/HcVpA
XFay983seF17orXRO/IvzrWZmNzb0JMHK4Ih27CC81CkG8VwdbofNAhJBOlJ5tAFFQhdyV5W
nJhLW3MgUxeZeK7R00AjCow5gZ1DUM4nVx9n5zA6ErEyG0KpucAYRtsGkmMcGRiLHHQgi17F
EidlYoyzlxWhTTHLaFNxl8ZYaiTrA+Vo5SeFMVvlnTGl9AiupV5F7y7I0lAxycQZZcfsbBj2
gXMm/h4/sFHUEqrOe7L867RWrn8YQeh64zta4m14+sXt8cgDf4O7bew/SRMG4HYbN/OO6TSR
Oqyc11/OsjSZED82NGqPmF+32jq/V696x2qbwKvfhTz9I1fp97azyIo5pqXzsZXkQ6BZpP+8
cRYXdVxi8Q3tNokgGQIAAA==! !
!ScrollBar methodsFor: 'initialization' stamp: 'len 3/29/2021 10:48:07' prior: 17012892!
                   z#H4sIAAAAAAAAAF1RvU7DMBCenac4hYGJPkCmij+xsNBKHVBBTnzBJ13syL4QVPXhcRyVNGy2
7/s9kyMhzXTCRz+6+0HEu0KVyzOIRQjYIH1juI1g/mBlUagzIJwLhfAJEbmFOk+efgSdbAq1
gNeAB9YxgsNxjem8Qa4y8P8g9HZWrQC3mKZ7ix1CM4SQHiE2wTPXOuysH2dSBGqfNUes4P0j
ax4TLYfQxrxOitVVG+h9TJ29SwbZCO6g9sFgOJARm264ylQopRs5WEyEm7nVToh5WuNGqVI8
oNM1I3QDC/XpkPBJP8UCi2yyd3mJRPHFBzp5J5qTNLX7MEzJ560NvdGCb/RlZXZfJT9mwqXr
NWP50zXhFxPcBYz2AQAA! !
!ScrollBar methodsFor: 'initialization' stamp: 'len 3/29/2021 10:48:16' prior: 17012919!
z#H4sIAAAAAAAAAF2RPW7DMAyFZ+kUhDt08wE8Bf1Dh3ZKigxFWsgWAwmgJUOi6iLI4cvaSep0
I8iPj+9JPnj2hvwB34a7whyDVtVfE9ghJOzQf2G6zVBOUKW1OgLCUSuET8hIe2inyeM3Y+Ba
qzN6Pb4nkzMEHJdEHy1SM2HX7TS4Wa8BXKHMNg57hK6kJE3IXYpErUlrF8d5KYPfb1LBBt4/
JsGdbE33jbWvv4LNJQQMMUvQGBpoY7KYtt6yWy3qhRutlOl461DomznLmj3RQxxDrVTFETCY
lhD6QuwHKYQXcTEEDsmCFbI6mfH5OSZ/iIENifLF8/xUZbCG8QX3PN9eWN5N9JOh/B8//98S
rvUPzE18Y+ABAAA=! !
!MenuMorph methodsFor: 'initialization' stamp: 'len 3/29/2021 10:35:08' prior: 16934985 overrides: 17112237!
                z#H4sIAAAAAAAAAEtJTUsszSlxyi9KSS0Kz0wpyeDijFMIyUjNTVVILi0qSs0rUchNzStFUgAA
OWdLxTMAAAA=! !

Theme removeSelector: #minimalWindows!

!methodRemoval: Theme #minimalWindows stamp: 'GDK 4/14/2021 08:07:59'!
minimalWindows
	^ false!

Theme removeSelector: #showScrollbarButtons!

Theme removeSelector: #steButtons!

!methodRemoval: Theme #steButtons stamp: 'GDK 4/14/2021 08:08:00'!
steButtons
	^false!

Preferences class removeSelector: #menuBorderWidth!

!methodRemoval: Preferences class #menuBorderWidth stamp: 'GDK 4/14/2021 08:08:01'!
menuBorderWidth

	^self parameters at: #menuBorderWidth ifAbsentPut: [ 1 ]!

Preferences class removeSelector: #systemWindowBorderSize!

!methodRemoval: Preferences class #systemWindowBorderSize stamp: 'GDK 4/14/2021 08:08:02'!
systemWindowBorderSize
	| w |
	w _ Preferences standardListFont pointSize / 11.
	Theme current minimalWindows ifFalse: [
		w _ w * (Theme current roundWindowCorners ifTrue: [ 4 ] ifFalse: [ 2 ])].
	^w rounded max: 1!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/4568-MinimalWindowsCleanup-LucianoEstebanNotarfrancesco-2021Mar29-10h32m-len.001.st----!

----SNAPSHOT----(14 April 2021 08:08:07) Cuis5.0-4526.image priorSource: 207199!
!ScrollBar methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 08:09:28'!
            z#H4sIAAAAAAAAACstSEksSXXJL89zKi0pyc+zUqhQAABQV85mFAAAAA==! !
!SystemWindow methodsFor: 'drawing' stamp: 'GDK 4/14/2021 08:10:17' prior: 50338168 overrides: 17112261!
                         z#H4sIAAAAAAAAAI2QwWrDMAyGz85TiDxAHyDXQE8jhS6wwwhFi5VU4NpFdpZLH362Uzq3h7Gb
LP36v9/SguvBNoAt2m/0lbpB4GCodcYJiFusbp1YEg+3ShWjE3gyE6ysZwo+93aVyj32vbt+
sNVurZTiqZeFGviEp+3iYXg+BxIYosET8QT9mS4E4yJCNmxxNuO75GWjxMVa1cc0hPEuhsM1
sLNoNjrMgpqj8a5O4pw93SMvkd4LXqi4TbSJaZsy+ZCBezT+QezcFvMXGjt/4lqD3vP4H1z8
bm3wi8x7ELYz8NS50LFJ1334vSVBaTTUP/mmznvmAQAA! !

'From Cuis 5.0 [latest update: #4528] on 8 February 2021 at 5:52:57 pm'!
!ScrollBar methodsFor: 'initialization' stamp: 'jmv 2/8/2021 17:17:37' prior: 50338322!
        z#H4sIAAAAAAAAAHWPMVLDQAxFa/sUGtOEhgOEbkmTgsCMuYDsVWwN612PVhtPOD2WDXR0mv/1
35fK7FHplJboimqKR8D3UIYBu0C78ppkHuuq2TdBRwKUoUwUFTADgv8LPwHMZVUh0gI84UDA
MbOnpq6rf7gV99Z6cKwu6AvGm0FF0vJ2PbFQr2z+g7VA5i86QttLCsGhQN6mDuVj5P4zUs6P
zz/IC05kMcHFvjuvkln4y9ujZpksqUS/39XqPazJK4ZMm0XGuBB58t+3szQmLgEAAA==! !
!ScrollBar methodsFor: 'initialization' stamp: 'jmv 2/8/2021 17:36:03'!
                   z#H4sIAAAAAAAAAHWPTY7CMAyF1+0pLNjAhgMwu8JmJOggwRzANG5rkSaV41DB6WkosGNnvZ/P
duwNKu2o1iKqercGPNjYNHi2NCl7L32bZ7MpCdoSoDSxI6eAARDsp7wC6OOogqMBuMOGgF1g
Q7M8z75wM67S1kXBWljdoLsmqIgf/uotC1XKyZ+nLRD4Tms4VuKtLVAgPKczyqnl6uIohOXP
C1liN0bnRnBI3/2OUrLwzZuq/30SxUdnpquOerNjr0Yb6GlRIpREhswDvPU33ywBAAA=! !
!ScrollBar methodsFor: 'initialization' stamp: 'jmv 2/8/2021 17:19:03'!
                   z#H4sIAAAAAAAAAHWPv3LCMAzG5+QpdLC0Cw8AW2BhgHLQFxCxcHR17JwsNwdP39gpx8Sm+/78
JKXBoNKZbadNUg1+DXhyyVq8OpqVQ5Chq6vFHAXtCFBs6skrYAQEebVXAEOaZPA0AvdoCdhH
NrSo6+oNuOI2r/1oWBunW/S/mSoSxq/bjoVa5ewvyxqI/KA1XFoJzjUoEMt0RfnuuP3xFOPn
5p95xH6KLo3gWB7cT1r28Emcu7swFllC8ma+7KJ3N1Vv6CIVizLkSGTI/AFXwk1+MgEAAA==! !
!ScrollBar methodsFor: 'initialization' stamp: 'jmv 2/8/2021 17:19:41'!
               z#H4sIAAAAAAAAAHWOMW7DMAxFZ/sURLK0Sw7gbm6XDk0CpD4AYzEyUVkSKKpGcvpaUTNmE97/
/1E5GlQaYp9Vg+8Ajy5bi2dHlXwFiVPbbGoPdCJAsXkmr4AJEITtpLW7A4h5xeBpAZ7RErBP
bGjTts0TccNjOfvSs/ZO39H/FqtIWA6XDxYalUu+zRES36iD0yjBuR4F0v11RvmeePzxlNLr
279wj/Na3RrBZYifKygBPlx1OMQCJWRv6o9OenXr6oIu0T2ist8TGTJ/l6meOicBAAA=! !
!ScrollBar methodsFor: 'geometry' stamp: 'jmv 2/8/2021 17:51:52' prior: 17012826 overrides: 16943890!
                     z#H4sIAAAAAAAAAIWQy07DMBBF185XDNmwIh8QqQhBQSx4CYFYoAi5eJJYcj2RPaYt6sfjPJqm
BYnNyPO4Z64H14yWr2ppK1Q5kFHX67aSiPQxOMAugc++n8F98AxGbigw+LBYkmtqD7KS2mZp
Irag/S2sZAzbJBE+NLhj/F6RxR1zQm9PGZb0hScRkIbmMjCThQ79RF6zJpvDgpxC96YV1xeT
d7tU0cr+LRrcn03VMTsWjHY64x97h2CJH7QBaaPv9315DeeToU0RpbpTejRlewJy+pssSzN0
Zv1NdHkjjcfISkRbj1Ho8sWFoSREBwiNkox3WHLvMofdVbLjoWdd1ePU5F9Fj56sO5C9Nv+S
5yPsEFxkPz/W3aAzAgAA! !
!ScrollBar methodsFor: 'initialization' stamp: 'jmv 2/8/2021 17:21:07' prior: 50338250!
 z#H4sIAAAAAAAAAF1RzU7DMAw+p09hlQMn9gA9If7EhQtM6gENlDUeseQmVeIyNO3h8VKx0t0c
+/uzQ4GELNMBH+I+3I0iMVSmntsgHiFhh/SN6TqDO8PqqjJHQDhWBuETMvIOtmXy+CMYZFWZ
GbwE3LPNGQLul5g+OuSmAC8HafCTagN4izpde+wRujElbUKvgXvLLQVlZaDdOo3YwPtHEdso
vrhb515OUs2/NWCIWZeNQZWLA9zANiaHqSUnXl+4CFMZYztpPSrhalrnTYj5dL+VMbVEwGC3
jNCPLDRooXjV11TgkV3xrv8iUX6OiQ4xiGWVPiefzjUOzgq+0peXyX2RfFMIT5bzJWP+zCXh
F59L+UnvAQAA! !
!ScrollBar methodsFor: 'initialization' stamp: 'jmv 2/8/2021 17:35:47' prior: 50338265!
         z#H4sIAAAAAAAAAF2Rz07DMAyHz8lTWOXArQ/Q08Q/cYATQz2ggdLGVSK5SZU4DE17eEzLRsct
sj/9/NnxwbM35A/4Ot0U5hi0qv6KwA4hYY/+E9N1hvILVVqrIyActUL4gIw0QDd37r8YA9da
ndDL9i2ZnCHgfk2M0SI1M3ZZTpNb8hrADUpv63BE6EtKUoRRREdDrQ827jP4YZsKNvD2Pkft
hJ8nG2uff6Kasz5MMcuKMTTQxWQxtd6y26zeKw+tlOm5dSj01bLFC3uiu7gPtVIVR8BgOkIY
C7Gf5CG8hIsQOCQLYicXW2R8fozJH2JgQ5J8dl6OVCZrGJ9w4GX2Snk30w+G8n/89HNruNbf
vQ0q0NoBAAA=! !

PluggableButtonMorph removeSelector: #updateDownButtonImage!

!methodRemoval: PluggableButtonMorph #updateDownButtonImage stamp: 'Install-4529-ScrollbarFix-JuanVuletich-2021Feb08-17h50m-jmv.001.cs.st 4/14/2021 08:15:56'!
updateDownButtonImage
	"update the receiver's as a downButton.  put a new image inside"

	icon _ BitBltCanvas arrowOfDirection: #down size: ScrollBar scrollbarThickness.
	self iconName: #drawDownIcon.
	actionSelector _ #scrollDown.
	self
		roundButtonStyle: false;
		redrawNeeded!

PluggableButtonMorph removeSelector: #updateUpButtonImage!

!methodRemoval: PluggableButtonMorph #updateUpButtonImage stamp: 'Install-4529-ScrollbarFix-JuanVuletich-2021Feb08-17h50m-jmv.001.cs.st 4/14/2021 08:15:57'!
updateUpButtonImage
	"update the receiver's as a upButton. put a new image inside"

	icon _ BitBltCanvas arrowOfDirection: #up size: ScrollBar scrollbarThickness.
	self iconName: #drawUpIcon.
	actionSelector _ #scrollUp.
	self
		roundButtonStyle: false;
		redrawNeeded!

PluggableButtonMorph removeSelector: #updateLeftButtonImage!

!methodRemoval: PluggableButtonMorph #updateLeftButtonImage stamp: 'Install-4529-ScrollbarFix-JuanVuletich-2021Feb08-17h50m-jmv.001.cs.st 4/14/2021 08:15:58'!
updateLeftButtonImage
	"update the receiver's as a downButton.  put a new image inside"

	icon _ BitBltCanvas arrowOfDirection: #left size: ScrollBar scrollbarThickness.
	self iconName: #drawLeftIcon.
	actionSelector _ #scrollUp.
	self
		roundButtonStyle: false;
		redrawNeeded!

PluggableButtonMorph removeSelector: #updateRightButtonImage!

!methodRemoval: PluggableButtonMorph #updateRightButtonImage stamp: 'Install-4529-ScrollbarFix-JuanVuletich-2021Feb08-17h50m-jmv.001.cs.st 4/14/2021 08:15:59'!
updateRightButtonImage
	"update the receiver's as a downButton.  put a new image inside"

	icon _ BitBltCanvas arrowOfDirection: #right size: ScrollBar scrollbarThickness.
	self iconName: #drawRightIcon.
	actionSelector _ #scrollDown.
	self
		roundButtonStyle: false;
		redrawNeeded!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/4529-ScrollbarFix-JuanVuletich-2021Feb08-17h50m-jmv.001.cs.st----!

'From Cuis 5.0 [latest update: #4550] on 29 March 2021 at 10:53:54 am'!
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:36:18' prior: 50338134!
           z#H4sIAAAAAAAAAEsqLSnJz3PKL0pJLQrPTCnJ4OKMUzAEAPWEz6gWAAAA! !
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:34:25' prior: 50338139!
              z#H4sIAAAAAAAAAMtNzSt1yi9KSS0Kz0wpyeDijFMoTs1JUyjKL81LCc/MS8kvd84vykstKlbI
TAspKk21Uog2iAWy3RJzikEcw1gAcfHQS0MAAAA=! !
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:46:06' prior: 50338145!
                     z#H4sIAAAAAAAAACtOLsrPyUlKLArOyC93Ki0pyc8r5uKMUygpKk0FAJCBUqIcAAAA! !
!Theme methodsFor: 'other options' stamp: 'len 3/29/2021 10:39:24' prior: 50338150!
      z#H4sIAAAAAAAAACXMsQrCQBCE4Tp5iinVQkmwSqmQykJQSCFRDneDC3FP9i6cSB7eRLv5i2+S
KPm080ZsjVB85NmIhDHPEm44GndsrHcOCNEpOaODhFh7jXh50XiSD2ODolj/RcIKi8B9B/OD
UiPz/d6bsgVId7aBK1y27bRr14c5ynY54etEf4QJT/euUHwB7dZg5JsAAAA=! !
!PluggableButtonMorph methodsFor: 'initialization' stamp: 'len 3/29/2021 10:36:35' prior: 50338161 overrides: 16978551!
                    z#H4sIAAAAAAAAAEtJTUsszSlxyi9KSS0Kz0wpyeDijFMIyUjNTVVILi0qSs0rUUgqLSnJz0NS
AgBBx3vcNQAAAA==! !
!SystemWindow methodsFor: 'drawing' stamp: 'len 3/29/2021 10:41:37' prior: 50338328 overrides: 17112261!
                        z#H4sIAAAAAAAAAI2QwWrDMAyGz85TiD5AHyDXQE8jhS2wwwhFi5VUoNpFdpZLH352Ujp3h7Gb
LP36v9+yisvR1YANui8MlblB5CjUePEK6mdnG6+ONMCtMsXoBIFkhIXtRDGsvX1l1h6Hzl/f
2Vm/VMbw2OlMNXzA03bxEJ7OkRT6ZPBEPEF3pgvBMKuSi1uczfgu+bVR4lJtdq95CMNdDMdr
ZO9QNjpMipaT8X6XxWv2fI91iexB8ULFbZJNSluXyfsVeEAJD2Lrt5g/0NT5E9cIhsDDf3Dp
u4KfJG9R2U3AY+tjy5KP+7B7yYLSp/8GONp7BOQBAAA=! !
!SystemWindow methodsFor: 'initialization' stamp: 'len 3/29/2021 10:39:47' prior: 50338183 overrides: 16978551!
                          z#H4sIAAAAAAAAAEtJTUsszSlxyi9KSS0Kz0wpyeDiVHLMKy5PLVIoyUhVgMorJIEVKJSDVCik
5UMki1KTUzPLUov0lLg44xRCMlJzUxWSS4uKUvNKgCrzUvLLkcwFANSFtRFqAAAA! !
!SystemWindow methodsFor: 'initialization' stamp: 'len 3/29/2021 10:42:48' prior: 50338191!
                     z#H4sIAAAAAAAAAEWNwQrCMBBEz8lXDD148NAq/oAKehb0rLQ6tYGQLclKRfx4Ez14W+btvFGn
nts2bh+qEtLuqQxqTbUJaWKEDgS/GVTwSEQvEVcv+ZpBMs4/LivQtRHdT1ID1pxy07cdPQa6
+6BwqfRvxdMRY5RRojoJrS9RGeolaMqEPSPDlamurHmDeFtDXHD4E0wu3GQ6lel9rmEUF/To
XsQcyxWaBstFbc2Za34AwqVBauMAAAA=! !
!SystemWindow methodsFor: 'label' stamp: 'len 3/29/2021 10:42:01' prior: 50338202!
            z#H4sIAAAAAAAAAMtJTErN8UjNTM8o4eJUcswrLk8tUijJSFXIAIsppOVDuOWZeSn55Qpg5XpK
XJxxCgFFqWmpRal5yanFUNmQzJKcVLf8vBKFnMy81OCCxOTMvHRtQwDHwWGvYwAAAA==! !
!BrowserWindow methodsFor: 'GUI building' stamp: 'len 3/29/2021 10:52:17' prior: 50338210!
                  z#H4sIAAAAAAAAAE2OQQrCMBBF1+kp5gQeoK5KNy4UBBV3SkymZiRNJDOhCj28tVHobpj3/uff
Mnm7i+npyLReM7fR5z6cSVwN5vvYEkulRjAzgLFSv+sKW/2OWeY0BBxKdPUXKqW0Ld0nxsb7
ReG6wMY+MgumJhSvBkbfwXLUYSAxDhk6eqHdIN2d1HB02COYnBIGmXyRGPY6YOHThEvZ8AF0
9c1n3wAAAA==! !
!ScrollBar methodsFor: 'geometry' stamp: 'len 3/29/2021 10:46:54' prior: 50338220!
z#H4sIAAAAAAAAAI2PQUsDMRCFz8mveMddC+K5pyIoeiu20IMskt2ddQPZTJlMVKQ/3hir0Ju3
x3uP780MvByz0i74kcRac8JIQR1O1vyIFzT7mRbCkEUoKtIgHELvZDfz+21W5Zjgp71kWuM5
UZjQV/fuQ0u/K9m9C+k7vOlarNDUziR0Xn1iXnCFNxcytXDpMSq9klxbU4s+PbD4T47qgjXm
b6lokyoAC8tx3nLy6jmu0bMU9+BHncvc+aHNhd1V0u9d/0Nt0FySK7hFhy8EfxkWRQEAAA==! !
!ScrollBar methodsFor: 'geometry' stamp: 'len 3/29/2021 10:47:46' prior: 50338232!
    z#H4sIAAAAAAAAAF2RwU7DMBBEz85XjHpqURoh1FNvIIHKlVbigApy0k1s4diVvWla1I/HcVpA
XFay983seF17orXRO/IvzrWZmNzb0JMHK4Ih27CC81CkG8VwdbofNAhJBOlJ5tAFFQhdyV5W
nJhLW3MgUxeZeK7R00AjCow5gZ1DUM4nVx9n5zA6ErEyG0KpucAYRtsGkmMcGRiLHHQgi17F
EidlYoyzlxWhTTHLaFNxl8ZYaiTrA+Vo5SeFMVvlnTGl9AiupV5F7y7I0lAxycQZZcfsbBj2
gXMm/h4/sFHUEqrOe7L867RWrn8YQeh64zta4m14+sXt8cgDf4O7bew/SRMG4HYbN/OO6TSR
Oqyc11/OsjSZED82NGqPmF+32jq/V696x2qbwKvfhTz9I1fp97azyIo5pqXzsZXkQ6BZpP+8
cRYXdVxi8Q3tNokgGQIAAA==! !
!ScrollBar methodsFor: 'initialization' stamp: 'len 3/29/2021 10:48:07' prior: 50338408!
                   z#H4sIAAAAAAAAAF1RvU7DMBCenac4hYGJPkCmij+xsNBKHVBBTnzBJ13syL4QVPXhcRyVNGy2
7/s9kyMhzXTCRz+6+0HEu0KVyzOIRQjYIH1juI1g/mBlUagzIJwLhfAJEbmFOk+efgSdbAq1
gNeAB9YxgsNxjem8Qa4y8P8g9HZWrQC3mKZ7ix1CM4SQHiE2wTPXOuysH2dSBGqfNUes4P0j
ax4TLYfQxrxOitVVG+h9TJ29SwbZCO6g9sFgOJARm264ylQopRs5WEyEm7nVToh5WuNGqVI8
oNM1I3QDC/XpkPBJP8UCi2yyd3mJRPHFBzp5J5qTNLX7MEzJ560NvdGCb/RlZXZfJT9mwqXr
NWP50zXhFxPcBYz2AQAA! !
!ScrollBar methodsFor: 'initialization' stamp: 'len 3/29/2021 10:48:16' prior: 50338423!
z#H4sIAAAAAAAAAF2RPW7DMAyFZ+kUhDt08wE8Bf1Dh3ZKigxFWsgWAwmgJUOi6iLI4cvaSep0
I8iPj+9JPnj2hvwB34a7whyDVtVfE9ghJOzQf2G6zVBOUKW1OgLCUSuET8hIe2inyeM3Y+Ba
qzN6Pb4nkzMEHJdEHy1SM2HX7TS4Wa8BXKHMNg57hK6kJE3IXYpErUlrF8d5KYPfb1LBBt4/
JsGdbE33jbWvv4LNJQQMMUvQGBpoY7KYtt6yWy3qhRutlOl461DomznLmj3RQxxDrVTFETCY
lhD6QuwHKYQXcTEEDsmCFbI6mfH5OSZ/iIENifLF8/xUZbCG8QX3PN9eWN5N9JOh/B8//98S
rvUPzE18Y+ABAAA=! !
!MenuMorph methodsFor: 'initialization' stamp: 'len 3/29/2021 10:35:08' prior: 50338281 overrides: 17112237!
                z#H4sIAAAAAAAAAEtJTUsszSlxyi9KSS0Kz0wpyeDijFMIyUjNTVVILi0qSs0rUchNzStFUgAA
OWdLxTMAAAA=! !

Theme removeSelector: #minimalWindows!

Theme removeSelector: #showScrollbarButtons!

Theme removeSelector: #steButtons!

Preferences class removeSelector: #menuBorderWidth!

Preferences class removeSelector: #systemWindowBorderSize!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/4568-MinimalWindowsCleanup-LucianoEstebanNotarfrancesco-2021Mar29-10h32m-len.001.st----!

----SNAPSHOT----(14 April 2021 08:16:28) Cuis5.0-4526.image priorSource: 213395!
!SystemWindow methodsFor: 'drawing' stamp: 'GDK 4/14/2021 08:17:23' prior: 50338542 overrides: 17112261!
z#H4sIAAAAAAAAAI2QwWrDMAyGz85TiDxAHyDXQE8jhS6wwwhFi5VU4NpFdpZLH362Uzq3h7Gb
LP36v9/SguvBNoAt2m/0lbpB4GCodcYJiFusbp1YEg+3ShWjE3gyE6ysZwo+93aVyj32vbt+
sNVurZTiqZeFGviEp+3iYXg+BxIYosET8QT9mS4E4yJCNmxxNuO75GWjxMVa1cc0hPEuhsM1
sLNoNjrMgpqj8a5O4pw93SMvkd4LXqi4TbSJaZsy+ZCBezT+QezcFvMXGjt/4lqD3vP4H1z8
bm3wi8x7ELYz8NS50LFJ1334vSVBaTTUP/mmznvmAQAA! !

----SNAPSHOT----(14 April 2021 08:17:28) Cuis5.0-4526.image priorSource: 224708!
!ContextPart methodsFor: 'private' stamp: 'GDK 4/14/2021 09:10:08' prior: 16856541!
    z#H4sIAAAAAAAAAK1YbU/bSBD+7PyKUU46Eh0NSVoKuAKJRofESS09gXofoiA59jhxsb3R7joh
V/rfb2bXju3EoRQdqhq/rGeeeWbm2bED8UVGSaSjJbqwKA6v0wAfIUE9F4FrfkGij3RHupsj
8ORMufx/lmCqVctp30ZJFnsawStt5WZgNRcKITKWI7XlqwdwN0dQ+fNBxUkatJzSCR0hzOhO
Cp6qXNYC9JzMJqiUN8MeXIegMt+n0zCLD2GRKY5BZbFmk3SoM5mSZb6WROkMfJFqfNSHgDHh
vIfvKOVIBHgIG4auvCi+Ew+Y/ujBZbquxLiaR/6czsWSbhMTgI/oZzoSKaSIgcE35eg1Sh8X
HCGjKOOl+95SREHlQZmlKQPzVt661261nCdYenGG8ERM/5UFkR+JTEFGaEVYwTI4g44HaRbH
lYt67mkIBKr0gH/J+5r4SmddWoNLmz5ahBDgNJvNiPhQigSQATOIpSeNNwL1hgGB55Ndso2K
eZ5zNtTCW1nEFPSK7BEfnACiVPuU4ev0Ww21TYciVuqeU6GJLGNoGiNTY26RQcMfKm3zxbkp
fNcMRFphHJLHOaY+Gl81elYRFbTPleS+6ba5btdKY/LZW0YzL0/aCqZSrBRexvEtxuhrF8Zu
8gRJxdQ5GZvQ81t9w5chCu9khm7LccZjRsNRReHahc4BVzqjz4Msi4DqV8s1X6OYuR6liE0r
GRqh833wo9ujcrSn+YLYkOGllrXSmmmBtcjs4xgcgkk4tQhlb+4tFtRCItMqCtCwJ6YK5dIw
Tsx4XFO6bEkhewcQCpl4RMT3XBFCSgYR/KM7aQE4jhOFo0xqahIk1bBRc9+5kEYxtEdz9BYQ
Ro+F6bzjDpTNa+rFoDRBb08mPSr3TmeL1ynqFWLqwrA/4Pahg+Gwy+rAx+OOcSim3yhZo9hT
qpSqLnnw4yxA9RHnlGVBMvYxFv7DKBYqkzjpVvP1Esf94y4FDO2qlYsL059j1/y4vV6Pi8MB
YHfjvTaHZTAljkbLn8XIUnZLFezPx66x74zvN2pZZP8rL/+HyvyyUMiKUFO1xDErORNGVDsO
7FTwsP++gOKYvyY8dQevwxJGUuk6IpP9HUSnb0tuvFDC2dFgcDQ4OzulbnOP+21o35jUX1ws
UHKlumPu800axvemPhQy19v+tajsa+ax6pYTxx8zfWUWqmzBOEOPNgmmbhfmu2dhwu+AmMDp
0eD0aNjvn8HgxO2/awC/2uH2VwPoVCKgph12IRbiIVtcU9E91yuNYQ36/TKurQjeu8cnP40g
Sm+ZOt84+9/Dqd972zUl1P6UUbMQoCKYP1lmRpKOqd5uCSxJPcnH9rI72mEu0+AW9c0qRanm
0eIm3HqMIujsknT6vrHX+c5JXWOeAMOQTS3Nfu5UTt3zQuKFtNssFpK/WZRfML3btmvg/Ly8
b3THTgtkrgloy3R1kdLxhuxnybpJWT/j8CZ0S1+TwtQVN0WjrZcw2mzbRHhvyzVSPIlthjDX
BthtVeMwlyatGp7KRmRvNwvM4PS0XuLHR8MTLnFq3YE76ENR4HlhK9fOavjJzsltu3fsdtZW
dQ66Xc7VpZTe2mwPe7evnZJv2sdGIlnwjmtRmCqzgVs5zneML57UZT42HF6xhd8Opl6wacED
y/luu6VZwlETUzsBkdb/i691THanVCw0FGzM7sVQzl4X0K/0ExG/szZSf2eR/1BdVYiOLYZO
TWFMRhtCqye5IScGKxWpsVx7n3oOf7LP3v43rR1seXdYaDnfjIU1tdhN+XzXIl/di4BveuVe
3eSWxDUfBcqQVKMmUv/kBW74ocIvMNQEsV0pl4sL39oeicXa9cUiwsAMEcr9UH9lmqHmkVHq
hQ8yms11ZWPJc1wdW6xQOTT1krJZf3VKmDtrjl6GffgDhvnVvPZ3Nqr8dg1jZQ21se7uUZtB
RW02kulO6AWgrKBNXX7I3w5pXSYVT/z5S9PXT1Z2Sp+mFc/h7fPSUlmPNIcHRpJuExp1romX
maHjRY+bEDd6NqkltUhFrSm2Pe/7zLA9Emx9bTCOd2QiD57T9hLwxnJj6K+M/BcFkN6L8h5+
jicb/y9+jSn4aTnPjAHDPrSvrq5z22aAL7fSjvEUR9QsXnxpxZCq8zrlbxz75vlJqzoL2PZo
GIcGJ9BOvYS6uCYf9ZnEcEIeP/PCL6WNnINQyK0hcatFJxuDVTSEp63mIosD82HAOGmgs9aH
29Q1OINppu0nKPon0njNHcpCJalHN7E5r7Zvh5afTkK7g9Azc9B/v7W8Nv0TAAA=! !

----SNAPSHOT----(14 April 2021 09:10:15) Cuis5.0-4526.image priorSource: 225237!

valueUnpreemtively!
!BlockClosure methodsFor: 'evaluating' stamp: 'GDK 4/14/2021 13:55:56'!
                    z#H4sIAAAAAAAAACtLzClNDc8syXCtyCyxUsgvyUgt4uJUiFMoTs1JUwDLWilEK8SBJRSSS3Ny
rMBSsQDNHzoJOQAAAA==! !

Error subclass: #Panic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Panic'!

!classDefinition: #Panic category: 'Kernel-Panic' stamp: 'GDK 4/14/2021 14:02:08'!
Error subclass: #Panic
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Panic'!
!Panic class methodsFor: 'no messages' stamp: 'GDK 4/14/2021 14:02:50' overrides: 16875496!
                      z#H4sIAAAAAAAAAMtIzEvJSS22UkitSE4tKMnMz+OKS0vMKU5VUPLMVShIzMtMzs7MS9dRqMwv
VUhOzCtRSCxJzlDITVUCAB3Vf0I6AAAA! !
!Panic class methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 14:02:57' prior: 50338788 overrides: 16875496!
                             z#H4sIAAAAAAAAAMtIzEvJSS22UkitSE4tKMnMz+OKS0vMKU5VUPLMVShIzMtMzs7MS9dRqMwv
VUhOzCsBEiXJGQq5qUoAPePjBjsAAAA=! !
!Panic methodsFor: 'no messages' stamp: 'GDK 4/14/2021 14:04:10' overrides: 16874501!
                           z#H4sIAAAAAAAAAC2NQQqDMBBF955ioHsPkK66aMFFpVBciZQQJzpUk2Ey0Y2HbwouP4/3/oje
5kVvTimG6gCGo2L4wEuiw5SigC1ow3PXBdpAq1UcuwbIt1FbWgz0Jh9d886MstFfS2z30OL+
jMIzudN/RDGQh7rqGVRomlDuGwY1cOHSdbCTzgYSLv6qKCuF8jSAj/ItzgCCjFbrH+dciLy2
AAAA! !

----SNAPSHOT----(14 April 2021 14:04:20) Cuis5.0-4526.image priorSource: 227740!

Object subclass: #Recovery
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Panic'!

!classDefinition: #Recovery category: 'Kernel-Panic' stamp: 'GDK 4/14/2021 14:05:27'!
Object subclass: #Recovery
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Panic'!
!Recovery methodsFor: 'no messages' stamp: 'GDK 4/14/2021 14:05:46' overrides: 16962628!
                          z#H4sIAAAAAAAAAMtIzEvJSS22UqjgiqtQSM5JLC5WsLVVCEjMy0wGADw0lnccAAAA! !

----SNAPSHOT----(14 April 2021 14:05:54) Cuis5.0-4526.image priorSource: 229188!

OMeta2CuisSmalltalkRecognizer subclass: #NewObfuscator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Obfuscation'!

!classDefinition: #NewObfuscator category: 'Kernel-Obfuscation' stamp: 'GDK 4/14/2021 15:15:32'!
OMeta2CuisSmalltalkRecognizer subclass: #NewObfuscator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Obfuscation'!
!NewObfuscator methodsFor: 'no messages' stamp: 'GDK 4/14/2021 15:17:16' overrides: 16961313!
     z#H4sIAAAAAAAAAEutKChSsOWKA9FWFQq6dgrR6tHqOgoVOgrqsQpliTmlqeqxAJLdqOElAAAA! !
!NewObfuscator methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 15:18:50' overrides: 16961431!
            z#H4sIAAAAAAAAACvNSyyqdK0oKFKw5eLiLM3LLFHITEnNK8lMy0wtUqgBCcEUIMQBNwvE8zUA
AAA=! !
!NewObfuscator methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 15:19:30' prior: 50338854 overrides: 16961431!
                       z#H4sIAAAAAAAAACvNSyyqdK0oKFKw5eLiLM3LLFHITEnNK8lMy0wtUqgBCcEUJOfn5gJlHPNS
ggsSk1OLkRQCAOhCjZ9GAAAA! !
!NewObfuscator methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 15:20:27' prior: 50338861 overrides: 16961431!
   z#H4sIAAAAAAAAACvNSyyqdK0oKFKw5eLiLM3LLFHQyExJzSvJTMtMLbKqUNC1U4hWL0gtSssv
yrVSUFZXV9dRqFDQUQAy1GM1FWpAmmBGJOfn5gK1OualBBckJqcWk2QUAI+hQkGKAAAA! !

----SNAPSHOT----(14 April 2021 15:20:33) Cuis5.0-4526.image priorSource: 229797!
!NewObfuscator methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 15:27:32' overrides: 16961419!
                     z#H4sIAAAAAAAAACspDi4pysxLV7Dl4uJUUVew0QASQFSjUAckkzMSizS17KwqQEK6dgrR6kCg
o1ChkJyfW1CUWlycmqKjABRSSElFiKjHAgC12L1gVQAAAA==! !

----SNAPSHOT----(14 April 2021 15:27:37) Cuis5.0-4526.image priorSource: 231186!
!NewObfuscator methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 15:39:28' overrides: 16961425!
         z#H4sIAAAAAAAAACspDq7MTcrPUbDl4uLUUFFWKC5ITE4tVgCKlxRl5qVbVSjo2ilEV+goqCcW
Q5Sqx2oq1CggK3UsKkqshEgCAI6BYj5QAAAA! !

----SNAPSHOT----(14 April 2021 15:39:33) Cuis5.0-4526.image priorSource: 231518!

----QUIT----(14 April 2021 16:24:19) Cuis5.0-4526.image priorSource: 231826!

----STARTUP---- (14 April 2021 16:45:20) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!SequenceableCollection methodsFor: 'converting' stamp: 'GDK 4/14/2021 17:45:39'!
                             z#H4sIAAAAAAAAAHXMMQoCMRCF4T6neCfIAQIWItja2EmUkJmFwDCRyYobyOGNiOW23/947Sll
DdjcgCJjOMUDFyM2plMV4byWqlB+e5f3U2NZQDXgFvroOGBDWc5JGk/KSEQBPU672utL+qNZ
2tEsdY/d8xi9u+t/+AHuFlnYsAAAAA==! !
!SequenceableCollection methodsFor: 'converting' stamp: 'GDK 4/14/2021 17:46:56'!
                      z#H4sIAAAAAAAAAD2MQQqAIBAA771i37G36gPdw0ByA8NWcTdQ8PFZh47DDHNGzwhl2ITCAZJo
9yQgmslec2QlVkFYUdoXuPhCbQJMRZdbxxAQqgGhZLNVclPtxa/72pgHOfiQnmQAAAA=! !

----SNAPSHOT----(14 April 2021 17:47:04) Cuis5.0-4526.image priorSource: 231908!

('abc' split: $x) join: $x!
!SequenceableCollection methodsFor: 'converting' stamp: 'GDK 4/14/2021 17:48:15' prior: 50338905!
                            z#H4sIAAAAAAAAAHXMsQoCMRAE0D5fMV+QDwhYyMG1NnYSJWT3ILBsJDnxAvl4I4eVXDe8GaY+
Ja0Om+lQRHSjeOBSiAvTlEU4rikrlN/WxOOqsiyg7HBzrTecsCEtc5DKgyICkUPzw67l9SXd
aTT1XEpoFofn3lvzNzd3/eUPI3VqAMIAAAA=! !

('abc' split: $x) join: $x!

('abcxyz' split: $x) join: $x!
!NewObfuscator methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 17:49:04' prior: 50338879 overrides: 16961419!
                 z#H4sIAAAAAAAAACspDi4pysxLV7Dl4uJUUVew0QASQFSjUAckkzMSizS17KwqQEK6dgrRGhUK
yfm5BUWpxcXFqSkKxQU5mSVWCipRmgrFJflFqRCzdNSz8jPzQMJWVonFEDErK4WUVJjW1BT1
WAQbAKPxpWyDAAAA! !

----SNAPSHOT----(14 April 2021 17:49:18) Cuis5.0-4526.image priorSource: 232658!
!NewObfuscator methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 17:51:14' prior: 50338938 overrides: 16961419!
                z#H4sIAAAAAAAAACspDi4pysxLV7Dl4uJUUVew0QASQFSjUAckkzMSizS17KwqQEK6dgrRGhUK
yfm5BUWpxcWpKQrFBTmZJVYKKlGaCsUl+UWpEKN01LPyM/NAwlZWicUQMSsrhZRUhE71WAAf
CjqZeAAAAA==! !

----SNAPSHOT----(14 April 2021 17:51:20) Cuis5.0-4526.image priorSource: 233447!

SystemDictionary!
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 19:54:42'!
            z#H4sIAAAAAAAAACstTvVLrSjhitMoTs1JUygpykxPTy1yLUvNK7FSUIbKaipkpvll5lgpRKcl
5hSnxgIAvvMUGDUAAAA=! !
!Panic class methodsFor: 'as yet unclassified' stamp: 'GDK 4/14/2021 19:55:22' prior: 50338796 overrides: 16875496!
         z#H4sIAAAAAAAAAGXLMQqAMAwF0N1TfDp7gt7AxcVRFEINWkzTYlPQ2+vu8rZ3kG7C1YPvwMVi
1m6dEokYyYlWeeTboNlAunnMtRW+8F8L3JBQSGM4o+49ntwQSO3DwoHE7gVZ9gp1awAAAA==! !
!PackageEnvironment methodsFor: 'accessing' stamp: 'GDK 4/14/2021 19:56:33' prior: 16971993 overrides: 17062857!
                        z#H4sIAAAAAAAAAMssDkhMzk5MT+WKC85NzMkpSczJVigtTvVLrSgBANiBCuMcAAAA! !

----SNAPSHOT----(14 April 2021 19:57:01) Cuis5.0-4526.image priorSource: 233827!
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:01:41' prior: 16939832!
             z#H4sIAAAAAAAAAG1QzWrDMAw+208huktLIbBrbqPrtSu07FLS4XoyMXHjYcsjgTz8ZHuwMXYQ
lvT9WNLoXzFE68cnamHAGT4SJ5/KJZRidUIC6rHWoKgwyMPtu9WspFjAju84wSJFTd4gojNg
uNo7vONIL+FgXbFvpFgX9Kai1fnPotlIIawppAtwLkg5N7NTfbfw2OTuP8o6Lzt31cJTdcn0
053V7DBAinjAicCac0jI8A+kWP7wjJFC0sR3OAavMUamHgNGHr69tNMC17Jv15U5cqxVCGou
8roCGJdiv1O6x8z6A/+6K4P1QMm5XY964Ma1Ql8p5/pLjgEAAA==! !
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:02:01' prior: 17057297 overrides: 16866027!
                   z#H4sIAAAAAAAAAE3NMQqAMBAF0T6nWLD3AKntBBG0E4UQvhCMiexuRG+vndZvYBh7PtHitrSZ
YXcxqosbFUGHSymsIxdYmj5yaqlqIMrFa8ip5+wh8qY9Q5BenpYU4jzXZpFygOk/eQCPVO3x
cQAAAA==! !
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:02:24' prior: 17057304 overrides: 16866035!
                 z#H4sIAAAAAAAAAHWNvQqDQBAGe59iwT4PcF3AThAhdqKwkS8gnl7YH4lv74GFVeoZZgRr2lHj
CLTQ/Hm+FZsF4uK1cozGcSFXNPhZpp04AvU34qyWFdTEJ5vT1kqaoJrVVnCV+pFp5+gYhkcx
qn8h9G96AuzEt/ONAAAA! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:04:53' prior: 16939800 overrides: 16865809!
     z#H4sIAAAAAAAAAEsssVLITq1UKCgtsVIoS8wpTeUKzk3MySlJzMlWKC1O9UutKFHITHNLzClO
tVKIjitOzUlTyMsPSy0qzszPcyxB1x2rx0VIiR4XF2cchAkAt4KDB34AAAA=! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:04:57' prior: 50339018 overrides: 16865809!
      z#H4sIAAAAAAAAAEsssVLITq1UKCgtsVIoS8wpTeUKzk3MySlJzMlWKC1O9UutKFHITHNLzClO
tVKIjitOzUlTyMsPSy0qzszPcyxB1x2rx0VIiR4XFxdnHIQNAJBAqcN/AAAA! !
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:05:46'!
          z#H4sIAAAAAAAAAMtNLcnITwlLLSrOzM/jiitOzUlTSCyxUlD2TUWSUMhMc0wqTs0DSkQrlyRm
5sQCAInc74k4AAAA! !
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:05:57'!
                      z#H4sIAAAAAAAAAMtNLcnITwlLLSrOzM+zUijjiitOzUlTSCyxUlD2TUWSUygoBYqVAQA4BS95
MAAAAA==! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:06:50' prior: 50339026 overrides: 16865809!
                          z#H4sIAAAAAAAAAEsssVLITq1UKCgtsVIoS8wpTeUKzk3MySlJzMlWKC1O9UutKFHITHNLzClO
tVKIjitOzUlTyMsPSy0qzszPcyxB1x2rx0VICTYVGghLc1NLMvJToHI6CupW6jpgA5LzcwuK
UouLU1M0FRKLgytzk/JzUEzl4oyDMAEmfCck1AAAAA==! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:06:56' prior: 50339046 overrides: 16865809!
             z#H4sIAAAAAAAAAEsssVLITq1UKCgtsVIoS8wpTeUKzk3MySlJzMlWKC1O9UutKFHITHNLzClO
tVKIjitOzUlTyMsPSy0qzszPcyxB1x2rx0VICTYVGghLc1NLMvJToHI6CupW6jpgA5LzcwuK
UouLU1M0FRKLgytzk/JzUEzl4uKMg7ABvEeCRNUAAAA=! !
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:08:54'!
                 z#H4sIAAAAAAAAACtOLfFLrSixUijjKk7NSVMoSs3NL0t1TC7JzM8rdssvci1LzQPKKpcWp4LU
WZdnpOYhuArFqXkpQG5lfmkRWHtJPtAkPQCoSRheVQAAAA==! !

Smalltalk setNext: true!
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:09:26' prior: 17057311!
            z#H4sIAAAAAAAAAAXBQQqAIBAF0LWe4uOmexS0bNM+mPRH0ZjgKNHte896zlI/78JCJibsH6aS
OF/KsZbXWNEKuhFrFtUmekMM7SSGKMYBVnqNDN5tMOqBRzK9+wEWGNjiWQAAAA==! !

SystemDictionary methodDictionary keys!
!ArrayedCollection methodsFor: 'printing' stamp: 'GDK 4/14/2021 20:10:38' prior: 16784237 overrides: 16840405!
                         z#H4sIAAAAAAAAAHVPMQrDMAyc7VdoKNhZClndqUOzptCxdDBFgYBsg6XQtK+v0waawZ1O0t3p
JJaUsY8O/EUy+qC1WiuIOMt5kiORA2Ot2dcpRhrgTp4Zog/4R2VK9yiwoT/Rq5/HV8XpYNeU
qf1KFvmJMGAU7nIKDlqQtFkA6fdHo5Uah84Tl4hr9aIDPNOUF7e51bO1egN6GLqkHwEAAA==! !

Smalltalk setNext: true;useNext!
!Behavior methodsFor: 'testing method dictionary' stamp: 'GDK 4/14/2021 20:12:10' prior: 16799447!
                           z#H4sIAAAAAAAAAIVSwY7TMBA9O18xKpdUWkWcI/aw1aon6Eq0gkNV0NSZNBaOp7IdAtKKb2ec
uCUHECfbM+M3b96b2LHn4dJ97ozu9mRJR/bhI7XkD1yDNZE8WghX0gZtfbtsLV7g/DPSPbKR
R6FWTy6M5AEhUARu5ciQMHYcCHqSjk0A1JpCgNgRoL8MPbkIKGEoVO5ZwbP5TgGMizzVae6v
qOOdk+OI0bB7gB6/GXcBEyFYHuE8RIGRPtNksCoK9Zraw2uh0vEV9kLO0VgVSvgtSD655sNM
8JnrQqljLSmoZ9LpuyrL/OgwvJ+JHHKju1prYF/DcSkVukYi+atpd0akPLZoA53Sk+McyQVB
o9smjIW2p9NpLf2VaQ9+oERO6JXlTQwTPqE3eLa0Ma4RNdZJn6lKTWxu0OSacOD9cBWX7hWr
XbWp4DaaANCPlzaPtxjrXbYP3NDnbBBbruLSaGIHlnkyomU/424tY4TzzOilreHNDncPEIzT
BOVfs2v49fivVLVaDPRftoLzNov2Rzc4pg3ARuwQa0VU2YEvaTl+A2z+ookJAwAA! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:13:25' prior: 50339056 overrides: 16865809!
            z#H4sIAAAAAAAAAEsssVLITq1UKCgtsVIoS8wpTeUKzk3MySlJzMlWKC1O9UutKFHITHNLzClO
tVKIjitOzUlTyMsPSy0qzszPcyxB1x2rx0VICTYVGghLc1NLMvJToHI6CupW6jpgA5LzcwuK
UouLU1M0FRKLgytzk/JzUEzl4oyDMAEmfCck1AAAAA==! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:14:55' prior: 50339117 overrides: 16865809!
             z#H4sIAAAAAAAAAIWNwQrCMBBEz+YrllyqUPoBuXnx6KXgRSxs7RZLNtmSTcT+vaCCKIK3gXnz
BrMDTwvMJTu4Ihcytg3InJE9FKU93TJM4w5ZycGxU+IRohwo6SRxm7/np8aC7ZN4itb8g5sf
xPp9HyhfZHh1NVSuqh+Cs4Q5kSoNG0Btl9ALf1jNqnvGO1xzIfjfAAAA! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:15:01' prior: 50339127 overrides: 16865809!
 z#H4sIAAAAAAAAAIWNwQrCMBBEz+YrllyqUPoBuXnx6KXgRSxs7RZLNknJbsT+vaCCKIK3gXnz
BtWBpwXmog6uyIWMbQMyK7KHIrSnm8I07pCFHBw7IR4hpgNlmVLc6vf81FiwfU6eojX/4OYH
sX7fB9JLGl5dDZWr6ofgnMKcSYSGDaC0S+gTf1iNWXXPfAeR2Y704AAAAA==! !
!SystemDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:16:23' prior: 50339033!
                 z#H4sIAAAAAAAAAMtNLcnITwlLLSrOzM/jiitOzUlTSCyxUlD2TUWSUMhMc0wqTs0DSkQrlyRm
5sRyAQDL0jqmOQAAAA==! !

SystemDictionary methodDictionary keys!
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:17:16' prior: 50339137 overrides: 16865809!
     z#H4sIAAAAAAAAAIWNsQrCQBBEa+8rljRRCPmA62wsbQI2YmBjNhhuLxtu98T8vaCCKILdwLx5
g+Yh0AJzNg9X5EyuichsyAGy0p5uBuOwQ1bycGyVeIBJDpR0lGlr3+tTDUWXJNBUuH9s/YNY
v98j2UX6V1dB6cvqIThLnBOpUr8B1GaJnfCH1blV+8x3tjK5sd4AAAA=! !

MethodDictionary methodDictionary keys!

----SNAPSHOT----(14 April 2021 20:17:48) Cuis5.0-4526.image priorSource: 234597!

Stream subclass: #FirewalledStream
	instanceVariableNames: 'onNext onNextPut wrapped'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!

!classDefinition: #FirewalledStream category: 'Collections-Firewall' stamp: 'GDK 4/14/2021 20:30:37'!
Stream subclass: #FirewalledStream
	instanceVariableNames: 'onNext onNextPut wrapped'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:30:46'!
                    z#H4sIAAAAAAAAAMvP80utKOHiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgEgqcXFxxkHZADz0Q/0v
AAAA! !
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:30:47'!
  z#H4sIAAAAAAAAAMvP80utKLFSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4CoUeLi4oSw
FOLhygGcR32ePwAAAA==! !
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:30:48'!
                  z#H4sIAAAAAAAAAMvP80utKAkoLeHiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgMsrcXFxxiG4AAUA
khU4AAAA! !
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:30:48'!
                              z#H4sIAAAAAAAAAMvP80utKAkoLbFSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4ArU+Li
4oRzFOLhmgCBrulVSAAAAA==! !
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:30:49'!
              z#H4sIAAAAAAAAACsvSiwoSE3h4lRyzCsuTy1SKMlIVShLzClNVchPU4DKKnFxccbBOAB9gnnh
MgAAAA==! !
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:30:50'!
                              z#H4sIAAAAAAAAACsvSiwoSE2xUkjM80/KSk0u4eJUCk4tUSjJSFUoS8wpTVXIT1OAKlLi4uKE
MhXi4RoAQ5fApEIAAAA=! !
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:31:05' overrides: 17051039!
                              z#H4sIAAAAAAAAAMtLrSjhisvP80utKFEoS8wpTbVS0CgvSiwoSE1RyAMKagIAeZOG+iIAAAA=! !
!FirewalledStream methodsFor: 'accessing' stamp: 'GDK 4/14/2021 20:31:31' overrides: 17051072!
                   z#H4sIAAAAAAAAAMtLrSgJKC2xUqjgKi9KLChITVGAC2nk5/lB2ApliTmlqUBFmgCi3t1DMAAA
AA==! !
!FirewalledStream class methodsFor: 'no messages' stamp: 'GDK 4/14/2021 20:33:59'!
                          z#H4sIAAAAAAAAACsvSiywUihWyM/zS60osQLSUGZAKZCXV8BVrJCUmpyfm+qWX1SeWJRipaBR
nJqTppCXWo6kxxpFjzXI0IJUsFqFkqLKgKLM3MySzLJUKwVDEwuF8sySDMei9GIrhepaTU0A
ZIhjyIEAAAA=! !

----SNAPSHOT----(14 April 2021 20:34:04) Cuis5.0-4526.image priorSource: 240472!

----QUIT----(15 April 2021 08:51:18) Cuis5.0-4526.image priorSource: 242787!

----STARTUP---- (15 April 2021 14:39:31) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


InputSensor subclass: #EventSensor
	instanceVariableNames: 'mouseButtons mousePosition keyboardBuffer interruptKey interruptSemaphore eventQueue inputSemaphore lastEventPoll hasInputSemaphore'
	classVariableNames: 'EventTicklerProcess'
	poolDictionaries: ''
	category: 'Kernel-IO-Core'!

!classDefinition: #EventSensor category: 'Kernel-IO-Core' stamp: 'GDK 4/15/2021 16:02:38'!
InputSensor subclass: #EventSensor
	instanceVariableNames: 'mouseButtons mousePosition keyboardBuffer interruptKey interruptSemaphore eventQueue inputSemaphore lastEventPoll hasInputSemaphore'
	classVariableNames: 'EventTicklerProcess'
	poolDictionaries: ''
	category: 'Kernel-IO-Core'!

Object subclass: #InputSensor
	instanceVariableNames: ''
	classVariableNames: 'ButtonDecodeTable InterruptSemaphore InterruptWatcherProcess'
	poolDictionaries: ''
	category: 'Kernel-IO-Core'!

!classDefinition: #InputSensor category: 'Kernel-IO-Core' stamp: 'GDK 4/15/2021 16:03:48'!
Object subclass: #InputSensor
	instanceVariableNames: ''
	classVariableNames: 'ButtonDecodeTable InterruptSemaphore InterruptWatcherProcess'
	poolDictionaries: ''
	category: 'Kernel-IO-Core'!

Object subclass: #InputMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-IO-Input'!

!classDefinition: #InputMethod category: 'Kernel-IO-Input' stamp: 'GDK 4/15/2021 16:04:10'!
Object subclass: #InputMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-IO-Input'!

----SNAPSHOT----(15 April 2021 16:04:23) Cuis5.0-4526.image priorSource: 242869!

Object subclass: #FirewallNode
	instanceVariableNames: 'target inStreams outStreams'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!

!classDefinition: #FirewallNode category: 'Collections-Firewall' stamp: 'GDK 4/15/2021 16:44:51'!
Object subclass: #FirewallNode
	instanceVariableNames: 'target inStreams outStreams'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!
!FirewallNode methodsFor: 'accessing' stamp: 'GDK 4/15/2021 16:45:05'!
                     z#H4sIAAAAAAAAACtJLEpPLeHiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgEgqcXFxxkHZAHttIn8v
AAAA! !
!FirewallNode methodsFor: 'accessing' stamp: 'GDK 4/15/2021 16:45:09'!
      z#H4sIAAAAAAAAACtJLEpPLbFSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4CoUeLi4oSw
FOLhygGc0bYaPwAAAA==! !
!FirewallNode methodsFor: 'accessing' stamp: 'GDK 4/15/2021 16:45:13'!
                      z#H4sIAAAAAAAAAMvMCy4pSk3MLebiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgMsrcXFxxiG4AMnC
Pic4AAAA! !
!FirewallNode methodsFor: 'accessing' stamp: 'GDK 4/15/2021 16:45:17'!
  z#H4sIAAAAAAAAAMvMCy4pSk3MLbZSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4ArU+Li
4oRzFOLhmgCiAYWPSAAAAA==! !
!FirewallNode methodsFor: 'accessing' stamp: 'GDK 4/15/2021 16:45:20'!
                  z#H4sIAAAAAAAAAMsvLQkuKUpNzC3m4lRyzCsuTy1SKMlIVShLzClNVchPU0AoUOLi4oxD4gMA
UkIJVTsAAAA=! !
!FirewallNode methodsFor: 'accessing' stamp: 'GDK 4/15/2021 16:45:23'!
                              z#H4sIAAAAAAAAAMsvLQkuKUpNzC22UkjM80/KSk0u4eJUCk4tUSjJSFUoS8wpTVXIT1NAqFPi
4uJE8BTi4doAzrFDSksAAAA=! !
!FirewallNode methodsFor: 'accessing' stamp: 'GDK 4/15/2021 16:45:49'!
                  z#H4sIAAAAAAAAACsuSS3gKkksSk8tUShLzClNtVLIzAsuKUpNzC2GCeSXlkBF9AAvfXiXLwAA
AA==! !

----SNAPSHOT----(15 April 2021 16:46:44) Cuis5.0-4526.image priorSource: 244577!

Object subclass: #FirewallCat
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!

!classDefinition: #FirewallCat category: 'Collections-Firewall' stamp: 'GDK 4/15/2021 16:53:31'!
Object subclass: #FirewallCat
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!

----STARTUP---- (15 April 2021 16:55:04) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Object subclass: #FirewallCat
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!

!classDefinition: #FirewallCat category: 'Collections-Firewall' stamp: 'GDK 4/15/2021 16:55:21'!
Object subclass: #FirewallCat
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Firewall'!

----STARTUP---- (15 April 2021 16:56:07) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


LockedPortalMorph subclass: #WatchMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

!classDefinition: #WatchMorph category: 'Morphic-Portals' stamp: 'GDK 4/15/2021 16:59:16'!
LockedPortalMorph subclass: #WatchMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

LockedPortalMorph subclass: #WatchMorph
	instanceVariableNames: 'dir'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

!classDefinition: #WatchMorph category: 'Morphic-Portals' stamp: 'GDK 4/15/2021 16:59:29'!
LockedPortalMorph subclass: #WatchMorph
	instanceVariableNames: 'dir'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Portals'!

----SNAPSHOT----(15 April 2021 16:59:35) Cuis5.0-4526.image priorSource: 246354!
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:04:33'!
      z#H4sIAAAAAAAAACtPLEnOCPUMzyzJcMksslKo4IqrUMhMCykqTbVSiC5OzUlTyEutKPHNLyrI
iAVKuCXmFMNlCopSyzLzS4shsgCFJlEmSwAAAA==! !
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:04:44'!
            z#H4sIAAAAAAAAACtPLEnOCE7NSU0uAQCE4FU0CwAAAA==! !
!WatchMorph methodsFor: 'no messages' stamp: 'GDK 4/15/2021 17:05:06' overrides: 16943166!
                   z#H4sIAAAAAAAAAMtOrQwuKcrPTrVSSPROrUzKTyxKcS1LzSvhKi4tSC1SyE7FIa/HlZJZpGCL
JqqQWexYVJRf7pOaBmSnhRSVAjVGlyQWpaeWKMQrQBnliSXJGaGe4ZklGS6ZRVYKQJNigard
EnOKkZSDVQWn5qQml8RCbIvHY5seAC4Yp0jKAAAA! !

----SNAPSHOT----(15 April 2021 17:05:16) Cuis5.0-4526.image priorSource: 248202!
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:12:09'!
                 z#H4sIAAAAAAAAACtPLEnO8CvN5YozAAAMQJMLCwAAAA==! !
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:12:17'!
                 z#H4sIAAAAAAAAACtPLEnO8CvNtVIo4wIAgIwNMwwAAAA=! !

----STARTUP---- (15 April 2021 17:13:03) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:13:17'!
                   z#H4sIAAAAAAAAACtPLEnO8CvN5YozAAAMQJMLCwAAAA==! !
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:13:27'!
                 z#H4sIAAAAAAAAACtPLEnO8CvNtVKoAABGOEPmCwAAAA==! !

----STARTUP---- (15 April 2021 17:13:57) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Morph compile: 'layoutSubmorphsIn: x'!
!Morph methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 17:14:13'!
                              z#H4sIAAAAAAAAAMtJrMwvLQkuTcrNLyrIKPbMs1KoAADpIrhKFAAAAA==! !

----SNAPSHOT----(15 April 2021 17:14:21) Cuis5.0-4526.image priorSource: 248895!
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:15:07'!
                   z#H4sIAAAAAAAAACtPLEnO8CvN5YozAAAMQJMLCwAAAA==! !
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:15:18'!
                 z#H4sIAAAAAAAAACtPLEnO8CvNtVKoAABGOEPmCwAAAA==! !
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:15:37'!
                 z#H4sIAAAAAAAAACtPLEnO8E2s8CvN5YozAABLWXePDgAAAA==! !
!Morph methodsFor: 'events' stamp: 'GDK 4/15/2021 17:16:57' prior: 50339409!
                             z#H4sIAAAAAAAAACtPLEnOCPUMzyzJcMksslKo4IqrUMhMCykqTbVSiC5OzUlTACvxK81VsFNA
8H0TK0BCmWluiTnFIKVxKGqtFFC1aisYxuopoCkxgIrkpVaU+OYXFWTEIpmHqt9GwYBou3Tx
2VVQlFqWmV9aDLEPAPFgF7/+AAAA! !
!WorldMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 17:18:31'!
                             z#H4sIAAAAAAAAAEvJt1KoAAAvfHMrBQAAAA==! !

Morph compile: 'do: x'!
!Morph methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 17:20:37'!
                   z#H4sIAAAAAAAAAEvJt1KoAAAvfHMrBQAAAA==! !

Morph compile: 'inject: x into: y'!
!Morph methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 17:20:49'!
       z#H4sIAAAAAAAAAMvMy0pNLrFSqFDIzCvJt1KoBAAB1LaaEQAAAA==! !

Morph compile: 'inject: x into: y'!
!Morph methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 17:21:26' prior: 50339496!
       z#H4sIAAAAAAAAAMvMy0pNLrFSqFDIzCvJt1KoBAAB1LaaEQAAAA==! !

Morph compile: 'detect: x ifNone: y'!
!Morph methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 17:21:42'!
                     z#H4sIAAAAAAAAAEtJLUlNLrFSqFDITPPLz0u1UqgEAHHT2zUTAAAA! !
!MenuMorph methodsFor: 'construction' stamp: 'GDK 4/15/2021 17:24:10' prior: 16934649!
               z#H4sIAAAAAAAAAFVSTWsbMRA97/6KR3KxSTFpDiWoF8c0oYEaAnXpIZhkvJr1qpGlRZJjG/zj
O1Lqj16W0ejNm/eelrSemWRZgX6mYNyyri7utAYh5TascQxKSB0j+R6+ldJErNitMaU3PszB
pAjjTDJkUVeNd4ldiiPI4bEVFFtukg+QYecTnLGfMqtDz8F4bRqydge/SGQc2sCxwzvZNUe0
eUrYT6xY7BDZ6bz3xJw8aEZhyWk0uqjrao+IvscG+7p6rqtiaOpD3+EFv40W3MfJ8UYkTXzQ
HEb/4RpvfVCYdbxiNOsQZHmxXjKbUIbLhhe83o5vXuVwCIPivyLnF795hWeokqVoqaJM/KAF
2+N+aR7NqTL0NbdaaSk8BW5ZVjeSRUzkNAU9FREPcouFt1oWn6smrUsxoeZN5Qx8lGfxTkka
GVoUy+cKg+vxQN4yg7+zWXbp6mY4xFxAG4GcUcb1oqDyE/+RtBWupUofvvrA71BMTVfcleOK
tgqlVeYk7tQV4jPScnO/zaYVBhvR8/nLEGMMRNtuKNjItj26eQgljNO8AOpqUDAdxafg5UdK
O4VLx6wlf9r96h8l1DiEaWdhzVnsgfLsGvO6miPHcx+C/EY6u1K83c//AgrvhgAdAwAA! !
!MenuMorph methodsFor: 'construction' stamp: 'GDK 4/15/2021 17:24:39' prior: 50339513!
                       z#H4sIAAAAAAAAAFVSTWsbMRA97/6KR3KxSTFpDiWoF8c0oYEaAnXpIZhkvJr1qpGlRZJjG/zj
O1Lqj16W0ejNm/eelrSemWRZgX6mYNyyri7utAYh5TascQxKSB0j+R6+ldJErNitMaU3PszB
pAjjTDJkUVeNd4ldiiPI4bEVFFtukg+QYecTnLGfMqtDz8F4bRqydge/SGQc2sCxwzvZNUe0
eUrYT6xY7BDZ6bz3xJw8aEZhyWk0uqjrao+IvscG+7p6rqtiaOpD3+EFv40W3MfJ8UYkTXzQ
HEb/4RpvfVCYdbxiNOsQZHmxXjKbUIbLhhe83o5vXuVwCIPivyLnF795hWeokqVoqaJM/KAF
2+N+aR7NqTL0NbdaaSk8BW5ZVjeSRUzkNAU9FREPcouFt1oWn6smrUsxoeZN5Qx8lGfxTkka
GVoUy+cKg+vxQN4yg7+zWXbp6mY4xFxAG4GcUcb1oqDyE/+RtBWupUofvvrA71BMTVfcleOK
tgqlVeYk7tQV4jPScnO/zaYVBhvR8/nLEGMMRNtuKNjItj26eQgljNO8AOpqUDAdxafg5UdK
O4VLx6wlf9r96h8l1DiEaWdhzVnsgfLsGvO6miPHcx+C/EY6u1K83c//AgrvhgAdAwAA! !
!Morph methodsFor: 'submorphs-accessing' stamp: 'GDK 4/15/2021 17:26:50' prior: 0!
                           z#H4sIAAAAAAAAACsuTcrNLyrIKObiLE7NSVPISazMLy3xS01NSU2xUigpKk3V4+KMg6tSKM5I
zMnJL3fOL6gEAPxoWnM7AAAA! !

----SNAPSHOT----(15 April 2021 17:27:06) Cuis5.0-4526.image priorSource: 249949!

----SNAPSHOT----(15 April 2021 17:29:18) Cuis5.0-4526.image priorSource: 253318!

Stream subclass: #Pipe
	instanceVariableNames: 'coll'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!

!classDefinition: #Pipe category: #'Collections-Streams' stamp: 'GDK 4/15/2021 18:27:43'!
Stream subclass: #Pipe
	instanceVariableNames: 'coll'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!
!Pipe methodsFor: 'no messages' stamp: 'GDK 4/15/2021 18:28:03' overrides: 17051039!
                        z#H4sIAAAAAAAAAMtLrSjhiotOzs/JUUjLLCouiVVIzSsuLUq1UoAIxiuAqcScHKfSEjewCgB4
QTO0NAAAAA==! !
!Pipe methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 18:28:18' overrides: 17051072!
        z#H4sIAAAAAAAAAMtLrSgJKC2xUijjSs7PyVFITEkBsgHfAEKQFgAAAA==! !
!Pipe methodsFor: 'as yet unclassified' stamp: 'GDK 4/15/2021 18:28:42' overrides: 16990961!
     z#H4sIAAAAAAAAAMvMyyzJTMzJrErlKi4tSC1SQAjocSXn5+QoxCv4F6WkFqWmOAN5qcklmfl5
Cnmp5XoAfteS2zoAAAA=! !

----SNAPSHOT----(15 April 2021 18:28:50) Cuis5.0-4526.image priorSource: 253400!

----SNAPSHOT----(16 April 2021 08:44:39) Cuis5.0-4526.image priorSource: 254402!

----QUIT----(19 April 2021 18:45:02) Cuis5.0-4526.image priorSource: 254484!

----STARTUP---- (23 April 2021 20:20:05) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


ReadWriteStream subclass: #CachedReadStream
	instanceVariableNames: 'source'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!

!classDefinition: #CachedReadStream category: #'Collections-Streams' stamp: 'GDK 4/24/2021 07:04:02'!
ReadWriteStream subclass: #CachedReadStream
	instanceVariableNames: 'source'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!
!CachedReadStream methodsFor: 'no messages' stamp: 'GDK 4/24/2021 07:04:58' overrides: 16994750!
          z#H4sIAAAAAAAAAI2PQQuCQBSEz/orBk9FIXQV6igEQVDdomTVF23orrx9RhH991aFik4d38x8
MzxDNwmDaEPSsoGcCZ0Cm1+oEOhB2gqTqsHUMDkyQiXye+8wFaSvxHEU+pYuJqgJykEhXabr
KAyOaKzToq3BYu4BVa50rf1ooE+pqhwl2Be2qvxel1GSYPQmsg88wWx86Kkdtz9Qhq9jioez
LRfDK88Yf7e/AMmZ3uoNAQAA! !
!CachedReadStream methodsFor: 'as yet unclassified' stamp: 'GDK 4/24/2021 07:05:43' overrides: 16994759!
                              z#H4sIAAAAAAAAAE2OzQoCMQyEz+1ThH2AfQBv4kkQBK+i0p9ZrXRTaaqrsA9v3YP0lGRmPjKM
d1mR4S0XXJFJq27NMtWt3EA/tzH5Odo60kDJ3uGKkHEOIsFGkP0sSIZDeCH3ndZqJrNJMdZo
SEyzVu15oX32yPCNxpj6mvp/LGGEHPCAqS2PLW283xmpqiAOS9FTJc9N5AsUyIVK2wAAAA==! !
!CachedReadStream methodsFor: 'accessing' stamp: 'GDK 4/24/2021 07:05:56'!
                     z#H4sIAAAAAAAAACvOLy1KTuXiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgEgqcXFxxkHZAKHGeOEv
AAAA! !
!CachedReadStream methodsFor: 'accessing' stamp: 'GDK 4/24/2021 07:05:56'!
  z#H4sIAAAAAAAAACvOLy1KTrVSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4CoUeLi4oSw
FOLhygGw0Z1LPwAAAA==! !

ReadWriteStream subclass: #CachedWriteStream
	instanceVariableNames: 'source'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!

!classDefinition: #CachedWriteStream category: #'Collections-Streams' stamp: 'GDK 4/24/2021 07:06:17'!
ReadWriteStream subclass: #CachedWriteStream
	instanceVariableNames: 'source'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!
!CachedWriteStream methodsFor: 'accessing' stamp: 'GDK 4/24/2021 07:06:24'!
            z#H4sIAAAAAAAAACvOLy1KTuXiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgEgqcXFxxkHZAKHGeOEv
AAAA! !
!CachedWriteStream methodsFor: 'accessing' stamp: 'GDK 4/24/2021 07:06:24'!
 z#H4sIAAAAAAAAACvOLy1KTrVSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4CoUeLi4oSw
FOLhygGw0Z1LPwAAAA==! !

----STARTUP---- (24 April 2021 07:09:16) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(24 April 2021 07:31:18) Cuis5.0-4526.image priorSource: 254566!

----STARTUP---- (29 April 2021 19:09:41) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!UserInputEvent methodsFor: 'accessing' stamp: 'GDK 4/29/2021 19:10:59'!
          z#H4sIAAAAAAAAAEstS80rCcgvzizJzM+zUijgKoCyFeIVCgBncYrKHQAAAA==! !
!PortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/29/2021 19:12:15' prior: 16980802 overrides: 16943522!
          z#H4sIAAAAAAAAAH2OMQvCMBSE9/yKA5d26Q8IdLSb4CA4iJXQvtonMSkvMYj0x1ulCC5ZDu6+
47iew2RiN24Tuahhdl6mkbuvVTMSZlUkXBAeEwly7RJ1jY3QjbpIPXhojA2kcWrTuVJ/VdBH
9z5wZO80imjkSkv8jCTOWH7RwR+92H5hgewAdj/SiL+vLDNalpVq19nc6zcEhpWZAAEAAA==! !

----SNAPSHOT----(29 April 2021 19:12:20) Cuis5.0-4526.image priorSource: 257152!

PortalMorph newOn: SystemWindow new ::openInWorld!
!DebuggerWindow methodsFor: 'as yet unclassified' stamp: 'GDK 4/29/2021 19:15:17'!
       z#H4sIAAAAAAAAAEspSiz3SUxKzfHPs1JIVgAAOc2x2Q8AAAA=! !

----STARTUP---- (29 April 2021 19:16:04) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


PortalMorph newOn: PluggableButtonMorph example ::openInWorld!

----STARTUP---- (29 April 2021 19:17:11) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!PortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/29/2021 19:17:30' prior: 50339699 overrides: 16943522!
                          z#H4sIAAAAAAAAAH2PQQuDMAyF7/6KwC562Q8oeNTbYIfBDqKjaJwZXVPSrsjwx68OGezi5UHy
PV5eBvJOh36qItqgQJ9Y3ET9d8wWiLBkeYQb+JdDgT13AWUJB8EH9gEHoLHWxqOCpovtMWv+
vICrntlTILYK8qDljmk9BxSrDb3xwlcWMyTm0YxA9kdq4efGdkKLooU1uhLhVJxTEYXzkqp0
27G9Zz5GBvxXFwEAAA==! !

----SNAPSHOT----(29 April 2021 19:17:34) Cuis5.0-4526.image priorSource: 257855!

PortalMorph newOn: PluggableButtonMorph example :: openInWorld!

PortalMorph newOn: (PluggableButtonMorph model: true action: #yourself) :: openInWorld!
!Morph methodsFor: 'drawing' stamp: 'GDK 4/29/2021 19:20:08' prior: 16942915!
                 z#H4sIAAAAAAAAAEspSizPzEt3S8zMKebiLE7NSVMoKs3LAwqF5xflpCgkpqR45+WX54EUAAWt
FEBK9GAqU0Ha/VJTU1JT9LgAZlj0wksAAAA=! !

PortalMorph newOn: (PluggableButtonMorph model: true action: #yourself) :: openInWorld!

PortalMorph newOn: (PluggableButtonMorph model: true action: #yourself) :: openInWorld!
!PortalMorph methodsFor: 'as yet unclassified' stamp: 'GDK 4/29/2021 19:22:42' prior: 50339729 overrides: 16943522!
       z#H4sIAAAAAAAAAH2PMQuDMBCF9/yKwy66+AMCjroVOhQcREvQs6akObmkQYo/vrFIoYvLg7vv
8e7doN2sfD+VAa2XoM7E86T77yhWCLCKNMAN3GtGhiN3BkUBJ8YH9h4H0GOljEMJTRfaXCTN
nxlw0ws57TVZCalXfMe4XjyyVUa/8Uo1sRkic2hG0PZHKqbnzg5Cs6yFLbpkpticYhOJy9rm
iej2a0fvfADOiAgBGQEAAA==! !

----SNAPSHOT----(29 April 2021 19:22:46) Cuis5.0-4526.image priorSource: 258836!
!CompiledMethod methodsFor: 'accessing' stamp: 'GDK 4/29/2021 19:30:31'!
            z#H4sIAAAAAAAAAEvMyckvT03hinPMATN8U0sy8lOKFRJLrBSKU3PSFDLTHJOKU/NKAkqBItH+
RSmpRakpzvk5OanJJZn5eQp5qeWxAEgLRmNFAAAA! !

----SNAPSHOT----(29 April 2021 19:30:42) Cuis5.0-4526.image priorSource: 259832!
!CompiledMethod methodsFor: 'accessing' stamp: 'GDK 4/30/2021 06:28:02' prior: 50339773!
                              z#H4sIAAAAAAAAAEvMyckvT03hitNwzAGzfFNLMvJTihUy0/wyc6wUotGE4xVcMpNLMvPzEosq
FfJSy2M1FRJLrBSKU3PSgFock4pT80oCSoEi0f5FKalFqSnO+Tk5qWAdYOUA3G4ZpnAAAAA=! !

MethodReference!
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 06:32:49'!
         z#H4sIAAAAAAAAAF2OwQrCMBBE737FHusv5Fb0ahWvRUrsTujCmpV0pfj3BqUIvc6beUxUtSVQ
QSK3QOYTyhVp1zStVgI+wSfjmSR1ooH6TTzQUUYXy7G8KWO57Sn6zzfa4ym6Vqugvc/IfnlV
3p8Lo4APporvfh0z/19sFB9MwZfOrAAAAA==! !

----SNAPSHOT----(30 April 2021 06:33:08) Cuis5.0-4526.image priorSource: 260118!
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 06:41:03' prior: 50339791!
                    z#H4sIAAAAAAAAAF2OwQrCMBBE737FHusv5Fb0ahWvRUrsTujCmpV0pfj3BqWIXmfePCaq2hKo
IJFbIPMJ5Yy0aZpWawM+wCfjmSR1ooH6v3igvYwulmN5UsZy2VL0r4dGu91FV75a2uuM7KdH
hfpjYRTwzlTxlqwG5s+l3/UL3xVb66wAAAA=! !

----SNAPSHOT----(30 April 2021 06:41:08) Cuis5.0-4526.image priorSource: 260763!
!WorldMorph methodsFor: 'update cycle' stamp: 'GDK 4/30/2021 06:55:41' prior: 17114286!
                          z#H4sIAAAAAAAAAD2Pu04EMQxF6+QrrtLQwH7AtDwEBRVCFKstrImHiTYkkZ3d0Up8PEkWaO1z
77F90BLp8pEl+jdaOF6sce/FU2XUNSi2vrlR/IKg5HFkLqhC8xF5AYtkacBJQvqEF9rwxXXN
XnfOWrNXjstffHgOCMtjD03YY2pxTDKfBd/WGPfcBJFBo6gXjnrXVjOlMynmkwin+pqlrA9X
5olC1F1Dhkq53g+0T9xL0koxtmcYOfprHdZhkVtoxsZo1RC+EwrKg/yX9usKqVpz+AHYXprM
KwEAAA==! !

----SNAPSHOT----(30 April 2021 06:55:50) Cuis5.0-4526.image priorSource: 261147!
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 07:04:00'!
              z#H4sIAAAAAAAAAF2OywrCMBBF937FLOsvZFd064NuS5HUuSGBIQPTkeDfGwoiuD2Xc7hRRNsU
WyBDItdA6hk2IR2GYZQ+gi/wrLxRSdcigeY//KBzeXrRGu1NFW05UvRfp2vjuqH6/dXpfDOG
gU8qgt36Ksz7hw87ov2QkQAAAA==! !

'From Cuis 5.0 [latest update: #4568] on 17 April 2021 at 7:46:45 pm'!
!ScrollBar methodsFor: 'initialization' stamp: 'jmv 4/17/2021 19:44:08' prior: 50338639!
           z#H4sIAAAAAAAAAFWRPW7DMAyFZ+kUhDt08wE8BekPOrRTUmQo0kK2aEgALRkSVRdBDl/Fjltl
I8iPj+9J1lm2iuwJ38dtYvZOiuq/CWwQAnZovzHcR0hXqJJSnAHhLAXCF0SkHtp58vTD6LiW
YkVvxw+kYgSHU0kMXiM1M3bbDqNZ9BrADebZ3uCA0KUQchNiFzxRq8LO+GlZimD7Z0URG/j4
nBWPeW02oLR+uyg2fylg9DEn9a6B1geN4WA1m01RF3akEKrjg8FM3y1hdmyJHv3kaiEq9oBO
tYQwJGI75iLzWTw7AoOkQWeyupqx8cUHe/KOFWVl2+9Dunhe3iqNWjG+Ys/L7cLycabXiCW+
fmAJ1/IXRsTd8eEBAAA=! !

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/4569-ScrollbarFix-JuanVuletich-2021Apr17-19h46m-jmv.001.st----!

----SNAPSHOT----(30 April 2021 08:30:06) Cuis5.0-4526.image priorSource: 261649!
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 12:05:43'!
          z#H4sIAAAAAAAAAEvMyckvd85JLC62UkhWKMm3UijjSlbITS3JyE9xyUwuyczPSyyqVChLzClN
LVZIAcpHW+XWFKfmpCmAtQYlllsp5EI0xgIAud3Y000AAAA=! !

----SNAPSHOT----(30 April 2021 12:05:48) Cuis5.0-4526.image priorSource: 262709!
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 15:13:40'!
 z#H4sIAAAAAAAAAEvMyckvD0ost1JIVijJDy1OdbRSKOMqU8hNLcnIT3HJTC7JzM9LLKpUKEvM
KU0tVkjJt1KItsqtKU7NSVNA1WylkBsLAPJntKpPAAAA! !
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 15:25:37'!
                       z#H4sIAAAAAAAAAEvMyckvd85JLC62UkhWKMkPLU51tFIo40pWyE0tychPcclMLsnMz0ssqlQo
S8wpTS1WSMm3Uoi2yq0pTs1JUwBrD0ost1LIRWiOBQA1pO5nVQAAAA==! !
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 16:57:00'!
           z#H4sIAAAAAAAAAF2OywrCMBBF937FLOsvZFfq1gfdFpFobujAmIHJaPDvrUUQ3J7LOdzENYpo
G2MLZMjkGkh9ho3Im67rPyPSHj5rqsT5wBJo+sMX2vHNWUu0FxW085ai/zqL1l8rip8eC52O
lmBIg4pgtb6K4a5PrDfe4gO1f5cAAAA=! !
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 16:57:21'!
                          z#H4sIAAAAAAAAAEvJLE7MyckvD0ost1JIVijJDy1OdbRSKOMqU8hNLcnIT3HJTC7JzM9LLKpU
KEvMKU0tVkjJt1KItsqtKU7NSVPA0G+lkBsLABgfME1VAAAA! !
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 16:57:40'!
                   z#H4sIAAAAAAAAAEvJLE7Myckvd85JLC62UkhWKMm3UijjSlbITS3JyE9xyUwuyczPSyyqVChL
zClNLVZIAcpHW+XWFKfmpCnAdAclllsp5EL0xgIApKlYP1MAAAA=! !
!CompiledMethod class methodsFor: 'services' stamp: 'GDK 4/30/2021 16:57:59'!
               z#H4sIAAAAAAAAAEvJLE7Myckvd85JLC62UkhWKMkPLU51tFIo40pWyE0tychPcclMLsnMz0ss
qlQoS8wpTS1WSMm3Uoi2yq0pTs1JU4CZEJRYbqWQi9AfCwBMA2xGWwAAAA==! !

----SNAPSHOT----(30 April 2021 16:58:16) Cuis5.0-4526.image priorSource: 263006!
!CompiledMethod class methodsFor: 'class initialization' stamp: 'GDK 4/30/2021 17:32:12'!
         z#H4sIAAAAAAAAAMvMyyzJTMzJrEp1L00sSinmCs5NzMkpSczJVgDSzjmJxcWpxQop+VYK0VbJ
NdXJeskKySDBWpiYUU2ykUJ5ZkmGY05OcGlSMkSHC1gypaY4NScNZFB+OdgoK4UUhZL80OJU
RyuFZKPY2Fg9ALC3SweAAAAA! !

----SNAPSHOT----(30 April 2021 17:32:33) Cuis5.0-4526.image priorSource: 264490!
!SystemDictionary methodsFor: 'code authors' stamp: 'GDK 5/1/2021 09:33:01'!
                 z#H4sIAAAAAAAAAEtMScksyczPS8wJSC3KzSwuBrKLueLU1QFlviYRGQAAAA==! !
!SystemDictionary methodsFor: 'code authors' stamp: 'GDK 5/1/2021 09:53:20'!
                 z#H4sIAAAAAAAAABWMOw7CQAwFe07xujRwCCROQHqkJWsUax0b7XP43J6lmplmSq2aGl7sKsye
yz94uE0nnM3AeOS7dIE6Ll8v94iGeStmWaxBCVNvUrG7CQlN7BTCA/JJcY4bNsk1Ko+Ql3gO
PsN0URkWHetYcvoBKg2XU4gAAAA=! !
!SystemDictionary methodsFor: 'code authors' stamp: 'GDK 5/1/2021 10:09:45' prior: 50339930!
               z#H4sIAAAAAAAAAF2PzUoDUQyF9/MUZyNVqMWNDyC6VBC66qaQzs30hs4kcpOxnbdvQPzBVU44
yZcTKkVCTGl85zaJe2rv9qt77GzGRAt8PozSszojqjh6K4xZCzeQLvj23DCaHkGOx4cb2AAJ
1Oz6Snrksul+kXPOv7w9P2GwlotDnKlxkvTEBWeJ+nXpx/nDDkvu+p+fmrBdPHjCqxwatQW3
auBLZLb8CBNHteJr8CdrZP2wDC6cKiNUs5PfdasrLsq84g0BAAA=! !

----SNAPSHOT----(1 May 2021 10:09:50) Cuis5.0-4526.image priorSource: 264847!

----QUIT----(1 May 2021 10:22:40) Cuis5.0-4526.image priorSource: 265748!

----STARTUP---- (1 May 2021 10:30:55) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(1 May 2021 11:40:09) Cuis5.0-4526.image priorSource: 265827!

----STARTUP---- (5 May 2021 17:14:31) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(5 May 2021 19:12:15) Cuis5.0-4526.image priorSource: 266025!

----STARTUP---- (6 May 2021 06:23:16) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(6 May 2021 15:09:15) Cuis5.0-4526.image priorSource: 266223!

----STARTUP---- (11 May 2021 16:01:34) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Object subclass: #Snapshot
	instanceVariableNames: 'dict level'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-Object Storage'!

!classDefinition: #Snapshot category: #'System-Object Storage' stamp: 'GDK 5/11/2021 16:03:45'!
Object subclass: #Snapshot
	instanceVariableNames: 'dict level'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-Object Storage'!
!Snapshot methodsFor: 'as yet unclassified' stamp: 'GDK 5/11/2021 16:03:53'!
                z#H4sIAAAAAAAAAMtJLUvN4YoDUwCbVNXTDAAAAA==! !
!Snapshot methodsFor: 'as yet unclassified' stamp: 'GDK 5/11/2021 16:04:02'!
     z#H4sIAAAAAAAAAMtJLUvNsVKo4AIzFOIVKvQAeskjnxMAAAA=! !

----SNAPSHOT----(11 May 2021 16:04:08) Cuis5.0-4526.image priorSource: 266421!
!Snapshot methodsFor: 'as yet unclassified' stamp: 'GDK 5/11/2021 16:07:24' prior: 17027360!
                             z#H4sIAAAAAAAAAC2OsQ6CQBBEe79iSizgA0igkd7C0hCzHmtEVtawFz0SPp5VqV4mM5mZSAPv
uj5EXJBlpyeJRJIBzuP1wSEaJv6yxLlMS0IQMkNVwVhum6KxcztB+M2C+m/9RNvuEVRkK9BF
kddQ2N0H9HPQ1+wJssYf9DrSNBcrZKrpZpIAAAA=! !
!Snapshot methodsFor: 'as yet unclassified' stamp: 'GDK 5/11/2021 16:07:29' prior: 50340007!
   z#H4sIAAAAAAAAAC2OsQ6CQBBEe79iSiz0A0igwd7CkhCzHktEVtawFz0SPt7VXPUymcnMRJp4
148h4oqiuDxJJJJMcJ5vDw7RsPCPJdoybQlByAxVBWMZsqK5dztB+M2COnt/1XV7BBXJDbop
DjUUdvcF/TT6Wj1BdvILo860rMcvGFEN5ZMAAAA=! !

----SNAPSHOT----(11 May 2021 16:07:34) Cuis5.0-4526.image priorSource: 267285!

InnerTextMorph subclass: #TextMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Widgets'!

!classDefinition: #TextMorph category: 'Morphic-Widgets' stamp: 'GDK 5/12/2021 06:46:10'!
InnerTextMorph subclass: #TextMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-Widgets'!

----STARTUP---- (12 May 2021 15:21:25) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(13 May 2021 06:22:09) Cuis5.0-4526.image priorSource: 267967!

----STARTUP---- (14 May 2021 15:09:51) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


SoundPlayer!

Exception subclass: #JSException	instanceVariableNames: 'jsError'	classVariableNames: ''	poolDictionaries: ''	category: 'JSBridge-Core'!

!classDefinition: #JSException category: 'JSBridge-Core' stamp: 'GDK 5/14/2021 18:49:48'!
Exception subclass: #JSException
	instanceVariableNames: 'jsError'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JSBridge-Core'!
!JSException methodsFor: 'signalling' stamp: 'WRB 4/26/2020 09:11' overrides: 16962600!
                              z#H4sIAAAAAAAAAEstKsovslIAU7ycWcWuIIaClS1ERI+Xszg1J02hODM9LzEHqkwhN7W4ODE9
FQDhBMXNOwAAAA==! !

"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!

JSException class	instanceVariableNames: ''!

!classDefinition: 'JSException class' category: 'JSBridge-Core' stamp: 'GDK 5/14/2021 18:49:49'!
JSException class
	instanceVariableNames: ''!
!JSException class methodsFor: 'as yet unclassified' stamp: 'WRB 4/26/2020 09:12'!
                    z#H4sIAAAAAAAAAEstKsovslLIKnYtAjJ4Ob2CXSuSUwtKMvPzFPJSyxVSi5DlAccG2DwuAAAA! !

Object subclass: #JSObjectProxy	instanceVariableNames: ''	classVariableNames: 'CallbackSemaphore CallbackProcess'	poolDictionaries: ''	category: 'JSBridge-Core'!

!classDefinition: #JSObjectProxy category: 'JSBridge-Core' stamp: 'GDK 5/14/2021 18:49:49'!
Object subclass: #JSObjectProxy
	instanceVariableNames: ''
	classVariableNames: 'CallbackProcess CallbackSemaphore'
	poolDictionaries: ''
	category: 'JSBridge-Core'!
!JSObjectProxy commentStamp: 'bf 07/12/2016 21:05' prior: 0!
           A JSObjectProxy is a proxy for JavaScript objects. It intercepts messages to look up named properties, and call them if they are functions. Arguments are converted from Squeak to JavaScript objects for nil, Booleans, SmallIntegers, Floats, Strings, Arrays, and Dictionaries. The result is converted back to Squeak objects for numbers and null/true/false, otherwise wrapped in a new JSObjectProxy. To add new properties, or access existing properties without calling them (if they are functions), use at:/at:put:. In addition, sending #new/#new:... creates an instance of that object, and #typeof returns the type as a string. There is a global proxy named JS to allow accessing global JavaScript objects."Call global function"JS alert: 'Squeak says Hello World!!'."Call function on global object (open console to see result)"JS console log: 'Squeak says Hello World!!'."Modify DOM"((JS document getElementsByTagName: 'h1') at: 0)	at: 'innerHTML' put: 'Squeak said Hello World at ', Time now asString."Create new Object, add properties and a method, retrieve property, call method"| obj |obj := JS Object new.obj at: #someProp put: 42.obj at: #complexProp put: {#a -> 3. #b -> 4}.obj at: #someMethod put: (JS Function new: 'return this.complexProp.a + this.complexProp.b').{obj someProp. obj complexProp. obj someMethod}"Inspect all properties in global window object"| object propNames propValues |object := JS window.propNames := JS Object keys: object.propValues := (0 to: propNames length - 1) collect: [:i |	(propNames at: i) -> (object at: (propNames at: i))].(propValues as: Dictionary) inspect"A Squeak block becomes a JavaScript function"JS at: #sqPlus put: [:arg0 :arg1 |	Transcript show: 'sqPlus called with ', arg0 asString, ' and ', arg1 asString; cr.	arg0 + arg1]."It can be called from JavaScript (open transcript to see)"JS eval: 'sqPlus(3, 4)'."It returns a Promise. When resolved, you can access the result"JS eval: 'sqPlus(3, 4).then(function(result) { 	console.log(result);})'."Which even works from Squeak ..."(JS sqPlus: 3 and: 4) then: [:result | JS alert: result]."But instead of using JavaScript's then() function, you can use Smalltalk's semaphores!!"JS await: (JS sqPlus: 3 and: 4)."If you don't need a result, just ignore the Promise"JS setTimeout: [JS alert: 'Hi'] ms: 1000."Now for some fun: Load jQuery, and compile a helper method"| script |(JS at: #jQuery) ifNil: [	script := JS document createElement: 'SCRIPT'.	script at: 'src' put: 'https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'.	script at: 'type' put: 'text/javascript'.	((JS document getElementsByTagName: 'head') at: 0) appendChild: script.].String compile: 'asJQuery ^JS jQuery: self' classified: '*mystuff' notifying: nil."Use jQuery"'canvas' asJQuery hide: 'slow'; show: 'fast'.'h1' asJQuery css: {'color'->'red'. 'text-shadow' -> '0 2px white, 0 3px #777'}.'<button>' asJQuery text: 'Hi'; click: [Transcript show: 'hi'; cr]; appendTo: 'h1'.!
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962057!
                           z#H4sIAAAAAAAAAEWNwQrCMBBEzznkH5Z6aS/SnISgggcVFIrgUSwE3ZaFaMK6Fgr9eG0KehoY
3rxxYsEdsdcqa1HAQeQQkaXPtBoAmQPDoNUyMj1IqEMLxizWMMsPrnPnG1OUk3+39IQfshEo
oSxgdJu5VvmksSt4oW8St0fZjmWhlaKmClKRt3CpJyLxdorrV1D/h+lg58jjXX8AzOgLO7wA
AAA=! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962072!
  z#H4sIAAAAAAAAAEWOsQrCMBRF5wz5h0tddCntJAQRXHUpCC6i8JCnBqINry+RQj/eFlG3C+fA
uaQOtOMeMem4DhQSW1N0rCBEaSOL9oU1A1ikFQzWrKL4h1ef2aGul2vM5lvKtL+Ij9qEdPNP
/JSNNklRoVpgStWlNWd0HK54eb1/ixBW6R2OLlPA8BEm/39tBCf7BgXH7iiuAAAA! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962569!
               z#H4sIAAAAAAAAAG1QwUrDUBA855B/GOqhLZS0PRWCeNGLQkVQT6KwvGzSB8m+8N6mteDH+5JA
quJxdmdndqZwHB6dvkrBPihJkYP2HAJVnCazW6prEMpOjFonKziPinUdWEEC/rRBrVRovWvZ
6znDy4EnOoQaxnrajtgGaCQ1owkC12w06nYt1A2r0sZXYFztJMN9Oc5+aUaNufBpvoLxTMrx
xwhhpY9gIpQCpv+9PzUujn03mJysHkC+CtksTa5bbxur9sg5ttvdDa4WD3SkZ+Ntq091V1nB
RLlzl46wwWYJ0niWpclHjFAOypfueo+uYdEAz+rPOd7y3hZfaZIM/H+KX+z/dPJDb6ppEs6H
HMv39Bu+fe+2wwEAAA==! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16963427!
z#H4sIAAAAAAAAACsoyswr8c+zUkgMLilKTczl5YyGshTyUitKAkpLHHNyrBSKU3PSFBKLgTKZ
eemxvJycmWmuRUX5RVYK0VapRUUKVkXJZUUKNQpxCsWlBalFCujGxurxAgDQtqa8agAAAA==! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962339!
                z#H4sIAAAAAAAAAEssDi4pysxL5+VUcs7PK0stKlHITVUoyVdIVCgGSyjxctoUFGXmZpZklqVa
KRgamtspKGt4JZYlBicXZRaUBOSUpmfmKcCVOBZDDFQwUDDQVEgsAWrR4+WMUyhOzUlDqHJL
zMxJTeEFADTSteh+AAAA! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38'!
               z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HljFMoTs1J4wUAJtzFhhUAAAA=! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38'!
                             z#H4sIAAAAAAAAACupLEjNT+PlVHLMKy5PLVLIrVTIKvZPykpNLlEvVgDJKmgkKhSXFGXmpWsq
8XLaFBRl5maWZJalWikYGprbKShreCWWJQYnF2UWlATklKZn5inAlYRUggxXMFAw0FRILAFq
0OPljFMoTs1JQ6hxS8zMSU3hBQCuNH7ziAAAAA==! !
!JSObjectProxy methodsFor: 'promises' stamp: 'WRB 4/26/2020 09:28'!
                            z#H4sIAAAAAAAAAGWPPQ6DMAyF5wzcwSfgAKk6snSlW9VKFjIlUn6QE0oHDl8HQovUze/J7/Mz
zmiShpGDM5EqtUAkB0xxsglMbJgDw1KpfdRn6NFGqiuVF0W25HAcAhN4msX+olQayGu46Rfa
iTJEqQKW2GrW2cucaJ4e7f0kusPUDTlG++1jbDXX2KFR4n9UKTjLe/Wvvumvsiv0S9u8OxqT
CX5j6vJ0Dj628QNBiIZ1HAEAAA==! !
!JSObjectProxy methodsFor: 'private' stamp: 'bf 11/20/2014 00:38'!
z#H4sIAAAAAAAAACsoysx1Ty1xLSrKL+LltAFxM0syy1KtFAwNze0UlDW8EssSg5OLMgtKAnJK
0zPzFOBKYNoUDBQMNBUSS4Ba9Hg54xTyMnN4AevA3ZNXAAAA! !
!JSObjectProxy methodsFor: 'private' stamp: 'bf 11/20/2014 00:38'!
                              z#H4sIAAAAAAAAACsoyswNLixNTcx2LPYK9k/KSk0usVJIzIOweDltQAoySzLLUq0UDA3N7RSU
NbwSyxKDk4syC0oCckrTM/MU4ErQDVIwUDDQVEgEGmiox8sZp1CcmpOGUO2WmJmTmsILAOwE
t52CAAAA! !
!JSObjectProxy methodsFor: 'private' stamp: 'bf 11/20/2014 00:38'!
                             z#H4sIAAAAAAAAAH2PzwqCQBCHzx58h7lZFx9goUNGBB66GHSIhNVGHVz/MLsWgQ9fq2US1GmG
38588+2NTCFAct5VWBtgNHwXYwlUk5au0wMyNwy96yzGTqxAo8qgZap2aLY2XAJle1ICTvH4
OIwK8MIoYLrkOAbe2Z8wCeZU6yNZAU/qMFq/LDwLO3CHT5rrOPHHBq5S2Xjyna/9Qm+kUolM
ywgr2RYN4xd/0E2V1BqoJvMe1/7/2/bc/KdD8d0HLILWA1EBAAA=! !
!JSObjectProxy class methodsFor: 'instance creation' stamp: 'bf 11/20/2014 00:38'!
                        z#H4sIAAAAAAAAAMtLLeflLE7NSVNILSrKL7JSUA8tTlVQ8gpW8E/KSk0uUQAqUFIoyVdILkpN
LElVSAQJKHglliUGJxdlFpQo5IOVqevxAgBDOHNvSgAAAA==! !
!JSObjectProxy class methodsFor: 'class initialization' stamp: 'bf 11/21/2014 17:00' overrides: 16964803!
                       z#H4sIAAAAAAAAAG2OsQrCQBBE6xT5hyW24geklQgK2sROImzinllcc8feJSfix3vRxsJu4DFv
hgcOjMJPyrNirYSBIPQEuxquYluUIs/qO4oElBtgKGGRkBtT8CQGWvTcHSiuUn1rIBL0OH0V
TsYrD0vwvY0Qrd68w46S75QMkYeLjQ2wqVStlnAqSRVK7SaFF5xnebP63Wa/t+p67vIsY3PU
kVLp88E6GqoH3p2Qbz50g+Jn/IeDSU+S+Q2elOwR+QAAAA==! !
!JSObjectProxy class methodsFor: 'class initialization' stamp: 'bf 11/21/2014 17:00'!
                         z#H4sIAAAAAAAAAE2QsW6DQBBEawr+YToaxAc4nZVICbKVAkup18cYrzgOsnfY8d8HHCtyubPa
N3o7TgxvPzJMnjHPvkbr4ySOCLzmWebGkBhS3KDYMmrLCJtD0NDB2M1eDM33TOmhg3SM5WOs
GzgJaNXokr9hjkQtF2mc6ZQqfKT7Xhe6iUu4ajojnYnXz30JcY4xPh3A69HEdC2Q0N5xzSDe
J/E93NgSaYQzSiKeuHoh3g/73V9wWrwqHOy2Ni0EPrQ3eV6UiPSn/+hlcV8/s5Mj/SJfN1vT
tmNR5b8J+s9WMQEAAA==! !
!JSObjectProxy class methodsFor: 'class initialization' stamp: 'bf 11/21/2014 17:00'!
            z#H4sIAAAAAAAAAD2QwW7CMAyGzz30HSw0qXDhASztMjSOY9O4TZtkUpOGJk5Xp4wiHn6hAm5W
/P32F/OJQudZy+ICJobAkuBSFrNVz5QYdAy76BWcANVHEsOzsphX+vvuB0WSGoE89wlzWDR6
Bh8tQh3NMI2ynF49X0t9Gbdk3ygwgtDRWUqxh83uwCZBy6MirAcxyUUBz2JTA3wkj5AaFgTl
tHWB45AwZNRMerfR2aHrWOpV43wWOnwM3I8IjavzLm3iX+b1GvLOtHd4G7Eqi2LvrmXLkvsV
VIusjvCFChdQIP2c/v+9LIv7cfA5u/g9xN6SuDNNwsaT6upG5FTqndgc+nnc1MRuXPcxIMzv
T3kznzZ7hKfZAlLEB6vuzMvyHy3c4g2aAQAA! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                              z#H4sIAAAAAAAAAGWPsQ6CQAyGZwbeoaMu9wBnnIwDC5AwEoaDFK327sjdGfTtPQwGhaX526/p
/5cMhZNiblV392nylaWzHXoP1Oc25MQS6jUK6DQZFVDAGskjGOJGLPcq1Gq4WocTWxqDY1zy
yD0MjnRmfsJI2FU6NkHxHRxeyEfH8zMWo7hob9gFCZv7e7F9IlrWH4/uHzST/6zTJIkJrKPw
kjDPrAO2Y1aUMzjEGP6hUaRvCfJY3TYBAAA=! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                z#H4sIAAAAAAAAAEtOzMlJSkzODijKT04tLubljC4pKk2NVSjPyMxJDQEyrRSieTk5nRMhyoJT
cxMLMvKLUhXKEzNL9IAy0cWpOWkKGYl5KTmpMFWxCmn5RdmxerwAdHWE5F4AAAA=! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
      z#H4sIAAAAAAAAAH2OPRKCMBCF6xS5w56AA2TGAh11xlIKC4YixEUyLMHZJFQc3vAjdrZvv/ft
a7V7Ep40Ua1NJ8UENQ2mA80vD4w+UoBJijVUB/BIDbzZ9lcMuQl23LvHGcmkWJp/yTwRCSw3
fWJX/agp4sOGNgGxRxe8WnZUUgjbnJkHVlAqZAbFZmSY4Ke4FbAR8137IrB1ryr92YfcMUR2
Fx767xK1CTL5AUZ6se4IAQAA! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                            z#H4sIAAAAAAAAACsoysz1zMsscU7MyUlKTM4utlIoTs1N9MxLSa3g5bQBSWeWZJalWikYGprb
KShreCWWJQYnF2UWlATklKZn5inAlaAYo2CgYKCpkFgC1KfHyxkHNDQnDaHULTEzJzWFFwAA
LTqEfQAAAA==! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                 z#H4sIAAAAAAAAACsoysx1Ty1xTC7JLEt1TszJSUpMznbKyU/O5uW0AUlmgiSsFAwNze0UlDW8
EssSg5OLMgtKAnJK0zPzFOBKsBuiYKBgoKmQWAI0QI+XM06hODUnDaHHLTEzJzWFFwCdsAqM
hAAAAA==! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                     z#H4sIAAAAAAAAACsoysx1Ty1xTC7JLEt1TszJSUpMznYsSi/m5bQByWWCxK0UDA3N7RSUNbwS
yxKDk4syC0oCckrTM/MU4EqwmqFgoGCgqZBYAtSvx8sZp1CcmpOG0OKWmJmTmsILAAZRzKCC
AAAA! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                         z#H4sIAAAAAAAAACsoyswNSi0pLcpzK8rPdU7MyUlKTM62UigCi4Ul5pSm8nLagFRllmSWpVop
GBqa2ykoa3glliUGJxdlFpQE5JSmZ+YpwJVgmqZgoGCgqZBYAtSsx8sZp1CcmpOGUO+WmJmT
msILAAIVW6OJAAAA! !
!Object methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12'!
                     z#H4sIAAAAAAAAAB3JMQqAMAwF0Nmhd/hbluIB3MSta08QShShTSWNPb/gWx+PlHe73ibqYRlS
T4hZtw10sGp3lK5TzEERf5fKY0C5SQTBOxJPzsXux2kNHx4FpAxQAAAA! !
!Object methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12'!
                      z#H4sIAAAAAAAAADWNOw7CMBBE6xS5w5Bj0KVNkSC5R1obxxiM13jthNyen9I+zbxHMqhJ36wp
bdNNMWyYOeNidXXOR3dAHwKvgsJIJAKCelZLd/Dv9OUDLaRM9qlg9eXKtcBwXGwuH0HXNue9
cMr82qBJvBntipT94y/rZZ8cITbM7Rsqp44QlgAAAA==! !
!UndefinedObject methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340404!
                            z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClbIK83JUUiqVCjIKU3P
zFPi5YwrTs1J4wUAkuxVxDYAAAA=! !
!Boolean methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340404!
                             z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClYoKSpN1U9LzClOVUiq
VCjIKU3PzFPi5YwrTs1J4wUALdWfujwAAAA=! !
!SmallInteger methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340404!
                z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClbIK81NSi1SSKpUKMgp
Tc/MU+LljCtOzUnjBQBfONG8OAAAAA==! !
!Float methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340404!
                           z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClbIK81NSi1SSKpUKMgp
Tc/MU+LljCtOzUnjBQBfONG8OAAAAA==! !
!Collection methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340404!
                      z#H4sIAAAAAAAAAE2OPQvCMBRF5wz5D5dOiiC6Bhy6du0oFmL7rA/apORDqfTHG1MFt8O5912e
9lVduj6OZIIURWvNg1ygDsGiqqGd0zOuM6Yh9mwKKZavYyxSrKhOKDMYeip4Gm7w/KK9FPzJ
Dgmy7KzCWZFu7/it6KCwyS3GDsctpphMrvx/dkkTzXoi3zSmrLOyAAAA! !
!Dictionary methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340449!
                     z#H4sIAAAAAAAAAFWOvQrCMBSF5wx5h0MnRRRdAwoFp64dReG2Xku0JiVJK5U+vGmpoNvhu/f8
kM/y1FXtk02QIimt6dgFviJYZDlscecyoOjR1G2lTSLFAPLelh4agxSzVnukzlEPwy8Fz/UN
Xr95I4Ueb9soJji9awraGn+0CidFY8o3hoLCYnJorLBbomkjITy4x+9SrA+RdlS3/MfPsecy
75MfWjAu9dsAAAA=! !
!String methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340449!
                        z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClYoLinKzEtXSKpUKMgp
Tc/MU+LlLE7NSVNIzkksLlbILHaqLEkF0mkhRaWpVgrRcSDJWD1ezrji0oLUIgUU0wEZWkAs
awAAAA==! !

asJSArgument	"converted to JS function by plugin"	^self!

----STARTUP---- (14 May 2021 18:51:47) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Exception subclass: #JSException	instanceVariableNames: 'jsError'	classVariableNames: ''	poolDictionaries: ''	category: 'JSBridge-Core'!

!classDefinition: #JSException category: 'JSBridge-Core' stamp: 'GDK 5/14/2021 18:52:39'!
Exception subclass: #JSException
	instanceVariableNames: 'jsError'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JSBridge-Core'!
!JSException methodsFor: 'signalling' stamp: 'WRB 4/26/2020 09:11' overrides: 16962600!
                         z#H4sIAAAAAAAAAEstKsovslIAU7ycWcWuIIaClS1ERI+Xszg1J02hODM9LzEHqkwhN7W4ODE9
FQDhBMXNOwAAAA==! !

"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!

JSException class	instanceVariableNames: ''!

!classDefinition: 'JSException class' category: 'JSBridge-Core' stamp: 'GDK 5/14/2021 18:52:40'!
JSException class
	instanceVariableNames: ''!
!JSException class methodsFor: 'as yet unclassified' stamp: 'WRB 4/26/2020 09:12'!
                    z#H4sIAAAAAAAAAEstKsovslLIKnYtAjJ4Ob2CXSuSUwtKMvPzFPJSyxVSi5DlAccG2DwuAAAA! !

Object subclass: #JSObjectProxy	instanceVariableNames: ''	classVariableNames: 'CallbackSemaphore CallbackProcess'	poolDictionaries: ''	category: 'JSBridge-Core'!

!classDefinition: #JSObjectProxy category: 'JSBridge-Core' stamp: 'GDK 5/14/2021 18:52:40'!
Object subclass: #JSObjectProxy
	instanceVariableNames: ''
	classVariableNames: 'CallbackProcess CallbackSemaphore'
	poolDictionaries: ''
	category: 'JSBridge-Core'!
!JSObjectProxy commentStamp: 'bf 07/12/2016 21:05' prior: 0!
           A JSObjectProxy is a proxy for JavaScript objects. It intercepts messages to look up named properties, and call them if they are functions. Arguments are converted from Squeak to JavaScript objects for nil, Booleans, SmallIntegers, Floats, Strings, Arrays, and Dictionaries. The result is converted back to Squeak objects for numbers and null/true/false, otherwise wrapped in a new JSObjectProxy. To add new properties, or access existing properties without calling them (if they are functions), use at:/at:put:. In addition, sending #new/#new:... creates an instance of that object, and #typeof returns the type as a string. There is a global proxy named JS to allow accessing global JavaScript objects."Call global function"JS alert: 'Squeak says Hello World!!'."Call function on global object (open console to see result)"JS console log: 'Squeak says Hello World!!'."Modify DOM"((JS document getElementsByTagName: 'h1') at: 0)	at: 'innerHTML' put: 'Squeak said Hello World at ', Time now asString."Create new Object, add properties and a method, retrieve property, call method"| obj |obj := JS Object new.obj at: #someProp put: 42.obj at: #complexProp put: {#a -> 3. #b -> 4}.obj at: #someMethod put: (JS Function new: 'return this.complexProp.a + this.complexProp.b').{obj someProp. obj complexProp. obj someMethod}"Inspect all properties in global window object"| object propNames propValues |object := JS window.propNames := JS Object keys: object.propValues := (0 to: propNames length - 1) collect: [:i |	(propNames at: i) -> (object at: (propNames at: i))].(propValues as: Dictionary) inspect"A Squeak block becomes a JavaScript function"JS at: #sqPlus put: [:arg0 :arg1 |	Transcript show: 'sqPlus called with ', arg0 asString, ' and ', arg1 asString; cr.	arg0 + arg1]."It can be called from JavaScript (open transcript to see)"JS eval: 'sqPlus(3, 4)'."It returns a Promise. When resolved, you can access the result"JS eval: 'sqPlus(3, 4).then(function(result) { 	console.log(result);})'."Which even works from Squeak ..."(JS sqPlus: 3 and: 4) then: [:result | JS alert: result]."But instead of using JavaScript's then() function, you can use Smalltalk's semaphores!!"JS await: (JS sqPlus: 3 and: 4)."If you don't need a result, just ignore the Promise"JS setTimeout: [JS alert: 'Hi'] ms: 1000."Now for some fun: Load jQuery, and compile a helper method"| script |(JS at: #jQuery) ifNil: [	script := JS document createElement: 'SCRIPT'.	script at: 'src' put: 'https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'.	script at: 'type' put: 'text/javascript'.	((JS document getElementsByTagName: 'head') at: 0) appendChild: script.].String compile: 'asJQuery ^JS jQuery: self' classified: '*mystuff' notifying: nil."Use jQuery"'canvas' asJQuery hide: 'slow'; show: 'fast'.'h1' asJQuery css: {'color'->'red'. 'text-shadow' -> '0 2px white, 0 3px #777'}.'<button>' asJQuery text: 'Hi'; click: [Transcript show: 'hi'; cr]; appendTo: 'h1'.!
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962057!
                           z#H4sIAAAAAAAAAEWNwQrCMBBEzznkH5Z6aS/SnISgggcVFIrgUSwE3ZaFaMK6Fgr9eG0KehoY
3rxxYsEdsdcqa1HAQeQQkaXPtBoAmQPDoNUyMj1IqEMLxizWMMsPrnPnG1OUk3+39IQfshEo
oSxgdJu5VvmksSt4oW8St0fZjmWhlaKmClKRt3CpJyLxdorrV1D/h+lg58jjXX8AzOgLO7wA
AAA=! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962072!
  z#H4sIAAAAAAAAAEWOsQrCMBRF5wz5h0tddCntJAQRXHUpCC6i8JCnBqINry+RQj/eFlG3C+fA
uaQOtOMeMem4DhQSW1N0rCBEaSOL9oU1A1ikFQzWrKL4h1ef2aGul2vM5lvKtL+Ij9qEdPNP
/JSNNklRoVpgStWlNWd0HK54eb1/ixBW6R2OLlPA8BEm/39tBCf7BgXH7iiuAAAA! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962569!
               z#H4sIAAAAAAAAAG1QwUrDUBA855B/GOqhLZS0PRWCeNGLQkVQT6KwvGzSB8m+8N6mteDH+5JA
quJxdmdndqZwHB6dvkrBPihJkYP2HAJVnCazW6prEMpOjFonKziPinUdWEEC/rRBrVRovWvZ
6znDy4EnOoQaxnrajtgGaCQ1owkC12w06nYt1A2r0sZXYFztJMN9Oc5+aUaNufBpvoLxTMrx
xwhhpY9gIpQCpv+9PzUujn03mJysHkC+CtksTa5bbxur9sg5ttvdDa4WD3SkZ+Ntq091V1nB
RLlzl46wwWYJ0niWpclHjFAOypfueo+uYdEAz+rPOd7y3hZfaZIM/H+KX+z/dPJDb6ppEs6H
HMv39Bu+fe+2wwEAAA==! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16963427!
z#H4sIAAAAAAAAACsoyswr8c+zUkgMLilKTczl5YyGshTyUitKAkpLHHNyrBSKU3PSFBKLgTKZ
eemxvJycmWmuRUX5RVYK0VapRUUKVkXJZUUKNQpxCsWlBalFCujGxurxAgDQtqa8agAAAA==! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38' overrides: 16962339!
                z#H4sIAAAAAAAAAEssDi4pysxL5+VUcs7PK0stKlHITVUoyVdIVCgGSyjxctoUFGXmZpZklqVa
KRgamtspKGt4JZYlBicXZRaUBOSUpmfmKcCVOBZDDFQwUDDQVEgsAWrR4+WMUyhOzUlDqHJL
zMxJTeEFADTSteh+AAAA! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38'!
               z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HljFMoTs1J4wUAJtzFhhUAAAA=! !
!JSObjectProxy methodsFor: 'accessing' stamp: 'bf 11/20/2014 00:38'!
                             z#H4sIAAAAAAAAACupLEjNT+PlVHLMKy5PLVLIrVTIKvZPykpNLlEvVgDJKmgkKhSXFGXmpWsq
8XLaFBRl5maWZJalWikYGprbKShreCWWJQYnF2UWlATklKZn5inAlYRUggxXMFAw0FRILAFq
0OPljFMoTs1JQ6hxS8zMSU3hBQCuNH7ziAAAAA==! !
!JSObjectProxy methodsFor: 'promises' stamp: 'WRB 4/26/2020 09:28'!
                            z#H4sIAAAAAAAAAGWPPQ6DMAyF5wzcwSfgAKk6snSlW9VKFjIlUn6QE0oHDl8HQovUze/J7/Mz
zmiShpGDM5EqtUAkB0xxsglMbJgDw1KpfdRn6NFGqiuVF0W25HAcAhN4msX+olQayGu46Rfa
iTJEqQKW2GrW2cucaJ4e7f0kusPUDTlG++1jbDXX2KFR4n9UKTjLe/Wvvumvsiv0S9u8OxqT
CX5j6vJ0Dj628QNBiIZ1HAEAAA==! !
!JSObjectProxy methodsFor: 'private' stamp: 'bf 11/20/2014 00:38'!
z#H4sIAAAAAAAAACsoysx1Ty1xLSrKL+LltAFxM0syy1KtFAwNze0UlDW8EssSg5OLMgtKAnJK
0zPzFOBKYNoUDBQMNBUSS4Ba9Hg54xTyMnN4AevA3ZNXAAAA! !
!JSObjectProxy methodsFor: 'private' stamp: 'bf 11/20/2014 00:38'!
                              z#H4sIAAAAAAAAACsoyswNLixNTcx2LPYK9k/KSk0usVJIzIOweDltQAoySzLLUq0UDA3N7RSU
NbwSyxKDk4syC0oCckrTM/MU4ErQDVIwUDDQVEgEGmiox8sZp1CcmpOGUO2WmJmTmsILAOwE
t52CAAAA! !
!JSObjectProxy methodsFor: 'private' stamp: 'bf 11/20/2014 00:38'!
                             z#H4sIAAAAAAAAAH2PzwqCQBCHzx58h7lZFx9goUNGBB66GHSIhNVGHVz/MLsWgQ9fq2US1GmG
38588+2NTCFAct5VWBtgNHwXYwlUk5au0wMyNwy96yzGTqxAo8qgZap2aLY2XAJle1ICTvH4
OIwK8MIoYLrkOAbe2Z8wCeZU6yNZAU/qMFq/LDwLO3CHT5rrOPHHBq5S2Xjyna/9Qm+kUolM
ywgr2RYN4xd/0E2V1BqoJvMe1/7/2/bc/KdD8d0HLILWA1EBAAA=! !
!JSObjectProxy class methodsFor: 'instance creation' stamp: 'bf 11/20/2014 00:38'!
                        z#H4sIAAAAAAAAAMtLLeflLE7NSVNILSrKL7JSUA8tTlVQ8gpW8E/KSk0uUQAqUFIoyVdILkpN
LElVSAQJKHglliUGJxdlFpQo5IOVqevxAgBDOHNvSgAAAA==! !
!JSObjectProxy class methodsFor: 'class initialization' stamp: 'bf 11/21/2014 17:00' overrides: 16964803!
                       z#H4sIAAAAAAAAAG2OsQrCQBBE6xT5hyW24geklQgK2sROImzinllcc8feJSfix3vRxsJu4DFv
hgcOjMJPyrNirYSBIPQEuxquYluUIs/qO4oElBtgKGGRkBtT8CQGWvTcHSiuUn1rIBL0OH0V
TsYrD0vwvY0Qrd68w46S75QMkYeLjQ2wqVStlnAqSRVK7SaFF5xnebP63Wa/t+p67vIsY3PU
kVLp88E6GqoH3p2Qbz50g+Jn/IeDSU+S+Q2elOwR+QAAAA==! !
!JSObjectProxy class methodsFor: 'class initialization' stamp: 'bf 11/21/2014 17:00'!
                         z#H4sIAAAAAAAAAE2QsW6DQBBEawr+YToaxAc4nZVICbKVAkup18cYrzgOsnfY8d8HHCtyubPa
N3o7TgxvPzJMnjHPvkbr4ySOCLzmWebGkBhS3KDYMmrLCJtD0NDB2M1eDM33TOmhg3SM5WOs
GzgJaNXokr9hjkQtF2mc6ZQqfKT7Xhe6iUu4ajojnYnXz30JcY4xPh3A69HEdC2Q0N5xzSDe
J/E93NgSaYQzSiKeuHoh3g/73V9wWrwqHOy2Ni0EPrQ3eV6UiPSn/+hlcV8/s5Mj/SJfN1vT
tmNR5b8J+s9WMQEAAA==! !
!JSObjectProxy class methodsFor: 'class initialization' stamp: 'bf 11/21/2014 17:00'!
            z#H4sIAAAAAAAAAD2QwW7CMAyGzz30HSw0qXDhASztMjSOY9O4TZtkUpOGJk5Xp4wiHn6hAm5W
/P32F/OJQudZy+ICJobAkuBSFrNVz5QYdAy76BWcANVHEsOzsphX+vvuB0WSGoE89wlzWDR6
Bh8tQh3NMI2ynF49X0t9Gbdk3ygwgtDRWUqxh83uwCZBy6MirAcxyUUBz2JTA3wkj5AaFgTl
tHWB45AwZNRMerfR2aHrWOpV43wWOnwM3I8IjavzLm3iX+b1GvLOtHd4G7Eqi2LvrmXLkvsV
VIusjvCFChdQIP2c/v+9LIv7cfA5u/g9xN6SuDNNwsaT6upG5FTqndgc+nnc1MRuXPcxIMzv
T3kznzZ7hKfZAlLEB6vuzMvyHy3c4g2aAQAA! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                              z#H4sIAAAAAAAAAGWPsQ6CQAyGZwbeoaMu9wBnnIwDC5AwEoaDFK327sjdGfTtPQwGhaX526/p
/5cMhZNiblV392nylaWzHXoP1Oc25MQS6jUK6DQZFVDAGskjGOJGLPcq1Gq4WocTWxqDY1zy
yD0MjnRmfsJI2FU6NkHxHRxeyEfH8zMWo7hob9gFCZv7e7F9IlrWH4/uHzST/6zTJIkJrKPw
kjDPrAO2Y1aUMzjEGP6hUaRvCfJY3TYBAAA=! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                z#H4sIAAAAAAAAAEtOzMlJSkzODijKT04tLubljC4pKk2NVSjPyMxJDQEyrRSieTk5nRMhyoJT
cxMLMvKLUhXKEzNL9IAy0cWpOWkKGYl5KTmpMFWxCmn5RdmxerwAdHWE5F4AAAA=! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
      z#H4sIAAAAAAAAAH2OPRKCMBCF6xS5w56AA2TGAh11xlIKC4YixEUyLMHZJFQc3vAjdrZvv/ft
a7V7Ep40Ua1NJ8UENQ2mA80vD4w+UoBJijVUB/BIDbzZ9lcMuQl23LvHGcmkWJp/yTwRCSw3
fWJX/agp4sOGNgGxRxe8WnZUUgjbnJkHVlAqZAbFZmSY4Ke4FbAR8137IrB1ryr92YfcMUR2
Fx767xK1CTL5AUZ6se4IAQAA! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                            z#H4sIAAAAAAAAACsoysz1zMsscU7MyUlKTM4utlIoTs1N9MxLSa3g5bQBSWeWZJalWikYGprb
KShreCWWJQYnF2UWlATklKZn5inAlaAYo2CgYKCpkFgC1KfHyxkHNDQnDaHULTEzJzWFFwAA
LTqEfQAAAA==! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                 z#H4sIAAAAAAAAACsoysx1Ty1xTC7JLEt1TszJSUpMznbKyU/O5uW0AUlmgiSsFAwNze0UlDW8
EssSg5OLMgtKAnJK0zPzFOBKsBuiYKBgoKmQWAI0QI+XM06hODUnDaHHLTEzJzWFFwCdsAqM
hAAAAA==! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                     z#H4sIAAAAAAAAACsoysx1Ty1xTC7JLEt1TszJSUpMznYsSi/m5bQByWWCxK0UDA3N7RSUNbwS
yxKDk4syC0oCckrTM/MU4EqwmqFgoGCgqZBYAtSvx8sZp1CcmpOG0OKWmJmTmsILAAZRzKCC
AAAA! !
!JSObjectProxy class methodsFor: 'callbacks' stamp: 'bf 11/26/2014 18:52'!
                         z#H4sIAAAAAAAAACsoyswNSi0pLcpzK8rPdU7MyUlKTM62UigCi4Ul5pSm8nLagFRllmSWpVop
GBqa2ykoa3glliUGJxdlFpQE5JSmZ+YpwJVgmqZgoGCgqZBYAtSsx8sZp1CcmpOGUO+WmJmT
msILAAIVW6OJAAAA! !
!Object methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12'!
                     z#H4sIAAAAAAAAAB3JMQqAMAwF0Nmhd/hbluIB3MSta08QShShTSWNPb/gWx+PlHe73ibqYRlS
T4hZtw10sGp3lK5TzEERf5fKY0C5SQTBOxJPzsXux2kNHx4FpAxQAAAA! !
!Object methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12'!
                      z#H4sIAAAAAAAAADWNOw7CMBBE6xS5w5Bj0KVNkSC5R1obxxiM13jthNyen9I+zbxHMqhJ36wp
bdNNMWyYOeNidXXOR3dAHwKvgsJIJAKCelZLd/Dv9OUDLaRM9qlg9eXKtcBwXGwuH0HXNue9
cMr82qBJvBntipT94y/rZZ8cITbM7Rsqp44QlgAAAA==! !
!UndefinedObject methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340838!
                            z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClbIK83JUUiqVCjIKU3P
zFPi5YwrTs1J4wUAkuxVxDYAAAA=! !
!Boolean methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340838!
                             z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClYoKSpN1U9LzClOVUiq
VCjIKU3PzFPi5YwrTs1J4wUALdWfujwAAAA=! !
!SmallInteger methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340838!
                z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClbIK81NSi1SSKpUKMgp
Tc/MU+LljCtOzUnjBQBfONG8OAAAAA==! !
!Float methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340838!
                           z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClbIK81NSi1SSKpUKMgp
Tc/MU+LljCtOzUnjBQBfONG8OAAAAA==! !
!Collection methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340838!
                      z#H4sIAAAAAAAAAE2OPQvCMBRF5wz5D5dOiiC6Bhy6du0oFmL7rA/apORDqfTHG1MFt8O5912e
9lVduj6OZIIURWvNg1ygDsGiqqGd0zOuM6Yh9mwKKZavYyxSrKhOKDMYeip4Gm7w/KK9FPzJ
Dgmy7KzCWZFu7/it6KCwyS3GDsctpphMrvx/dkkTzXoi3zSmrLOyAAAA! !
!Dictionary methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340883!
                     z#H4sIAAAAAAAAAFWOvQrCMBSF5wx5h0MnRRRdAwoFp64dReG2Xku0JiVJK5U+vGmpoNvhu/f8
kM/y1FXtk02QIimt6dgFviJYZDlscecyoOjR1G2lTSLFAPLelh4agxSzVnukzlEPwy8Fz/UN
Xr95I4Ueb9soJji9awraGn+0CidFY8o3hoLCYnJorLBbomkjITy4x+9SrA+RdlS3/MfPsecy
75MfWjAu9dsAAAA=! !
!String methodsFor: '*jsbridge-core' stamp: 'bf 11/25/2014 18:12' overrides: 50340883!
                        z#H4sIAAAAAAAAAEss9gp2LEovzU3NK+HlVErOzytLLSpJTVEoyVfwClYoLinKzEtXSKpUKMgp
Tc/MU+LlLE7NSVNIzkksLlbILHaqLEkF0mkhRaWpVgrRcSDJWD1ezrji0oLUIgUU0wEZWkAs
awAAAA==! !

asJSArgument	"converted to JS function by plugin"	^self!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/JSBridge.st----!

----SNAPSHOT----(14 May 2021 18:53:08) Cuis5.0-4526.image priorSource: 268541!

!classRenamed: #JSException as: #DriverJSException stamp: 'GDK 5/14/2021 18:54:00'!
Smalltalk renameClassNamed: #JSException as: #DriverJSException!
!JSObjectProxy methodsFor: 'as yet unclassified' stamp: 'GDK 5/14/2021 18:54:01' prior: 50340691!
                           z#H4sIAAAAAAAAAGWPPQ6DMAyF5wzcwSfgAKm6laUr3apWsiJTIoUEOQE6cPg6/LRI3fye/D4/
44Q2aeg5dDZSoWaI1AFTHFwCGyvmwDAXah/1GRp0kcpC5UWRNXXYt4EJPE1if1EqteQ13PWI
bqAMUWoDS2wxy+xlTrQvj+5xEm0wmTbHaL99jC3mEjs0SvyP2gpO8l75q2+bm+wK/cJ2JL7W
1dtQn2zwK1lvr+f4cx0/bR2FiCIBAAA=! !
!DriverJSException class methodsFor: 'as yet unclassified' stamp: 'GDK 5/14/2021 18:54:02' prior: 50340510!
                   z#H4sIAAAAAAAAAEstKsovslLIKnYtAjJ4OV2KMstSi7yCXSuSUwtKMvPzFPJSyxVSi5BVAQBv
e4WBNAAAAA==! !
!JSObjectProxy methodsFor: 'as yet unclassified' stamp: 'GDK 5/14/2021 18:54:02' prior: 50340925!
   z#H4sIAAAAAAAAAGWPPQ6DMAyF5wzcwSfgAKm6laUr3apWsiJTIoUEOQE6cPg6/LRI3fye/D4/
44Q2aeg5dDZSoWaI1AFTHFwCGyvmwDAXah/1GRp0kcpC5UWRNXXYt4EJPE1if1EqteQ13PWI
bqAMUWoDS2wxy+xlTrQvj+5xEm0wmTbHaL99jC3mEjs0SvyP2gpO8l75q2+bm+wK/cJ2JL7W
1dtQn2zwK1lvr+f4cx0/bR2FiCIBAAA=! !
!DriverJSException class methodsFor: 'as yet unclassified' stamp: 'GDK 5/14/2021 18:54:03' prior: 50340937!
                   z#H4sIAAAAAAAAAEstKsovslLIKnYtAjJ4OV2KMstSi7yCXSuSUwtKMvPzFPJSyxVSi5BVAQBv
e4WBNAAAAA==! !

!classRenamed: #JSObjectProxy as: #DriverJSObjectProxy stamp: 'GDK 5/14/2021 18:54:19'!
Smalltalk renameClassNamed: #JSObjectProxy as: #DriverJSObjectProxy!
!Object methodsFor: 'as yet unclassified' stamp: 'GDK 5/14/2021 18:54:21' prior: 50340845!
            z#H4sIAAAAAAAAADWNwQ6CMBBEzxz6DyOf4Y2EEwcx4W6yrQtWK4vdFuTvRQ3HN5l5Q9p0rb2z
S6Yo2zGs6CXiyjYPgx+HA6oQZFEkwUSqIHSvzPSA/EbfvKGZOhf9lLD4dJOc4GScOaZNUJri
Uke/0f5zjvJeYUm9O/GCKfrnX1npXjlCOfTmA2h+TAKcAAAA! !
!Object methodsFor: 'as yet unclassified' stamp: 'GDK 5/14/2021 18:54:21' prior: 50340966!
                             z#H4sIAAAAAAAAADWNwQ6CMBBEzxz6DyOf4Y2EEwcx4W6yrQtWK4vdFuTvRQ3HN5l5Q9p0rb2z
S6Yo2zGs6CXiyjYPgx+HA6oQZFEkwUSqIHSvzPSA/EbfvKGZOhf9lLD4dJOc4GScOaZNUJri
Uke/0f5zjvJeYUm9O/GCKfrnX1npXjlCOfTmA2h+TAKcAAAA! !

----SNAPSHOT----(14 May 2021 18:55:09) Cuis5.0-4526.image priorSource: 296508!

----SNAPSHOT----(14 May 2021 18:55:45) Cuis5.0-4526.image priorSource: 298695!

SystemOrganization addCategory: #JavaScript!

SystemOrganization addCategory: #'JavaScript-Tests'!
!Boolean methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:14'!
                    z#H4sIAAAAAAAAAMsqDijKL8nn5eWMU/AK9k/KSk0uUUjKz89JTcwDywAAcqAUoSEAAAA=! !

OMeta2 subclass: #JSCompiler	instanceVariableNames: 'contextLevel numTemps'	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSCompiler category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:15'!
OMeta2 subclass: #JSCompiler
	instanceVariableNames: 'contextLevel numTemps'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSCompiler methodsFor: 'rules' stamp: 'yo 2/1/2012 23:24'!
                          z#H4sIAAAAAAAAALVX32vbMBB+zkP+B0EfnAwW2KthgzZ0sG5sDynbQwjFteXEqyNl+tE4ZP7f
d5JsSbYVt2wshaKc7sd3n06nS0r3h6LE6P10OrlKRSUmnc/bD2jNcZmjVDKGiVhSInAlNtPf
k/PVL0kFRgk5iV1BtnFVd+0qdGAFESsB/7fGgl82MRYJ99WL3KqiBmic2pWofdtzNJtFC5Qu
UIR+8hUmWYyuoujhQdAbSkuckIeHKELHQuyu2VbuIRkOGrP5HBX5PZM4RmuwF2C/mUf1qwDY
VV7/FxyRclLkH5OSN+K8Ay9NynIIMG9XXwoubkusQryJE157EBtXgHAJPn50wZxhN+GwXdtI
HPJwkez57W1QdjGoi8h8TuD73i8QtXd8Eccj3hZkkHInZsXrblkIILXDbcU7LG6xGDtl0i8z
d7rXQudB1LeE360+45PHmOf1FUHs8rl+ZSh0kEb4DMJw3ECgbpx/iZRLkgZqImFbPp1MTNs4
SL5re0ZM8LFZ231oCDh5shqdr6DUYn2k2cn5pIfWoNs+zpNodrf69vgTpwIpdKKgRNX2LXnW
8AOdbDGd9D6QNWSg9dUCOLhmLDl1ajVgpCBCecWKOpun4vA3/KnYfmpGHpLG7xHQyJ1koT3r
RUifYSEZidFsENec5JUkGc4LgrO5q3hjNCyTXjs+D4/ID6luUthh3X9CXvBEitJecAYqlx1F
d6sbrcGLLUnKqOmD4LIgEo/aLVuljmmG0zJQxKT3lpkbEqofdUuaG9NvZ/rWjNgNTsge0HGn
3uSRa9zvcet1c4E3SNs2zU5JdbNDFGj2OMgo7G42rdxwaoQWREZ/hGFwB2gA44WIuoh7OEdB
5JR9ClQqdDmB7ZsT4y4x7sSw4fkTKCcCq16whBnnYjMAZeO50VBLJWwud5ubj26IrQicl+wA
bNkCf4Vm5K9OT1tKtT/KIIdXNd1ZmLaN7pMnfI/3h02MqwNDfSHfUVlmt89J6fVhy/My4Xim
7AChVZy/iVOf/7VucUYr0oRaVdsA213oe81xLYaasJmrGaghyufET3mDQF9im7nYMXoc7XJ2
Yrtb3WtlNYF8V05Me1PPXdMvnFd2Cvh0rQMHjj+vA7RreJPAPa68/AwsnZ96WrSNez1G+0pb
/u3jbW01S+4mbhAmXLLghAlPykgbGh8wm3niKz6+Yr6kkqXeDwPuUTcoTXFhtDOkuMdVuMLK
28KyDVvP5CnNsB7HW454r4dbG0fJgXIRHIW9XzVw2oBUnGbV3LFWhWpATRJGVY9uEMkUgBm5
zde9mzfan1AAqvaljfBdXdcuorzI0yWa0qrNWQ6S/wO0D2ISKg4AAA==! !
!JSCompiler methodsFor: 'rules' stamp: 'yo 2/1/2012 23:25'!
    z#H4sIAAAAAAAAAGWOQQrCMBBF11nkDgNdVBd6gEAEEU+gu9JFaKdtJKalSbRSe3czRbRimNXk
vz+vaK+dNnhQDkHg0PUgXNMGUx5vyoDknI1JiZUKxoOyD99oW8MbEsPEGNvsIBuHLaRxppw/
I1BQ218al9xMpasI0dGIwsWd0JYCEikl3LVv9n0drmi9EzBSjvrXoKtzH1BAFldfUyoQEnz8
ykmFs8/7DS1xks5n6xdzMnUlBgEAAA==! !
!JSCompiler methodsFor: 'rules' stamp: 'yo 1/30/2012 20:25'!
  z#H4sIAAAAAAAAAEvOzy3IzEn1ySwucc1JzU3NK1Gw5eXlhApbVXDq2ilEV1foKagDUW0sAJBa
5hkvAAAA! !
!JSCompiler methodsFor: 'support' stamp: 'yo 1/29/2012 12:00'!
          z#H4sIAAAAAAAAAEsuLSpKzStxzs8rSa0o4TUx0uPljFNIhnB9UstScxRsFQx4OTkz00KKSlOt
FKLV03PykxJz1GPBgm6JOcVg0eSSihJ1HVSdBUWZeSXBJUAyPZYXAIATUoBqAAAA! !
!JSCompiler methodsFor: 'initialization' stamp: 'yo 1/29/2012 12:01' overrides: 16958866!
                       z#H4sIAAAAAAAAAMvMyyzJTMzJrErl5eUsLi1ILVJACOnxcibn55WkVpT4pJal5ihY2SoYAMXy
SnNDUnMLiiF8AHAhUeRCAAAA! !
!JSCompiler methodsFor: 'support' stamp: 'yo 1/29/2012 12:01'!
                          z#H4sIAAAAAAAAAMtNzE4NSc0t4OXlzCvNBbGKFaxsFeBsbQVDPV7OOAX1rGKQgLoOQqqgKDOv
JLgESKYDAEsCFFZGAAAA! !
!JSCompiler methodsFor: 'support' stamp: 'yo 1/29/2012 12:01'!
                              z#H4sIAAAAAAAAACvIL3DOzytJrSjh5eVMhrB8UstScxSsbBVQ+LoKhnq8nHEKxak5aQrJpUVF
qXklUK0AC6NfzkUAAAA=! !
!JSCompiler methodsFor: 'support' stamp: 'yo 1/29/2012 12:01'!
                              z#H4sIAAAAAAAAACsoLc5wzs8rSa0o4eXlTIawfFLLUnMUrGwVUPjaCoZ6vJxxCsWpOWkKyaVF
Ral5JVCtANWbeaZGAAAA! !
!JSCompiler methodsFor: 'support' stamp: 'yo 1/29/2012 12:01'!
                              z#H4sIAAAAAAAAACsuLE1NzHbOzytJrSjh5eWMU1CHCpVUlKjrKCRDZHxSy1JzFAqKMvNKgkuA
ZDoAGzEKCDgAAAA=! !

OMeta2 subclass: #JSDeclVisitor	instanceVariableNames: 'declsStack'	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSDeclVisitor category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:20'!
OMeta2 subclass: #JSDeclVisitor
	instanceVariableNames: 'declsStack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSDeclVisitor methodsFor: 'support' stamp: 'yo 2/1/2012 22:55'!
             z#H4sIAAAAAAAAAEtMSXFJTc6xUsjj5eVMAbKKg0sSk7MV8vJLXHMLSioVMtNCikpTrRSieTmR
5XMSi0sUgJqtFKqVQcJ6CnkKiUC5osy8dCC7lpczFgA/fazOWwAAAA==! !
!JSDeclVisitor methodsFor: 'rules' stamp: 'yo 2/1/2012 22:54'!
                          z#H4sIAAAAAAAAAIWPQU7EMAxF11n0Dpa6AaTJASIBQkJcgOWoi7T1lEolgTitUnUyZ8dumbIa
sbN/vv9/abEZCB6LQi2lzGDdHD961xkKzd/islLqSDicwLbtKxsNuIq1wxNscodRpOL8TxDI
I5kp34xbSsKogc80lE1MPC/l9+gjanBZw5S3ltPomhstNnRUXIHRRQxvbI69Z0ClNoLat/Pu
GdBOuHsMA4xf8mW1M0nbL5SkC1ONXe9YE7MGycsr2uVuB0nwfEzQ03sMvIIPBrZ9/qz9UFX3
sKw0DyZRXpsSgaWXEOwsUdegH7lg7R6nAQAA! !
!JSDeclVisitor methodsFor: 'support' stamp: 'yo 1/29/2012 12:07'!
                z#H4sIAAAAAAAAAEvNK0ktcivNSy7JzM/j5eVMSU3OKQ4uSUzOVkhMSbFS8EwBqsgsqQxOLVHI
Sy0HABsEgS8vAAAA! !
!JSDeclVisitor methodsFor: 'support' stamp: 'yo 2/1/2012 22:53'!
z#H4sIAAAAAAAAAEtPLbFSyOPljKtWBjL1FPIUEouDS4oy89L1FJSTSyqAQtXKhaX5JalAudpa
XgA66jBnMAAAAA==! !
!JSDeclVisitor methodsFor: 'support' stamp: 'yo 1/29/2012 12:08' overrides: 16958866!
           z#H4sIAAAAAAAAAMvMyyzJTMzJrErl5eUsLi1ILVJACOnxcqakJucUB5ckJmcrWNkq+BelpBal
pjjn5+SkJpdk5ucp5KWW6wEASq6N/UQAAAA=! !
!JSDeclVisitor methodsFor: 'support' stamp: 'yo 2/1/2012 22:55'!
            z#H4sIAAAAAAAAAMtJTSxLdSvNSy7JzM/j5eWMU9DQSElNzikOLklMzlYoSs3NL0v1SSwu0VRI
LPYvSkktSk1xzs/JSQVrUEhMSXHLLCousVJQV7dG4iknpaZn5lkrVOaXFhWn5qSBdDsWFSVW
8gIANf3eTXEAAAA=! !

OMeta2 subclass: #JSParser	instanceVariableNames: ''	classVariableNames: 'CharEscapes Keywords'	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSParser category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:26'!
OMeta2 subclass: #JSParser
	instanceVariableNames: ''
	classVariableNames: 'CharEscapes Keywords'
	poolDictionaries: ''
	category: 'JavaScript'!
!JSParser class methodsFor: 'as yet unclassified' stamp: 'yo 1/30/2012 10:08' overrides: 16964803!
                             z#H4sIAAAAAAAAAG2OTWvDMAyGzznkP7xkhW6XMga9BHbaB2y7DHpcd1AdmZh5dpGVhYz++Dlt
GTQEhAV+Hr2SC04deffLZVUWr5t3ksSCi++yeOOhj9Ik1Pd4aTio02HDisD9s8TvGlfXO2H6
gqHE+VHTwsSshY7RsKXOK5oI9hnbKLAukPcDbBeMuhjgbN6ZKykFw9GO0RDWTgJS78ZAbSX2
UBnwQ4K+dZ5vVmXx0JI8JUN7vjjv0R2DKes5Knu30Fjjbr3Oh9T4qAmHsigOMMduxlkCpTGO
jLLkkYts0jq7+25smX1OVo94sT3xxXYOhhP8XwBv5zSZakbmNJ1qSrs5rzqfVM3B5RkuV+Uf
scLlXAkCAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:27'!
       z#H4sIAAAAAAAAAEtMSXGtKChSsOXltIGyrSo4FTSUtJUUahSUdJU0rfILOHNLc8AylXZWxUXJ
nLp2CtHVysWpeSl6CkC+QnlmSYZTTmJednFIUWZubipQOL9AIbE4uDI3KT9HT6FCT6GyNpa3
BmYOAKMBX5V1AAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:09'!
                             z#H4sIAAAAAAAAAEvMySvNVbDl5cxJLSlJLVKoUUjJTM8sAQCTG20sFwAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:27'!
    z#H4sIAAAAAAAAAEvMS3GtKChSsOXltIGyrSo4ldTUlDhTC8G8Sjur4qJkTl07hehq5eLUvBQ9
BSBfoTyzJMMpJzEvuzikKDM3NxUorKyupqaup1Chp1CtnFaal6ynoA7kKmtoggSKUktKi/Ig
QpW1tbWxvDVQGwC6P+ffgwAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:10'!
                 z#H4sIAAAAAAAAAEssSvfJLC5RsOXlTK0oKLJKyywC8jSUdJQUQHxNLaui1OISTk5OXTuFaBBT
ITElxQ2kyEoBrNZaIbHYsagosTKWt4YzNbegpJITCkA6lDU0YwF3pYSHYwAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:28'!
                       z#H4sIAAAAAAAAAEvKzEvJzEtXsOXltFHIS8xNtcpTULJVUkitKCiyKlOwsyouSubk1LVTiK5W
TklNztFTAAoolGeWZDjlJOZlF4cUZebmpqboKeTpKZTVxvLWcEIM4YQAZI15ConFwSVFQNuA
7NpYAGNLWcd6AAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/2/2012 09:38'!
                              z#H4sIAAAAAAAAAEvKyU/OVrDl5bRRUKpWUiguyS3RsqooVlCqVVKwsyouSuYEAl07hWigWGJK
iltmUXGJlQJQXKE8syTDKScxL7s4pCgzNzc1xRpJgXJSanpmHlCk2LGoKLEyFgCyha9dZwAA
AA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/2/2012 09:38'!
          z#H4sIAAAAAAAAAEtOLE5VsOXltFFQAjGVFFIrCoqsUhWUrJQUbBSKS3JLtKwqihXsrIqLko0g
FCenrp1CdLUySL2eAlBAoTyzJMMpJzEvuzikKDM3NzVFTwEoA9SWmJLilllUXGKlANaOoc4a
SYVyUmp6Zh5QpNixqCixsjYWAPwDQWKbAAAA! !
!JSParser methodsFor: 'accessing' stamp: 'yo 1/29/2012 12:28'!
     z#H4sIAAAAAAAAAEvOzy3IzEkt4uXljFPwCnbOh3ABQmOtYxcAAAA=! !
!JSParser methodsFor: 'accessing' stamp: 'yo 1/29/2012 12:29'!
       z#H4sIAAAAAAAAAEtJTc4JyyzOLMkv4uXljFPwCnZJhYsAAOlqp7YdAAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/2/2012 09:38'!
        z#H4sIAAAAAAAAAEtJTUsszSlRsOXltFFQgvKUFJSslBRsFIpLcku0rCqKFeysiouSjSAUJyen
rp1CdLUyVLGeAlBQoTyzJMMpJzEvuzikKDM3NzVFTwGoLzElxS2zqLjESgGsH0ORNZIK5aTU
9Mw8oEixY1FRYmVtLACd90CnmwAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:34'!
              z#H4sIAAAAAAAAAEstdK0oKFKw5eW0UYCwrSo4FTQUlGxtbZUUahSUFKE0nKukoGmVX8BZlJoD
Vl2pYGdVXJTMqWunEF2tXJyal6KnAOQrlGeWZDjlJOZlF4cUZebmpgKF8wsUEouDK3OT8nP0
FCr0FCprYxV4a2AmAQAJ2PJAigAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:12'!
             z#H4sIAAAAAAAAAEstTk4sSHXOSCxSsOXlVIlRSAYyrZI5de0UokGirsUg+WKFxBIrheRYALtI
uO4uAAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/2/2012 09:39'!
               z#H4sIAAAAAAAAAG2PPQvCQBBE6yvyHxasbVIeaBcFQSwCNiHFek70YC+R3Jr8fT0jfkC6Gd4+
2MHAUvauEASyF+lOLLTKTNSgVnsgM6aKkIbOcHL00WvXU2B1V0uJ0+j1GRcJx/pfcV24ecHs
/Zt9jcMeyvlGWBXtvNNM8OMs11TtymJguXN6q8VImBp+zO1rlaVpXf0A2hvXRPIAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 15:07'!
          z#H4sIAAAAAAAAAG3OQQrCMBBG4fUscofZNRFygYDuPIFLcRHTvyKkSUhaidDDG5VCQWf5MW8Y
PKw/ZXf0GAubm49X63kvaOPyq8pUln9Z7QSR5JKsQ2GEnvSBz/XSdGGMaXoSfajAD4ycYzbc
tT0dB30PaZ4YNcFN6Lt3pMRCa7bOT17inB0Y7ROE7YEXO/vI0dIAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:13'!
                     z#H4sIAAAAAAAAAEutKMjPS80rUbDl5dRQSVWoUVBx1VTIzCtJTU8tssrk1LVTiFZPVddRyIzl
reFMzS0oqeQEAoiwgXosAOMjX0JAAAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:34'!
                       z#H4sIAAAAAAAAAI2QywrCMBBF11nkH4aI4IPGfbAVCu7c6a50UW1Ki+mDJGLF+u8mtir1hYEw
l8vNmZnwupLgYjSHUi7rSjKOgCwIcKs1ENbJBHlMyR2yx/EgOA+yhIJx4Jjp1BdRsVcbmeU5
jylwCppCcglx0we7HU2mCp68O1Fx/QtpHr0RR2RqmA0Qpy0Tl+Ab0ehZaw1NGbOygsDcSAj/
oFeR0qGx2ij6NNJfE9lAEX9N2H5qfcq3pXgs8LJB7xe6tjzEV6Sc1BCWAQAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:45'!
         z#H4sIAAAAAAAAAK1RO0/DMBCePeQ/nNwhyYAHRkM7sCGxwYaqKE2vxSJxgu2EIJr/ztmGlgqK
EMKL73yP7+FNa27atoN5wi6BU8YZzzhjGVA6lIaDLhuUI/A5Bxw7IxEW0prqHM4WcP86W2NV
CwgPz8o9XNWlfrR3RjUNrgWMAnBaJsyfXZjfx03nXkLM4qKnvnUoQKt6WkIuVWjkF56Ln4P3
ETjqdqan/bmsftUdduey980853RZ1zhpoyL26cQxsiNI+06ZElAJ6KlO+pLdkXvBOBaNi8SU
JmbRvgM4nECP4CvcKi0gTQV8uDxCaW+dUXpL8eTfCfJan+RI9V5Xcccsm6VFUQ9Fkea+YtHF
gsV6A1t00n/WIdl3TwSEXuZXnUHQ8GeF/0B++Jny8g00UrOA3wIAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 23:15'!
                          z#H4sIAAAAAAAAAEvLL8pNzClWsOXlzEvMTbVKyywqLlHQUNJRUgDxNbWsilKLSzg5OXXtFKJB
TIXElBQ3kCIrBbBaa4XEYseiosTKWN4aztTcgpJKTgQAaVLW0IwFAKyD2u9mAAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:22'!
                      z#H4sIAAAAAAAAAEsrSkwuyczPS8xRsOXlVNFTyEssKS1KzLHK4+TUtVOIVtdT11HIi+Wt4UzN
LSip5ISKqscCAGa21Js5AAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/2/2012 09:39'!
                               z#H4sIAAAAAAAAAHWNsQrCMBiE5w6+w5EOVdEOjrEWdPABxE0c0iatwSaB/ClSSt/dti6CuB13
H/dVrS0vigIOiygDWzJUzhvREBe+JrAVA+sZMlAwYc0LJzvknHy5AxvYJ0bbHLc+Jtf6UqVI
ps+gnUWywTjjpcPj1Aj7pKvXxiiZoo8nKP03T+4Us0xIedaeAscs/YH3X0RcqFrbsaGj96Ib
hvsbAyEl1N8AAAA=! !
!JSParser methodsFor: 'accessing' stamp: 'yo 1/31/2012 21:12'!
                z#H4sIAAAAAAAAAEtPLVGwylOw5eWMLk7NSVMA8q0U8mJ5ASriF50YAAAA! !
!JSParser methodsFor: 'accessing' stamp: 'yo 2/1/2012 15:40'!
    z#H4sIAAAAAAAAAEtPLbFSyOPljKtWBjL1FPIUEouDS4oy89L1FJSTSyqAQtXKhaX5JalAudpa
XgA66jBnMAAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:22'!
      z#H4sIAAAAAAAAAMvMK0lNTy1SsOXlVNFV4ASCvMSS0qLEHKs8Tl07hWh1XXUdhbxY3hpODRVt
hRqF1NyCkkpNNEV5sQDmnq4rRwAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 19:47'!
                       z#H4sIAAAAAAAAAMsqzs9TsOXltFFQqlZSAPGcMvNSMvPSi60KihWUapUU7KyKi5I5OTl17RSi
q5XzUsv1FIACCuWZJRlOOYl52cUhRZm5uakpegrVymmlecl6CurqegrKGpp6CgXFtbWxAGbm
/oRiAAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:37'!
      z#H4sIAAAAAAAAABWKPw6CMBTG5w7e4QsdmOwBXpCBAxgGN+NA5AlPaSFtgzWEu1vG3593mF0j
rhc34HJSFQ7R+nlhH3/XzjIlFFSA0+JpRU3BP5U617hvOnA0yIyvxLGZOvcJNy/Wcm+w6eGo
ZZkPnl7IRNBxlGCQdoN1f/wBI89uQ3sAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:37'!
          z#H4sIAAAAAAAAAMsqzs9zysxLycxLL1aw5eW0UUASsSpQ0FDSUUIW0tSyKijmVLCzKi5K5uTU
tVOIrlZOSk3PzNNTAIoolGeWZDjlJOZlF4cUZebmpqboKRTU6igUFMfy1nCm5haUVHIiAER3
YWl+SaqeQl5mTm0sAB6ARd6OAAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 23:20'!
                 z#H4sIAAAAAAAAAMsqzs8LKMovSC0qqfRLzE1VsOXl1MgDMWoUcjJLUosSczStCjh17RSiq5UL
S/NLUvUUCmpjAVOOjIM3AAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 23:19'!
                              z#H4sIAAAAAAAAAMvJLEktSsxRsOXlLC5ITE4tVtDIK81NSi1SqFEoLinStCrg1LVTiC5QKE5N
zs9LiQUAYEUjrDAAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:38'!
   z#H4sIAAAAAAAAAMstzXGtKChSsOXltFGAcqwqODUUlLSUFGoUlPTBpKqSplV+AWdpXmJRpVWl
gp1VcVEyp66dQnS1cnFqXoqeApCvUJ5ZkuGUk5iXXRxSlJmbmwoUzi9QSCwOrsxNys/RU6jQ
U6isjeWtgRgDAHYW61x5AAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 23:15' overrides: 16963839!
 z#H4sIAAAAAAAAAMtLzE1VsOXlLC5ITE4tVrDRyEktKUktUqhRUInXVNBIzMkrzYVwtOysikuK
FKJBRGJxcGVuUn5OrFWegn20hndqZXl+UUqxQmZeck5pSmqxlUKepkJefkmsgq6dQnReLADw
kaSAZgAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:22'!
 z#H4sIAAAAAAAAAMtLLCktSsxRsOXlTMlMzyzRtkop5tS1U4gOLinKzEtXyEstdyvKz7VSSCmO
BQALObViLAAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:22'!
      z#H4sIAAAAAAAAAMtLLc/JzEtVsOXlTK1ITC7JqdRwzkgsArJSixSSizQBgPu4DyAAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:23'!
                           z#H4sIAAAAAAAAAMvL90stz8nMS1Ww5eUsLkhMTi32y4cJ1eVBGABoiCNWJQAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:23' overrides: 16958343!
           z#H4sIAAAAAAAAAMsrzU1KLVKw5eXMSywpLUrMscpUSCtKTC7JzM8DctIUUisK8vNS80qsUjl1
7RSiq5UhOvQUNDJ1FNJ0FFI1FRKL/cBitbEAXdm1jU4AAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:38'!
       z#H4sIAAAAAAAAAMsvcq0oKFKw5eW0UYCwrSo4lWpqlDgT81LA3EoFO6viomROTl07hehq5eLU
vBQ9BaCAQnlmSYZTTmJednFIUWZubipQWFm9pkZdT6FCT6FaOa00L1lPQR3IVdbQBAkUpZaU
FuVBhCpra2tjeWtglgAAc1HxB4YAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:38'!
              z#H4sIAAAAAAAAACvILy5Jy6xQsOXltFEoKMrMda0oKLIq4CwuSExOLfbL90stz8nMS1XQUNLW
VlKoUVDS1VXStMovULCzKi5K5tS1U4iuVgYZoqcA5CuUZ5ZkOOUk5mUXhwDNyk1N0VMAqk3M
yXEqLfFJLC5RSCwOrsxNys/RUyiojeWt4YRZCQDJ2x1liAAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:38'!
                          z#H4sIAAAAAAAAACsoysx1rSgoUrDl5bRRgPGsChSUopUUUkHMTAWlWCUFO6viomROKNC1U4iu
Vk5PLdFTAIoqlGeWZDjlJOZlF4cA9eempugpFOgpZNbG8tagmamnpJCXmJtqlaugpKGkkFiU
7pNZXGIFpIsVlDQRlkDML07NS8FpQS7QjlodkBHFuK1JI8PZ1cqFpfklqXoKabVYPIDP1XAb
khNzcnBbgeRqmMkeKQBMh1E3hwEAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:38'!
     z#H4sIAAAAAAAAAJWQQUvDQBCFzznkPwyTQ1us+QGLFhQED56KtxLC0kzqajKps1sa0fx3d7tK
Q0TQOe08Ht97O3sx7V2/l/sKrtME5wjkN0WAC0ziXK5gQ0X6kbBuSXGSjHRLTQ07cgo4OBrj
SHQzMb1nr4fOUQ48BBPWB9460zFCeK3JOq9eATIdEWIIhCZadg/GOqVDGVgpK9svnnfm4Fc4
Gvd022h+sY9i2pYqL58rDUvQRWRvELD4hoyr/Q2V3Yjot+EMO12pnzAj0RJXvyKzWVkGuSxn
P/k59NOI2oh1MMdl3BcXSvy9Rrn//0UOJ6g/TkCFvGfbcfoJV7cKBgoCAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:39'!
z#H4sIAAAAAAAAACtKzXGtKChSsOXltFGAcqwqODUUlOxslRRqgBSYtIFwbJQ4FTSt8gs4E1NS
wCorFeysiouSOXXtFKKrlYtT81L0FIB8hfLMkgynnMS87OKQoszc3FSgcH6BQmJxcGVuUn6O
nkKFnkJlbSxvDYqlSpl5xSWJecmp+WlKnCBAhi3K6vHxGYnFnlCT4uPVgTYB7QNbBjUPAJgn
iIH0AAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:30'!
                            z#H4sIAAAAAAAAACtOVrDl5SwuSExOLfbL90stz8nMS1XQyIMyahTUEhJq1dWBjNS8FE3eGk4l
ayUAJimUkDQAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:30' overrides: 16958407!
                  z#H4sIAAAAAAAAACsuSExOVbDl5UxI0NdXV1fQqMtLLc/JzEtVSM5ILNLU4q0ByWiBZRIStEBK
IBIKEB5QPg5sBgAWkG1cSQAAAA==! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 22:30'!
                          z#H4sIAAAAAAAAACsuSExOLfbL90stz8nMS1Ww5eXUqMuDcsCSmloAk+enkyQAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/2/2012 09:43'!
z#H4sIAAAAAAAAAI2TsW7bMBCGZw1+hwOz2IFjoBnZJkNbdCoyBAUyBBpo6hgTpkiVpGobid49
FGkFkmE61abT3feRv0jnaw93s2KtDN/O3opvQP4xS2AtdSX1CxXSOg9zsvwoLa6pxVC7p85y
cLzon5t7eH69WuOL1Cvo6zvpN98V01v3x8q6xmoFEdUtoZ8uk0oKAmROAPeNpRzIgkC/IOqB
oHJ4fBPJVYxMUmQ1fAU+yLpPFSPo/3IH6G4jFZ7nuik3YWP/JbJLZFKZD0xGMon9iK/M00WB
C44oEMb+NqZJm3Chk29GAowC8kqAM4fXlLsvs6KYVyhYqzytINqqroQ3wLrxh1ToygU1jf+J
InQPk7dAOnIS8bDcJM6uFsMZCeolJGj/cnvMfW2Rbck0gjE5fs+Ah3/HjfZSt3ga5QgztHxC
8htrduF/NYyjezAPuFNSY8pyX5y5H3Egu+995Hp7+MFCPL+kZkodksmib63OqPDcVUwTFzIu
p+R8phdJA0a0mntpAkizGqmGvvAYLvr08g7nFbnKLi2owhExreX5Ay26KCZfSXHyJMHf1vgw
raWKfceYprtLvVi+A/wSCCoCBQAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 1/30/2012 23:22'!
                           z#H4sIAAAAAAAAACsuKVKw5eXUUFBRV9BILU5OLEh1zkgsUqhRqAOKJAOZmlpWycVAad4aThUl
DDVKyGqUNDl17RSiq5WBpmbmpespBINphbzUcrei/FwrheTi2lgAGfUqWHIAAAA=! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:40'!
                       z#H4sIAAAAAAAAAF2OQQ6CMBBF111wh59xUVjYAzTKQhNP4I4QUmsJhFIUagxR7m4RE6OzmeTP
mzfj+3GvvK4OtVPWjthGbAMKKbGT7XQjfcRYDNIzRKCY4FRrpAElhAXRAZmZcnF84jl8wrQX
P2KdInusrrfOGwHuasunHIksoxnJOOdFYYoi9Fwa9iUDOOVSsz/zey9BKodes59a7oTvBcIM
99pXO6tcMxz7um3NWcALBLEWKKf8BQsHCRf8AAAA! !
!JSParser methodsFor: 'rules' stamp: 'yo 2/1/2012 18:41'!
                             z#H4sIAAAAAAAAACvNSyyqVLDl5bRRUNLVVeIsyC8uScussCpQsLMqLkrm5OTUtVOIrlYuTi3R
UwAKKJRnlmQ45STmZReHFGXm5qam6CkU6CmAFOQBmerqegrK6rrqUMHC0vySVD0Fw9ra2lje
GpAd2tpUskMbtx14vQEyAYcdEIfDTTSoBdoAdzcuMwugChTJtlRRHWYPJ8wIAAKv1cSWAQAA! !

Notification subclass: #JSBreak	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSBreak category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:54'!
Notification subclass: #JSBreak
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!

Notification subclass: #JSContinue	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSContinue category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:54'!
Notification subclass: #JSContinue
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!

Notification subclass: #JSThrow	instanceVariableNames: 'value'	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSThrow category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:54'!
Notification subclass: #JSThrow
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSThrow class methodsFor: 'as yet unclassified' stamp: 'yo 1/30/2012 10:09'!
                    z#H4sIAAAAAAAAACvPLMkIS8wpTbVSqODl5YxTKE7NSVPISy1XKIOKWitU5pcWgYQBusXKKywA
AAA=! !
!JSThrow methodsFor: 'accessing' stamp: 'yo 1/30/2012 10:09' overrides: 16962752!
                           z#H4sIAAAAAAAAACtLzClN5eXljFMAswDkg2lfDwAAAA==! !
!JSThrow methodsFor: 'accessing' stamp: 'yo 1/30/2012 10:09'!
                z#H4sIAAAAAAAAACtLzClNtVKo4OXlBDMVrGwVKgCVrkFqFQAAAA==! !

IdentityDictionary subclass: #JSObject	instanceVariableNames: ''	classVariableNames: 'ArrayProto BooleanProto FunctionProto Global NullProto NumberProto ObjectProto StringProto Undefined'	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSObject category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:58'!
IdentityDictionary subclass: #JSObject
	instanceVariableNames: ''
	classVariableNames: 'ArrayProto BooleanProto FunctionProto Global NullProto NumberProto ObjectProto StringProto Undefined'
	poolDictionaries: ''
	category: 'JavaScript'!

JSObject subclass: #JSArray	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSArray category: 'JavaScript' stamp: 'GDK 5/14/2021 19:01:58'!
JSObject subclass: #JSArray
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSArray methodsFor: 'equality' stamp: 'yo 1/31/2012 17:53'!
        z#H4sIAAAAAAAAAEst9CvNTUot4uXlrFHISc1TKFOo4eUEMaxsFYpTc9IUsoodS6wUlIFC6SUZ
ehA5WwUDhcy0kKLSVCuF6DgFg1i4uCFCvAzNCEM9oOGZxRD7kLWXxYL0xym45eQnlijkJebp
8QIAvcp3FZcAAAA=! !
!JSArray methodsFor: 'field access' stamp: 'yo 1/29/2012 12:20'!
                       z#H4sIAAAAAAAAAF2OPwsCMQzF5w79DgGXu0WciwoOHojgpNNR4aDpWS2p9M9w3970lBscEsjL
7+XlmQ5ZwQsnKQV3cOlEGUeM4Ow1FlTQSyHu0KfyZnHBNQRScIwxRDDhS4mmXtjvYAMDGdbq
uIUmobcwsG/lkcb8aHVbabEk3MigdYRG//Ru8KkuZifWkDNOl5C7UGiGuPRa8l9/b30AgKw6
3c8AAAA=! !
!JSArray methodsFor: 'field access' stamp: 'yo 1/29/2012 12:21'!
                      z#H4sIAAAAAAAAAI2RQWvDMAyFzznkPzzYoSujpbuaptBjYcfuFFoIWGm9BSc4TmkgP36S3TVZ
GWM3S3pP+iR/tFuv8Ek9mo4fl6JK00TCLMNTRfbkzzDl3nWkkKdJggF1pd9iYeDEM1tg2p31
dCIHW3vUjrWSXmN1mI/2I1qqSpBzopgZyxqjUThX9IizZocl9xwnqCx6IuYNSCTS3tdqArPA
KzRncmX0lTGDr2CXhGG5d6upNJZ0GHIcFd+L3k+QiEKuMC725xH+ASzdXhhxM7Hee/5OcrM8
0v74rEDKxa5hxjh0Wv8CvsUGEd8BAAA=! !
!JSArray methodsFor: 'field access' stamp: 'yo 1/29/2012 12:21'!
                     z#H4sIAAAAAAAAAMsq9k6tLObl5YxT0DBQKMm3UtAoTs1JU8gqdiyxUlDOSc1LL8nQVNBVMNRU
SCx2LCpKrAQAtPlqYjMAAAA=! !

JSObject subclass: #JSBuiltInProto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSBuiltInProto category: 'JavaScript' stamp: 'GDK 5/14/2021 19:02:00'!
JSObject subclass: #JSBuiltInProto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSBuiltInProto methodsFor: 'field access' stamp: 'yo 1/29/2012 12:21'!
           z#H4sIAAAAAAAAAMsqdiyxUshOreTl5YxTKE7NSVNIhAgoZKY5JhWn5gF50bycnP5JWanJJQFF
+SX5CghNnLEAt5kWG0EAAAA=! !

JSObject subclass: #JSContext	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSContext category: 'JavaScript' stamp: 'GDK 5/14/2021 19:02:00'!
JSObject subclass: #JSContext
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSContext methodsFor: 'field access' stamp: 'yo 1/29/2012 12:21'!
                               z#H4sIAAAAAAAAAMsqdiyxUshOrVQoKAUyyhJzeHk54xQ0ilNz0hQy85JzSlNSi71TK8FqNHk5
OTPTQopKU60UooFsTrCqRHQDODljFTLT3BJzimHqNOAKldXj4wuK8kvy4+PVNRWw2A7UDAAb
re9DlAAAAA==! !

JSObject subclass: #JSGlobalProto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSGlobalProto category: 'JavaScript' stamp: 'GDK 5/14/2021 19:02:01'!
JSObject subclass: #JSGlobalProto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSGlobalProto methodsFor: 'field access' stamp: 'yo 1/29/2012 12:21' overrides: 17017700!
                              z#H4sIAAAAAAAAAMvMyyyxUsjj5eUsLi1ILVKA8vWA/NScNIVEIEdZPT6+oCi/JD8+Xl2hoBQk
nZmjBwDYcddCOQAAAA==! !
!JSGlobalProto methodsFor: 'field access' stamp: 'yo 1/29/2012 12:22'!
                      z#H4sIAAAAAAAAAMsqdiyxUshOreTl5YxTKE7NSVNIhAgoZKY5JhWn5gF50bycnDUKBUX5JfkK
NUA2hGVli1CvrB4fDxaNj1fXg6kA0pyZaX6ZOUATwCpTi4ryi7xTK/3yS9zyS/NSYqEq8ksg
iiDmwp0ElI4FAFGcpDGgAAAA! !
!JSGlobalProto methodsFor: 'field access' stamp: 'yo 1/29/2012 12:22'!
         z#H4sIAAAAAAAAAMsqdiyxUshOrVQoKAUyyhJzeHk54xSKU3PSFBLRZABZMJ5fLAAAAA==! !
!JSGlobalProto methodsFor: 'field access' stamp: 'yo 1/29/2012 12:22'!
               z#H4sIAAAAAAAAAMtNzE51zsjMSeHl5YxT8Ap2zs8rSa0oUchLLefl5EwssVJQVo+PLyjKL8mP
j1dXKCgFihSn5qRZA2Ur80uLQGwA+AuWjUQAAAA=! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:18'!
                          z#H4sIAAAAAAAAAEssKkqsDCjKL8nn5eWMU3AsgnEBiLXejhkAAAA=! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:18'!
                       z#H4sIAAAAAAAAAEvKz89JTcwLKMovyefl5YxTcMpHCAAAhprfgx0AAAA=! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/30/2012 21:03'!
                   z#H4sIAAAAAAAAAEstS8yxUkjOT0nl5eWMUyhOzUlTQIgplGeWZLjn5CeBBMBy6WCOQm5idmpw
Yl5KUn4FAOieIwRCAAAA! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/30/2012 21:05'!
              z#H4sIAAAAAAAAAG2QvQ6CMBSFZwbe4SYO0MUHwImBmLg4MDgYJaWUv5TWtBfFqO9uKRA1cerN
6el37im/UhEBUwWHW4P1Vqh8FCp3+r43D57XmhgjWAVZNklZFsClx8W6+VhG5HQVGi5KKHvJ
sFHyYPmJvC4vgOrKWHs4EMhVcY/gGDEcEJ6wS/d5yxnCiLKY0Ol0hFtza1IuCzujSlE3snKb
x7rqOy7RIQn5aRPOiX86kBNZ+94Z3KYXqg3X0FFkdSy+/2WulWqWCN6ZJdGGPSbU6w3m4Zhf
SQEAAA==! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:18'!
                               z#H4sIAAAAAAAAAF2OvQ7CMAyE5wx9B0sMmfoCYUSwwsaAIMpfaaAkUetUytuTtCiqWE62v7Pu
uugUWu+uFvujmxkYN4MYnxNbFKTXiS3aNOQBp7jaL6NHDx/xNofeDrohRCCDHeVceW04pyTE
fKA3Ge2ArXXQ/T7vdL9x57RqzvMWlfjKyrKFpVCFZakwlGaYglnZWb6Mwr+6xZx8HCczdF9K
htKlAQEAAA==! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:18'!
    z#H4sIAAAAAAAAAEvPyU9KzOHl5YxTcM8BMQGN7HDCEQAAAA==! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 2/2/2012 11:45' overrides: 16964803!
        z#H4sIAAAAAAAAAM1aW2/bNhR+9kP+A6thtdWkbrZHp86QtcuQAd2KNdseHCNgZDpmIpMuRTV2
m+y37xxeZEqWnIsdYAVaSOI537nw3EiXC645TflXthPttH779MfFFUs0KX3ead0SPmJCc714
J0WmVZ5oqeq+HVP8d0GoUrREe4vgH6nKmArAuzstK/CjklqSXp94DewHwW6A5NdUXtDUrtrn
cPU4F4nmUhQQIcCUXrN3E56OqoQ7rdZVdqR75Ds6m6ULMsvhuZOxdEzGju4frie/iC894uRT
dZkBfUdPeHakLvH9CM2MyYUcLXpk0Ev0XKOlLXDY2NDbtzGqZRadTITo4oqhqSx63CVBv0/+
EiM25oKNCB+fqpyBOM9riCvmDg1zZ+wx2+fnqOT5eTsmX2iK/B1YTRSjmh2BuV8omvwnS6Qa
9azqwIrIfyN5FiNe+Id6O5zrquaBh+KDKtNC5gp9jGhDs+w4EpqmT9iDZ3B9PoWgzjZzX8dg
J3K2OFZy2iM/Ei2dUzOI+vg5nFlOpR2HCYrP8B00t9CCpwh0ofjokn36nDN6/YHpiQStv/u3
Tyh690W/keQq++VzTtOeJew3E/b7nqS/Rl4hsB/EwovHBEI1AmBfqs6L4eUTEyPrDi1/ljJl
VKBLbgD1yO+5gYuJkLoUmsCTysTUnBlTmrOscOZTVVzV8JotMvCFSTizl8t8X1PRrKBgry/N
h0I/u/4/3W/i1M4LS43OheEH3i4tP2nFxeVGPm8PLMWwbTfXIM8AVm8BvBNukNvXADsIQFPn
KlH3rRoOdyYCfs+nF0wFjfHnnKf6RBS9rzHH94Po3YrzagKWZha3lCpaHvO538iHyRL1JVzY
B4GWl6SLuGsX6nuiYdh33W9Va7spE3kDmr9nCZ9CWqc0YaCKKFpSbezu2sjdbSR4bQleNxK8
sgSvGgneWII3jQRnZ5bi+0aKQ0tw2EzgMvCwOUvfWoq3zQQO463B8F0IXG4j4ikR225vO2Sr
e18t6aU2sOXcuMpOPXpJLNTGx4iaP0yWqyyAva6uzO/K89aEqndyxI70JsabLFunFIoBEStt
dt+NQGOuMg3RlHBuxsz1ObgX5GAQdr/naXrv8O/2Yz3d85fNoCtYQwM76o5YoOkTY6Uqu2ay
nMfDerH+FAfSAY/Un/5wvCWujYIX9WLGrIzkgHirEH/lKPhQm2qi7ZYYU4ox3Xw0nxqm/CXl
ukl/SYXjObaW/WVLMfCOK2XiUk9clx3Ws/6wZHXHDEdgg51nJ0KzS6ZMAtwrpcI+dFzHNM0q
bPuNDEbRTkXTQ/JD3KQp5usJNNf5e4nup6THiXO9lcXJa7DTyvMS8G9wFDUNwLyHlb/kwHJF
LneEID8rabIST8XAVYrCpSrhoOyniNwfN915yIcNeMN+x6dgYYz+tivmMVg6EWO80HBXCMep
pHh9Yr8FZHmWMjbbsP6/Zyn4cyzVB56mPIPjphhlK1kdkxvKy4cYmsLRZTPh4Cm0S6ppzx+y
qJW3rPdF2aw5WJX0MXVwM31OFRVZovhMkwwmui0oxeBov5lOxf0ZQm1BI4dmdXpiF4J9G8a1
hTrMsaJkh+L9jdlzKVC6katXwfXt59IgHAvqFbDHMCd/Ta9010L7IW9phrift90OmW3tdDW9
XPICqg/Ul9MO1vCmsWaZeDysUzN+EC7Si2yLAyosA+AwLonIuNiuCACsiEjklq0AwIoITbds
haZVKyh8+vFRQsji/v1QySkVlYaxiCuix6mUarv2GciKGCXh6me7YgwkG1Vj7vOmvW8l6ACx
IgQmGGhIIzktRpg/zStOP2Wz7eft3XFiCYhJjRpwl8nmhZ6+uMFL9eRhtLAtq73ji0i3KJXd
0nGZ9AuFQbNvRDGdK2EHJnIH7I7ysfwwXVp+W3GfwE5ewOBuMXDAexCfneYMT3ER+TjGGocN
opcvo2HIqCdUn05ycV1RuSwK8H8iBSm89axdd7Uybm83kIFHppIoY8jSBcWIUm99VFBGS3/f
x4NEUa0x97IOpJ2ELOPQovjx4eE4zh0J3HzAxiKG/aVtCXDJBFM8+Wjm0wBkCiiYRl+ocge5
vgn5PaLgKRpE5scmKJsdpOCjOczKxJ75v7kzG+kYxrjgNyFkFhmeLhBIkV0S7RGD1vIfEGYA
kMMu/ACBAzhogwSof8tZZhiHyFdn1UPcElreiTxH5CLjKs/06QNQPJ+JqDCgwrv2PgnhfPis
pViJmDJ1qM+abfr2nNsEaKH5QNEjUXn7ljp36nfwzu/gShFc6x378CjvGH+cRc0OMbZlcEJJ
JqRT2OD91Eoo+CI6U1EPHLCLWPB8QC7gJ9HrgxKJCEhEPYkOSHQ9SRSQwEstzVlIc1ahgUCk
eap7LUtSWGRWVzbCeqahyqzdi2ruNW/FmvQLmHwGWtzzczwzlrvSvLKtMHHY6w8bZGqwj31i
HppobKs37vx8QuGOKoP5M2H1gm7gVMEITJzQcM1VysuXxLwU6R6m07xbXO7g/ZixthDnfgoP
hgjz4c0bcp3mcAUMPvqccwW/8WCQusMYDDik8HetkHkFF/td39/6mqU5umTJVGQjSNYTRtD8
EVUjfNAsM63S2gpI8BMx6ACZYp1E5BheFyDEKhROCN7Rq/XLlvJSj9kzI5/zXaD6YDrsmv+m
YvLQUTUhD6Ld1blgFbNcqpAm+OKxq7E8pbMQeVwJvMFwfTVRJuEQISgoK2G5Kha2Pwc3h5L3
yNeK8K/3yDZi1R55lORZnk3qMsCAGDfaG02fYLUYctZQg+ECi7hKFGDh3erQC/HfXN4sKQLl
AcaJXukD7geYQDxYXhNgrhAiBh4nulPw3Tqd/aVnnc+Le+S4yM7ikw2At4jiMtTilQlqbbN6
0flavV5vptjhkxWzh66T8tAoyp62hHhE7QQ8YMQr0hG4p7FNvFa7+x/QdKfYlycAAA==! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:19'!
                               z#H4sIAAAAAAAAAMsrzckJKMovyefl5YxT8CuF8gCYC+lPFwAAAA==! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:19'!
                       z#H4sIAAAAAAAAAMsrzU1KLQooyi/J5+XljFPwK4XzAf9PnDobAAAA! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:19'!
                       z#H4sIAAAAAAAAAMtPykpNLgkoyi/J5+XljFPwT4LzAWNgI5kbAAAA! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/30/2012 10:13'!
                       z#H4sIAAAAAAAAACtILCpOLeLl5YxT8AoOSARxAJPinyITAAAA! !
!JSObject class methodsFor: 'as yet unclassified' stamp: 'yo 1/29/2012 12:20'!
                           z#H4sIAAAAAAAAACsuKcrMSw8oyi/J5+XljFMILoHzARhKaB8bAAAA! !
!JSObject methodsFor: ' squeak interface' stamp: 'yo 1/29/2012 12:09'!
                               z#H4sIAAAAAAAAADWNuw6DMAxFZ4b8gyUW8gvZGKpKlaoODB2qDkkwEAoJTZw+pH58TVGXK9vy
OddE1/bY3DPq2xFpCK2CGXRS4IUoEk4djKkmXmHJpERRVIfmZEa0BF32llzwZ0fDzj8U7Kdg
9AQ69syXlQQT2reCi7L0IvgwzPhv1mwsaXBJwoKxC3Fea58sqmOfZ/TEhu11qy/1/y5XzZVD
ii/L/slOvQAAAA==! !
!JSObject methodsFor: ' squeak interface' stamp: 'yo 1/29/2012 12:09'!
        z#H4sIAAAAAAAAAG2Qu47CMBBF6xT5h5EoQho+wBIFWi0lBY8KZaNRPAFD4qzsCdoiH88MWcSK
bDe+c3x85SoQMq0qdjdk1/ktVV2wBjCcYpomA+DbSjcbbCnqsONA2MKQJhPMLGEeqanhElds
YJaVJflbWWY5tHilj7Nr7OKfe6iwqPuWPEf47nkso+zzZXG/qZUQ9wj9thJKY5CDHaO/DtsZ
OBovs9af9JAo0SoK6PzoMX/JkT+9BVfvQ08iOnhLtfNkC8nW2EQNX7SnHy7yNCmkwdfkS+8c
AJZKhAEAAA==! !
!JSObject methodsFor: ' squeak interface' stamp: 'yo 1/29/2012 12:17' overrides: 16866255!
               z#H4sIAAAAAAAAAMtILM7g5eWMUyhOzUlTyExJzSvJLKn0SCzOAAAFh/OSGgAAAA==! !
!JSObject methodsFor: 'field access' stamp: 'yo 1/29/2012 12:17'!
                        z#H4sIAAAAAAAAAMsqdiwqSqwMS8wpTS3m5eWsUUjMK1ao4eUEUVa2Cv5FKalFqSnO+Tk5qckl
mfl5Cnmp5Xq8nAYKJflWChrFqTlpCkAzSqwUlHNS89JLMjQVdBUMFVKAktFWmSkVChADE1NS
UFUDpTRjgebEQaSLwa4AAGKg+eGNAAAA! !
!JSObject methodsFor: 'field access' stamp: 'yo 1/29/2012 12:17'!
      z#H4sIAAAAAAAAAMsqdiyxUshOreTl5YxTKE7NSVNIhAgoZKY5JhWn5gF50bycnBpwOWX1+PiC
ovyS/Ph4dU0FhAGcsQB/T3e8TQAAAA==! !
!JSObject methodsFor: 'field access' stamp: 'yo 1/29/2012 12:17'!
               z#H4sIAAAAAAAAAMsqdiyxUshOrVQoKAUyyhJzeHk54xSKU3PSFBLRZABZMJ5fLAAAAA==! !
!JSObject methodsFor: 'field access' stamp: 'yo 1/29/2012 12:17'!
                    z#H4sIAAAAAAAAAE1PPW8CMQydM+Q/PIkBWPgBkW5gQaoYWolKHVCKco2v5HJN0CUInXQ/vjYw
MNl+H352X/Y0Fa3VjNz2iDxg1kp606DQ0G20uqM8vnlKNdTpQBWJbswctVIiehh9NjiaiBmr
iFAO01+bB7jkGWakpd+QyleoZ4Pl6bRcP6kISv4Ft3aN0O3cUEhY2ew8C6O1HHm/rWnw3vb0
Uz/GXDOrP8eriDsx2Rf38xEpfdlWgwUnXMTEQRtUtlmtLG7nMJAs4YTvxzeubMfRTf8Ji/4/
IgEAAA==! !
!JSObject methodsFor: 'field access' stamp: 'yo 2/2/2012 11:45'!
             z#H4sIAAAAAAAAAGWPvw6CMBDG5w59h0sckMUHqHEg7g4ubjYnnFAE2rRXDAkPLw0uynb5/vzy
XRsu9L4Zbgpfx54GDgrQ10FKMQOWbEZkY4crldZXMEux0dQJ9oG6J5SekKn481dcLoVAVrDj
xgRwcTnXUhuKJDtv2fLkKIceX3RuTFcdl85ko0+5gxQ/+Uzrh60mrbNEHrGLpDZzl9J9+8OX
kIZ8AJ0KcLX9AAAA! !
!JSObject methodsFor: ' squeak interface' stamp: 'yo 1/29/2012 12:18'!
        z#H4sIAAAAAAAAAMtNzE51zsjMSeHl5YxTKE7NSVNIzkksLlbISy3n5eRMLLFSUFaPjy8oyi/J
j49XVygoBYqAlFkDZSvzS4tAbADg/5n0RQAAAA==! !
!JSObject methodsFor: ' squeak interface' stamp: 'yo 1/29/2012 12:18'!
  z#H4sIAAAAAAAAAMtNzE4NTsxLScqv4OXljFMoTs1JU0jOL6gEALRr85MZAAAA! !

JSObject subclass: #JSObjectProto	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSObjectProto category: 'JavaScript' stamp: 'GDK 5/14/2021 19:02:29'!
JSObject subclass: #JSObjectProto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSObjectProto methodsFor: 'field access' stamp: 'yo 1/29/2012 12:22' overrides: 50341933!
z#H4sIAAAAAAAAAMsqdiyxUshOreTl5YxTKE7NSVNIhAgoZKY5JhWn5gF50aF5KalpmXmpKbEA
0b6F/TAAAAA=! !
!JSObjectProto methodsFor: 'field access' stamp: 'yo 1/29/2012 12:22' overrides: 50341966!
          z#H4sIAAAAAAAAAMtNzE51zsjMSeHl5YxT8Ar2T8pKTS5RyEst5+XkTCyxUlBWj48vKMovyY+P
V1coKAWKFKfmpFkDZSvzS4tAbADSZq6vQwAAAA==! !
!String methodsFor: '*Javascript' stamp: 'aw 8/28/2007 21:22'!
          z#H4sIAAAAAAAAAEss9gr2Tq3k5eWMUyhOzUlTSCwOrsxNys8BALTpnLgZAAAA! !
!String methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:12'!
                               z#H4sIAAAAAAAAAMsqdiyxUshOreTl5QSSCra2Cso5qXnpJRkKmWkhRaWpVgrRcQrFqTlpCsWZ
VamxerycGmBeVrFncVhiTmaKZ15KagXYCE1kLRBViRDDFbQVDDUVEouDS4oy89JBhgDNLC1I
LVKA2w8ALRa7lIkAAAA=! !
!String methodsFor: '*Javascript' stamp: 'aw 9/13/2007 23:32'!
                     z#H4sIAAAAAAAAAG2QT2sCMRDFzznkOzzwsEpB8LrgoRfBs6WXskLozmpsSJaZrKif3kmw/2hP
ySTz5r3fnOQ5t/igK8ZJL2cXrDWlXK8xCxQP+Qg/vPBELd72EAoDiDlxi+bdxZgyJCcm+JgT
nBbs46FpBA/xyGkkztemW1ozr/qTbOXVBd9vY0+X6r74NrHG7DHXIPCyq9PgYq8f5Un8jUq0
VbfQPvNTZEwd7h44T1h9IWHwLHlZmwqhHp0ablyQ3+JPMh/PJd+/aFVtTcHRfUwKh79LvAOb
6TH0VwEAAA==! !
!String methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:11'!
           z#H4sIAAAAAAAAAMsqDijKL8nn5eWMU/AK9k/KSk0uUSguKcrMSwdLAABeUtmYIAAAAA==! !
!String methodsFor: '*Javascript' stamp: 'yo 1/31/2012 20:50'!
                       z#H4sIAAAAAAAAAMsqDsl3ys/PSU3M4+WMUyhOzUlTKM6sSlWos1UwAADNneUpHQAAAA==! !

TestCase subclass: #JavaScriptEvaluatorTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript-Tests'!

!classDefinition: #JavaScriptEvaluatorTest category: 'JavaScript-Tests' stamp: 'GDK 5/14/2021 19:02:36'!
TestCase subclass: #JavaScriptEvaluatorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript-Tests'!
!JavaScriptEvaluatorTest methodsFor: 'support' stamp: 'yo 1/31/2012 00:16'!
                       z#H4sIAAAAAAAAAEstKsovKrZSSCwqSqzk5eUE0wop+VYK0VbFRckKNbycnMWpOWkKxRn5pTkp
QGGvYP+krNTkEoXUssQcKwWQovLMkgz3nPwkEB8unQ4WiFUoSswsTrVScC0CWhSrxwsAFGky
n3EAAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'support' stamp: 'yo 1/30/2012 23:46'!
                    z#H4sIAAAAAAAAACtIzCwqtlIAU7y8nGBaISXfSiHaCsRWqOHl5CxOzUlTSCwuTi0qsVLQ8Ar2
T8pKTS5RSC1LzIHoVEgD6ipRKM8syXDPyU8CCcNVpYMFNBVsISqLU5Pz81Ji9XgBHZYzz3kA
AAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/30/2012 23:46'!
                          z#H4sIAAAAAAAAACtJLS5xTElxrSgo4uXlLE7NSVMoSMwsKrbi5eSsBmLOanVjBW0FE3U9Tk7z
Wj2YiC5ERNcQLAQkAMYOs3xIAAAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 14:51'!
           z#H4sIAAAAAAAAACtJLS5xzEtxrSgo4uXlLE7NSVMoSMwsKrbi5eSsBmLOavWyxCKFCgVbBWNr
BRCzEsg0sAaKqKkpVKrrcXIa1OoBFQIJANlYCWhMAAAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/30/2012 23:48'!
                           z#H4sIAAAAAAAAACtJLS5xysxLycxL5+XlLE7NSVMoSMwsKrbi5eSsBmLOavXEpGQFWwVjawUg
Q12Pk9O4Vg8oASQAv15DBjwAAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/30/2012 23:49'!
           z#H4sIAAAAAAAAACtJLS5xyslPzubl5SxOzUlTKEjMLCq24uXkrAZizmr16goFWwVja4VKIGVS
q67HyWlSqweVqlXnBPI5OfMyc8BiQAIAVX3BPlAAAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 00:57'!
                           z#H4sIAAAAAAAAACtJLS5xTixO5eXlLE7NSVMoSMwsKrbi5eSsBmLOavUKBVsFQ2uF4vLMkuQM
jQpNhepkoGoFQyuFSqCMkbVCUlFqYra1AljUCCJqUmutUKmux8lpVKsHNAVIAAAjdUALZgAA
AA==! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:55'!
                          z#H4sIAAAAAAAAACtJLS5xSU1LLM0p4eXlLE7NSVMoSMwsKrbi5eSsBmLOavUKBVsFY2uF4vLM
kuQMjQpNherkxOJUBUMrhUqgjJG1QlJRamK2tQJY1AgiamKtkAIxFcI3qLVWqFTX4+Q0qNUD
mgokAOnIJ9h5AAAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:54'!
              z#H4sIAAAAAAAAAHWSywqDMBBF11n4D2k27iTiruDSr1AXtkYQJFgfUJD+ezMTH9GJCyHOuTNz
b3RS45R9sm8/BAEbVdfwvmqH8RkwtpiHLWHC05QnYWRe2DTM6hfZeiwBiFgKZC6CIsBYUlS9
3sjwANilOFLSXXDGgWReU3WjOrpOBqEMBUJwDXZSf+LGgk0rKNBz1wGbda2aVqvaSFy+10EE
4gu3G/1u9nSCXvIjL4HkJbWUyxPCKVcmLTwxa0WsX9TH3JA+vua7Nm93JD1M7js5u42PJys5
NR+KbYC337Xt77fGOUldTMVQ6O2n2BcYaiR/LUeLAz0DAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 00:10'!
                            z#H4sIAAAAAAAAACtJLS5xLU5OLEh1zkgs4uXlLE7NSVMoSMwsKrbi5eSsBmLOanWlmBIldT1O
zuCSosy8dIWSxKRaPZhMEbJMchFCIg9ZIicNLAEkAII3cIByAAAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 14:51'!
                   z#H4sIAAAAAAAAACtJLS5xrSgo4uXlLE7NSVMoSMwsKrbi5eSsBmLOanVjBXsFEwUrBQN1PSCf
06RWDyZeU6NgAhHkNIaJVijYKphYK1SgKYYJ69oagWWMwBJAAmppalFRPsRWsMm2IINBHHVj
WzhLF8FUU0Owgc4AKQeaBQDsUHEAygAAAA==! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:55'!
                          z#H4sIAAAAAAAAAI2PwQqDMBBEz3vIP8xNRRA95NJojz31JywoSAuRKCUx+O9N1KRQKO1Clizs
vNmZu2m+SHWVcmSMpu7RY2wHNZ0YkXWPbGLQoBTopUL6bBX0PmvUDSr/yfMMBnkDLWCSgnxx
vhZ/yTPYoHWgNRJ+Aj6UAkOPVONclRluqmvvIsDeqOXrLTEJ286nuHK4m5DW+LTHEi3e34h9
XI7osTgvN2PXXvCrHFlnAQAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 01:08'!
                             z#H4sIAAAAAAAAACtJLS5xyy/yyc8vMOLl5SxOzUlTKEjMLCq24uXkrAZizmr1KgVbBQNrhUog
VV1hpWCoo1BppWBUa62Qll+koJGnkJmnUKmpUKWgbatQGZ0Xa61Qpa4H1MhpXKsHNABIAACl
RW7BZQAAAA==! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 00:57'!
                  z#H4sIAAAAAAAAACtJLS7xKs7P4+XlLE7NSVMoSMwsKrbi5eSsBmLOavUCBVuF6gorQx2FSisF
o1prhUKIgIIRWMQYKFKgV6GgrVCoV6mux8lpUqsH1AgkAEOONSJZAAAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 00:28'!
               z#H4sIAAAAAAAAACtJLS7xLc1xrSgo4uXlLE7NSVMoSMwsKrbi5eSsBmLOanVjBS0FE3U9Tk5D
o1o9mJA+RMhAz9wUIagKETQGiwAJAD8h3OxdAAAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 00:29'!
                               z#H4sIAAAAAAAAACtJLS7xK81NSi3i5eUsTs1JUyhIzCwqtuLl5KwGYs5qdQM9c1N1PU5OEF2r
BxEzSjU0AImBaLAYkAAA6dBuREoAAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 14:48'!
       z#H4sIAAAAAAAAACtJLS7xL3KtKCji5eUsTs1JUyhIzCwqtuLl5KwGYs5q9bLEIoUKBVsFI2sF
jQqFmhoFDWP9Ck1NdT1OTqNaPaAaIAEARcik6EYAAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:55'!
                           z#H4sIAAAAAAAAACtJLS4JyC8uScus4OXlLE7NSVMoSMwsKrbi5eSsBmLOavUKBVsFA2uFCm1t
dT1OToNaPVRhXV2QMKa4tjaQAEkZYuqAyuhCpIAE1OrUoqJ8oN0KIJvVjUEWghgaxtommkAO
UB0AAia+aK8AAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:55'!
              z#H4sIAAAAAAAAACtJLS4JKMrMda0oKOLl5SxOzUlTKEjMLCq24uXkrAZizmr1imiDWAVbBWNr
BRBLXY8TDoxr9aBK9NLy84Fq0krzkksy8/MUNCp0FCo1FaqLUktKi/IUKrQqa4HaQao0jHUU
TDRBphgawbVHKwFllGC2gJQhrIFYAiQAk1vBDqwAAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:56'!
                  z#H4sIAAAAAAAAACtJLS4JKMrMda0oKPJI4eXlLE7NSVMoSMwsKrbi5eSsBmLOavWKaINYBVsF
Y2sFDRBTU10PKGxcqweRVUpMSlYCCwGBOpCjDpPRyEstV3AsKkqs1DDWUTDRUTDV1Iw2jAWp
NYGpiY7Vy0nNSy/JgJpgAJcwRpMxRJIBugJmI8QdQAIAZAhF6cwAAAA=! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:56'!
      z#H4sIAAAAAAAAACtJLS4JSs1xrSgo4uXlLE7NSVMoSMwsKrbi5eSsBmLOanVjBTsTdT1OMEhL
zClOrdWDS9gqwKTQZGzgEpwlRaXIEggtqBKZecUliXnJqflpCn6luUmpRSBVcCVAAgActz15
qwAAAA==! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:56'!
                      z#H4sIAAAAAAAAACtJLS4JLskt4eXlLE7NSVMoSMwsKrbi5eSsBmLOavXMNAUNYwU7BRNNheoK
BVsFg1qF1JziVAjHsNZaoUJdj9OwVg+iGqzCWqE8IzMnVUGjQsFGwVhToUJbG6KM0xhNXUo+
0Bxt7VpUDRDFELVAAgBCz9Q4ogAAAA==! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:56'!
                              z#H4sIAAAAAAAAAI2OQQoCMQxF1130Dp9uopvB9QyuBE/gBWptmYHiSFqwpfTuxhncGwiE5P/3
k33KN64Xm918XZ42xqq1Sj4GvOzCadRKNWnVKHNFyzOvbzTPvPIIY+/O9A73teNQjmgVZ5Rh
u/cJlQaorUik1IcdVUR0mvAf8UdD2P+TjdjNwwcjCUUSSGbqghb+B0+fFjXRAAAA! !
!JavaScriptEvaluatorTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:50'!
                              z#H4sIAAAAAAAAAG3PvwrCMBAG8PmGvMPZ5YaSEHFTfAw3l0AvUAhR8gcqxXc30VKpZkgIv/vC
8SWO6eJNeAgBkZ3FuxlDPAqAuRyYacIz6hP2/UQK9k+1USmrglx9Z42LXA1SyLxy9gPb0fNA
CrcTn52r+POh6xqoW0G9JN+bv3z1bcc/LtfSnUO4lfJYq1NpLCWpz/NAJfUCDkzwhCwBAAA=! !

TestCase subclass: #JavaScriptParserTest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript-Tests'!

!classDefinition: #JavaScriptParserTest category: 'JavaScript-Tests' stamp: 'GDK 5/14/2021 19:02:48'!
TestCase subclass: #JavaScriptParserTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript-Tests'!
!JavaScriptParserTest methodsFor: 'support' stamp: 'yo 1/31/2012 09:42'!
             z#H4sIAAAAAAAAAFWQMQvCMBCF5wz5Dzfq0sGx4NDVSaibtJCmV3uQJnBJkYo/3sTGYrME3vve
8e66mUxfAhqcpBSH9AP5ilktoGx07l/J0wvhDKd/bSD2IcJ1YLKPHY3a2T5Zy9Q5k61LfVXs
kaNtUAfHHshqM/fo1wI518R3BBpuPGOMtbAFJxX0WBmT8bXAk8K4zxdSSLHbZBsmhWhXVjuT
WkStRHinTgP8jtHEETKDhfwAbIwP1CMBAAA=! !
!JavaScriptParserTest methodsFor: 'support' stamp: 'yo 2/1/2012 17:42'!
                   z#H4sIAAAAAAAAAEtPLbFSyOPljKtWBjL1FPIUEouDS4oy89L1FJSTSyqAQtXKhaX5JalAudpa
XgA66jBnMAAAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 17:43'!
                           z#H4sIAAAAAAAAACtJLS5xTElxrSgo4uXlrFEoLilSqOHlLE7NSVMoKcosyEkttuLl5KwGYs5q
kKSVrYK6sYK2gom6HqdyIkSnHkR9UmlmToqVQrVycWpeih7IKD0FZW09hWp1Y3UgK7c0B6S4
FiRggixQW6uHZrwuyHiE6XiM1yXHeC1U43GbrkWk6UAMAD9lLaVJAQAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 17:45'!
          z#H4sIAAAAAAAAAI1OOwrDMAydNfgOAoPVLj6AwUOHHqStHQgEk/oDDk7vXrleSuhQwRPS05P0
sk/5Ety1rlEI2DHliLuA5JcJc5zXxScjABoDWh8ai1RRKdxIA8jb2OXys3Iv8+IMNpl8cLpf
0yhJKdLYqHKW/tn1L+7lVMJDI3X2dO5E9LnEMKhG25e8hz54sHZ4+M+EtT8sHH7wB8Yb27lf
SxMBAAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:57'!
                z#H4sIAAAAAAAAACtJLS5xLEr3ySwu4eXlLE7NSVMoKcosyEkttuLl5KwGYs5qdXVOPeVEiCI9
TmUNzVo9iHhFpTqSBFhzUmlmToqVQjVEUkE5taKgqLYWrkEHrw64Bj2FanU07UAMAOe34bqs
AAAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 17:47'!
                              z#H4sIAAAAAAAAAI3MMQvDIBAF4PkG/8MDB7dbsglZ8k9ici2ClaAWCsb/Xm2G0q3DGx537yuS
y+Lj7uNdKTqRS8KpKEu4oSR/BMlWEdUequNoZ5jVbZgxGSbtri3TNXFPH3aLqnfZAg+NUce/
Yei4PqSNPo0mryO11lgRfunOfl38DX+onjeYf0LN0gAAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/2/2012 09:40'!
                  z#H4sIAAAAAAAAAFWNzQoCMQyEzzn0HQI95JaLnip78VGqVYr1h00EJdt3t62waGAYmGS+aBLd
l/vh4hwsKDrj4kBSOaHO+VGSBAdgTWB9GSYke+GEmx2+m20rAYOPncDwLcZnLseA5mM65xt3
KKPRaBGjF71q7ckArEmt/P+mUiO2Wem/xHHd9AFDgctVwAAAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 18:47'!
              z#H4sIAAAAAAAAAJWNsQoCMQyG5wx9hx86RJdMnQo3+SSeRikUOdoKSq/vbo+KILg4BJI/+b4U
zeVwzGpoRS4Jq6Gs8YKSwhI1e0NUe1Hdln4Cn/oxnGchslsvAAYy30M8e9R33AFBZccCq48l
tT7ZWa/hJmBurckvL56Y4JhkWOh/9RAIdl/kJx7Afvzv9QKEjSlLAQEAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 18:57'!
      z#H4sIAAAAAAAAAHWNSwqEMBBE173IHQqyyC4HCMzOi4zYSiCIJC0IMXc3fhAcxkVB9adeCSdp
uP/OQZSiFUkiVkWJQw+JfgqcnCLKVZT3o/vAdGfAGUukr6HafPsdY5F1y4MfLYwppdi/CCw/
kKO5nX3oHN6BNYXH57HRvEyxnF1VGzsYCcTcAAAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:01'!
                          z#H4sIAAAAAAAAAJWOsQrDMAxEZw3+BwUP3vQBBmXLj5SoEDAltVxwcPzvtVvo0MkZ7uDQ6XFJ
NC3PJe/RGDhRU8TTgEq4Y4rbHkS9AShNUPrRM7qMzHg4AiufT/r2b68trB6LVXms1FGE1jE7
wuJycyutXHs6fqlW+mNP3NFD7Okim5nHZ19kz+Oz5wF00xupBI6vmwEAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:58'!
     z#H4sIAAAAAAAAACtJLS5xLU5OLEh1zkgs4uXlLE7NSVMoKcosyEkttuLl5KwGYs5q9ZgSdT1O
TuVUuFI9ThCZmFySWqRQkphUqwdVV6TOqYeiDEldchFcWR4eZTlpIGVADAALKWy6nQAAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:08'!
   z#H4sIAAAAAAAAAK2QywrCMBBF11n0Hy50kXZhEOsqUlz1Q9SmUCi15gFK0383MfVRxcfCwBBm
cufcyWihdHHsZBQRC6UlbESUaCpoWXeNUDwipHdBev/Ic9AMayzBMaeMxMK1MhI6tqZuSo4+
rivmUQw9zSjDRTT4bDnJ5rdsGNiTRQ6nJW/4SuivBi/I/AEIf/4BnT1Tf4QmyUTnQHeTFBvN
sUBn3BUsVjjtjfQt6euqrP28q7YcR4iptfQ+yaEYPxhXpt0xUF9NUl+QQhvZhtL1/0E+hB24
OAM5i9GBOQIAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:16'!
z#H4sIAAAAAAAAAL2RwQ6CMAyGzzvwDk12mIZk0SvK1ZMvgTISksFwG2YJ8O5uoKjoAZB46La2
afutv2ZKH4Q8ClF4HqpBaQm1hxTjCWiZFpypwEOosoYqlwxCIImQsLpGEgyEsNnZaw9bd/v+
GirTEIpw0jWlrrBrdypTHgdQuRR1g6h9x+zMKZC+GbFBYuyJ8yhjjfNcDDNTyKZ1u2F9rA35
/pvfIgBWOtONLfpk/4qMRkNfSqEZhTzlixG9bHMm1ORNPr6hZcl+hr7vs8f+p/5DPcbL/9zy
guJPxxkoPpdluqDWbr3sUSsBBAAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:21'!
                    z#H4sIAAAAAAAAAJ1PywqDMBA85+A/LOQQveTQo9BrodB/EB+rCPFBEiWi/ns3sT1IodAGNmSY
yeyMRWNvg34Mw3iJIraBsRq2iBlUNVjdjgpNGjG20rDVk+kVRD1oiOdcg4O2hyWB1e1CMl4f
TtKLD4tialWVwsoLbNpeghCSQIWlorfzINy8zzvcd8+Rx52EtCqgqS+PXzzmIsvUnGUi8YxB
exBhT4M2Be5O6C0PvmLxHuhGHVAIDNzYzu505Ge9c7Wv3X6O/Cr9SvNXZMpB8wSd6KVnvwEA
AA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/31/2012 20:59'!
           z#H4sIAAAAAAAAACtJLS5xyy/KTcwp5uXlLE7NSVMoKcosyEkttuLl5KwGYs5q9QodhUodhSp1
PU5O5TSIYj0FIOBU1lCuUFCuVFCu0qzVg6oFqUIoAzI1KuCSmHJgKSAGAM7bk9yIAAAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/2/2012 09:40'!
       z#H4sIAAAAAAAAAL1PSwrCMBBdZ5E7DHQRxZADFNx6AG9gayqBtJXMBFrT3N1Eg1jUrYtZzLzv
kEY6+KE9aiTO2QJIDhbOUNsOyJmr1VhzxkIaFjJY70FsJgmzhNsWwgQ7mKNQCa66YqQy+WnR
eGPPNYQKR+9arUBkEplxACFzmEpYPqmyiGItFFTd6PqTxZg5jb6YIckfeSJKCCv/ck8ipJ5i
TJo0v0o7Td4N8Or+l+bvoV8eWMEff6S5A9odCIKrAQAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:47'!
             z#H4sIAAAAAAAAAJ2NsQoCMRBE6y3yDwMpos2CbcDG0s/Qy0kk7OklQSF3/+7msLF1YWB2lzdT
Qi7nPIkxtCCXGYuhHNKIMsdHCtkboqai1p/+CNfeHofVMZG9K8gANuBSYxo8mpXw4h7F6scq
V4ZzDLvb68F1uG8dPUUZotzyqsO/HdgK/mmwzzqVwJCYvrmqDzdaFb/mAAAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:49'!
      z#H4sIAAAAAAAAAK1OMQrDMAycNfgPAg8eCoZ0NHTp2GeEuKmLSVJLgbSO/165DTQPqEBwp5Pu
xJ74QuNwDkMXhl4pWJE44aqAfLwipzBFT04BZGnIVXQnNMvz5bAxFkDff/cWpbImz7baWMF9
xcYIr37CHGq+BaraYx7ZW9RiVspu0BShu7gtDQ94lMT/BX422jnEzmE2mz9qv0zp+4H0G2YB
CVkiAQAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:53'!
                 z#H4sIAAAAAAAAAHWOvQrCMBSF5zvkHQ5kiGIJ+DMFXBx9C2NjiYRUm3RK++42DWhFvHCm7/zc
aEI8h9afrK+tbwJjNCDEDgOjYNwNsbMPZ4JiRGkSpQzVEeKisK2gFXYVrgp7bHAQkojfF3Uy
R6g06d66WiFxbRrrZV6RKJzSXCcklulRvmme+U8/89+OsXiS+P0L8/EVf/ZtNPDWrbN50gto
B/sfEgEAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/31/2012 21:04'!
            z#H4sIAAAAAAAAACtJLS7xKs7PCyjKL0gtKqn0S8xN5eXlLE7NSVMoKcosyEkttuLl5KwGYs5q
9cSkZHU9Tk7lLDQdegpgoKyhXFiaX5KqoAxUqFmrB9FkaGRMlCagOrgeJSBHCaiLoCaw6Qht
Wvq2SkRZpg5UCdEHxAAu+amIBQEAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:53'!
  z#H4sIAAAAAAAAAJXMvwrDIBAG8PkG3+GCBCGDGZJJ6NixD9ESA4JNxT+QYnz3KkLb0Qwf3HHf
/bx0/hb0dTeWEDjQeYsHASf1it4qo6UTBCDmQCxHcUE2DTPjQJ/1j9f2Iyi9CIzUyW3hBeJI
B46RTSxPYbvbdyrr/FtT4gTwXx5b5fGs3LfK/Um5y11okruvbF7Or2qvWM4HlLllWYcBAAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/31/2012 21:05'!
                         z#H4sIAAAAAAAAACtJLS7xS8xN5eXlLE7NSVMoKcosyEkttuLl5KwGYs5q9cT4JHU9TuU8oCI9
Tk5lML9Wj5cTiKF6ijPyS3NSrBSivYIDEouKU4sUchNLkjMcc3KsFNTT8ovUFcozSzKsFMBm
xCoUJWYWp1opuBYV5Rfp8QIAho13RIEAAAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/31/2012 21:05'!
                             z#H4sIAAAAAAAAACtJLS7xK81NSi3i5eUsTs1JUygpyizISS224uXkrAZizmp1EyN1PSBDOQ+s
Tk+hGs4yMaqt1ePlVICo0jM0MgWpxKoQJAlWDFarZ2xummpoAFSNTTFUFqwciAGzobyjpAAA
AA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:54'!
                              z#H4sIAAAAAAAAAK1OvQoCMQyeM/QdAoVGlyx3U8HR2WdQ24ODUo+2B0Lru9vcubg5GPgC30/C
V3wul3R+LkkpaJhLwqYg+zBhSfMSfLYKoHZAFdOekIbWRmIA/dgOeY/f1jk4i1VnHx3LJ0ZN
rRFjpaHvT/zVuZ7WeGckUQ9HEZIva4q7VGkU4xrdlpfh7wLG/FzAmH8V6HgD2BMSay4BAAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 19:55'!
                          z#H4sIAAAAAAAAACtJLS4JyC8uScus4OXlrFEoLilSqOHlLE7NSVMoKcosyEkttuLl5KwGYs5q
kKSVrYJ6hba2uh4np3IBRKMeRHlSaWZOipVCNVhYD2SSnoKytp5CtXqFOpBVUJSZ61pRUFRb
W6uHYpoxiaYZ4zVNw1jbRBNsItEGgrVgGgrEAJjVf9seAQAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 22:34'!
                  z#H4sIAAAAAAAAAJ2PsQ6DIBCGZwbf4RIGNDUs3Ug6duvQvelgKxoStBYwwSjvXtHGBm06dLgE
jrvv5zNcm7MS1dE2KorQANooGCKkuSzAKNFIrlmEUD8W6v0jOwCxl+5KKEK4ea+O52nj1gqZ
M+hxyQ31LAo9sYTCMul8p/Md7m/O0ZBMi7hL1uw4hGte5wu98Kw6q7jbZrkkhXB3js5UeRLa
uGSb7qP/9cLP9mF4+KmNYRHb3T6FSfKTA7CWvGdShpK/tGbmT7fvZqMQA2z98FgvGfH/0A8C
AAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 22:35'!
            z#H4sIAAAAAAAAAJVSz0+DMBQ+98D/8LIeCpE02dgJ48GDiwcPxuuyENi6WYOAbckgjP/dds45
CkNt0kP7/Xj9Xp9iUj0L/v5QFeJx4zjoAFIJODhIsnQLSvAiZTJ0EGr0Ro0BwzsgbuURinBx
llKNfmmSkqebEBpSEQqYabRtaUesAWRrj9IdUyHgyqJPZ0G/FnbxR5krBhr1LMEkTtaTEQnR
OLFF2zJbK55n4FY+1B40gqlSZFDBDdS37aUdBbO6Ya/KABvnFyaV3YaM7WHh9vvYMcaaRc2f
UF1kYey+ue2wX+DDvO/p/tnU86FLJsbRcGKxe+I6ht255erafw7WuxcirkeDLIPVb8OFJcs2
J0tMomjP1WsUkWF/cxv8DGOvms7nQ+xD0g/i/ieHVafXyYbMz6jhxp1TcqE8PZE0cQhT/bAQ
Zu34nFhUwG8yz45R9f4E8dj+RuYDAAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 22:36'!
                              z#H4sIAAAAAAAAAJ2RsQqDMBCG5wx5hwOHGwpZdBJ169C1LxBsE6kQrORSKETfvYlKKZWW1sBB
+O/+fPcTp8kdtdnfe8s5G4CchYEz0qYBZ9veaMo5Yz4U87GZl4ApVJChCFJiZ6+YHadba1QO
PiHdKREfE5BUAjymGG7L8BiFLAq1UpMwjuIdUP4OwKrEDYziD0KxCfBPhmJTBmg7cnV31tdm
+pEnCsL5SAs4KS81HRazlLhCrZZZsXdf0839l9WDO9QDSCu113ACAAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/30/2012 15:29'!
z#H4sIAAAAAAAAACtJLS4JLkhMTuXl5SxOzUlTKCnKLMhJLbbi5eSsBmLOanUFdT1O5WKQGj0F
EHDOSCxKTC5JLVIAC9bq8XICMQCHrFhvSQAAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/2/2012 09:41'!
   z#H4sIAAAAAAAAAK1Uy26DMBA8c+AfVuIAKBVSm56g+YoeeuZhEqsUImMaWsf/Xj/AYIdUPTSS
lbC7M7MzWKGop6/0g/q+d4WeErj6Xo+aGijB5wb1qe95TByPyWZ6gJDlcIB9BoX4euZhAp78
BL0gSTS0GHBTpcCCAh1xm0jaBFiocGJejXJZURSmwnliCX3mBPKi1Ki1SPSryoyAoMBthdsj
57HDjGuIRniBfQzaDQfU9AhYoS1tu8G1EVFgKYHGM1FWJh7L3kx3x9/lhBu0LDLudlz53BRX
w7/pa/gdqarT/GBp3lerujdLz2a/3cDV6y+YliehI3xBmYtoH1MYM/3zKYWvVcjO29TQxemi
ET+APcvChVqOySe1nJExVQlmXB5n04Kg/D2b7pdJI4hUfWqH7v0pu5bidkC3sLmzmon/mI3e
xEQ04zOoUJ0PDU3he0lNMv5TcjBHsBGgWcIO0uIKl/3k1PTEt8KmJ9JdYFzevXPtVH/LgMND
EB1Iu6IJIl0yrXgTof5ItqX1gNF2rrY4P/OWZf8pBQAA! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 1/31/2012 21:08'!
        z#H4sIAAAAAAAAAHWNsQ7DIAxEZw/8g0UHtwsfkLWfkJWFINIgoagyJ3VA+fcS1rTDyefzkw+p
YoYaQzWVlaH5XVKdDFHroiY2LNGKI7pVqON2jry/HEs/yHE4Q3xyMnbp5H9w/PPw6nf7A7zP
w/AnY5v4uQUNEUkZYblkUS9RWR+jpesL3DsK2tYAAAA=! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 22:46'!
                      z#H4sIAAAAAAAAALVOSwrCMBBdZ5E7DHQRpZADFFwJnsALtDHF4NhqMgVDmrvbSRV058bFg3kz
8z5kAx193Ldkzgc3tIhRSjFDIA+zFMFiD+TdDW1opBBpgUh8bHagyEdIj7rOYFi/iVtIMSst
Kvq21CxbzbrJ4amBxC+aYzQkVUyUhqrD0VwyryLTob3awortx7m6TyNZDWpwqHLO+ode0K9l
lrmk/b+leiW9V6Xngifj2fV2dQEAAA==! !
!JavaScriptParserTest methodsFor: 'tests' stamp: 'yo 2/1/2012 22:49'!
                         z#H4sIAAAAAAAAAJ3RTQqDMBAF4PUsvMNIFlHE0NZdSpc9Qg9gSQRBqs0PKOrdm1ihxLYbA0MC
mXn5IEZqc3uUaogimFAbhVMEWjYVGlV3jdQ8Ahhdwegv+QVpXlAGQKyfcodk6b7buhEcR3rw
10hKIa59p+YUS8PxhJ11m0s449Ba5UdmFqRm6GPXVHwvkjxtayQW6bY56AYICERLw/xbzHEW
TNdqU9X9zDDZaIvs+FdL6QebzhtBnv/w7mfkOxlx+BdbwEOsAkJj+uVYwly9APAprtoEAgAA! !
!JavaScriptParserTest methodsFor: 'support' stamp: 'yo 2/1/2012 18:58'!
               z#H4sIAAAAAAAAAD3NMQrDMAwF0NmD7vDJAXIAQYasnQodSwY5cbDBbYol6JLD12ncbl8P/peV
9MpBGS2Q2yHw2Mk1wbIx7nxehzsBD7jcrlI0FDzE5jjm/JvAmooa3sninzTM23Ppa9cf3aYW
U/mihrxCtK4Z1+8D/NRTR0Keug8M3lxnoQAAAA==! !

Object subclass: #JSEvaluator	instanceVariableNames: 'global'	classVariableNames: ''	poolDictionaries: ''	category: 'JavaScript'!

!classDefinition: #JSEvaluator category: 'JavaScript' stamp: 'GDK 5/14/2021 19:03:38'!
Object subclass: #JSEvaluator
	instanceVariableNames: 'global'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JavaScript'!
!JSEvaluator methodsFor: 'evaluation' stamp: 'yo 1/29/2012 12:08'!
                        z#H4sIAAAAAAAAAEstS8wpTSxJtVJIzs8tyMxJTXHOT0lVKM8syXDPyU9KzLFSSPQK9k/KSk0u
4eXlTAeLKVjZIkT1eDnjFJwhmosU8lLLFXCYmZlnpZCXmaNQkm+lUJyakwYAnbLbunsAAAA=! !
!Object methodsFor: '*Javascript' stamp: 'aw 8/28/2007 21:21'!
          z#H4sIAAAAAAAAAEss9gr2Tq3k5eWMUyhOzUkDADwBy3MQAAAA! !
!Object methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:08'!
           z#H4sIAAAAAAAAAMsqdiyxUshOreTl5YxTKE7NSVPIKg4oyi/JV0BIAQBGD/mBJQAAAA==! !
!Object methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:08'!
                       z#H4sIAAAAAAAAAMsqdiyxUshOrVQoKAUyyhJzeHk54xSKU3PSFLKKA4ryS/IVsKgBAPm2/Pk3
AAAA! !
!Object methodsFor: '*Javascript' stamp: 'yo 2/2/2012 10:50'!
               z#H4sIAAAAAAAAAGXOsQqDMBCA4TlD3uGgg7r0AVI6hL5Bl24Np15jJDUluQiCD1+tS9Ht+I/v
uD7d0PuH405Hm980cFKA0SYpxQzYsBuRXRju1ITYwizFoakrlIn8C5pIyKR3++1cJYVAVnDi
ziX45GUsN9UnvfbCGBpGY4rqr1gfavRrvCx+Cjmu5CzFE/a4Du300yP6TOrw+hfoXlIH6QAA
AA==! !
!Object methodsFor: '*Javascript' stamp: 'yo 1/31/2012 20:34'!
                            z#H4sIAAAAAAAAAM1UPW/CMBCdM+Q/nNSBdkHtGomBqmXo0A6wVUEyxAGnxhGxo6oSP77+iI0v
CVRszQR37737eLYr+XpsCc+gVnvapGlyglqAFNCKgpagGnY40AJOaXIvKS9hNtOxlgIRRQaf
PmTJ+QOwcqWTOrG2qHwa0UrC5c08Jpe6BbHreBYfgpjoNDvJILDlREpT6m05bxryg4T6yTHB
gSKT7+1ho9m4JRe82lKauKVmpuDHpqJbBTtebwiHSs5VBnc2zwQt4sU5Ut34velajONCoQnG
HdAFPDm33eNYjBtRPFeKKiM97Gug3lbGkq1coPX1blhDUNPdCbNmdGQD8CnXvxcGq/+kSXJp
lMc+LsEHIABNOMbioxtgViLxV8q3983U/pkT8SVXLjPFuBlMJhd68pCSNVLpgi9sx9QZ69PE
H86IuuA1USCIyPPBlN2cg6uD5gV6HKraRZjPGGodCLb+YcEl+4ce4At3RrpbFqHxY3HFBgf8
jz6MP1O9mUedcNvorFibB13PKabpL7kJhtHwBQAA! !
!Object methodsFor: '*Javascript' stamp: 'aw 9/4/2007 17:22'!
                     z#H4sIAAAAAAAAADWMMQ7CMAxF5w65g0/AAbxBJmBk6FAVKVADbUMixS6iAu6OE8pgW/7PfgNv
hZITqnu5WXkKwlk7MInmuEw4xW7G0o2pGlNVTP4CA+9pZugiQoMjvDUvMOPyNrB13mf1Ol2n
OwVhhNf4WZWjrIOH8xPltYUYEHYHG4P0YaKftlWk9YebRG5ciEqOEHpvvj06u8DEAAAA! !
!Object methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:10'!
     z#H4sIAAAAAAAAAMsq9k6tLObl5YxT0ChOzUlTyCoOKMovyQfSwal5KVYKyurx8Tn5yYk5QOGC
1KKSzNTi+Hh1hfLMkgzHovTS3NS8kmKgKg1NTYVEoJYSXk7OxJQUx5wcKwUNr2D/pKzU5BKF
fDBFrsHWIDOLHYuKEisBixgucK8AAAA=! !
!Object methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:07'!
         z#H4sIAAAAAAAAAMsqDijKL8nn5eWMU/AK9k/KSk0uUcgHU2AJAC4Rp7IgAAAA! !
!Object methodsFor: '*Javascript' stamp: 'yo 1/31/2012 00:22'!
                               z#H4sIAAAAAAAAAGWOMQ7DIAxFZwbuYClDmqUHoOrAFdq9iBKTEKVQgUkVKYcvSTo13qz//Z6H
dEffCkg4wsdRL2OXX+gpCdCxS5yzBSxoQ27S5IK/oQmxhYUzC+K6nlkYkqSNcObs0CylkwUT
URPKv3B3NJxtowukot4leOedZy+/aA45rnsRPFbcbqxqpZ6hnZWqG5j0mFEcPv0CQqkLKuAA
AAA=! !
!Object methodsFor: '*Javascript' stamp: 'aw 8/29/2007 14:27'!
                            z#H4sIAAAAAAAAAKuztVVIzPNPykpNLuHl5YxT0ChOzUlTsEWIairk5ZcAAEUriywnAAAA! !
!ArrayedCollection methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:13' overrides: 50342621!
                        z#H4sIAAAAAAAAAMsqdiyxUshOreTl5QSSCra2Cso5qXnpJRkKmWkhRaWpVgrRcQrFqTlpCsWZ
VamxerycGmBeVrFncVhiTmaKZ15KagXYCE0MLYkQsxW0FQxBOoGipQWpRQpwSwHwNY74fgAA
AA==! !
!ArrayedCollection methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:13' overrides: 50342626!
      z#H4sIAAAAAAAAAG2PsQrCQBBE6xT5hwGLU0TBNpDCMr3YiMJqNnrxuAt7e2L+3iQEG+1mGXjz
to17LfDkHl0awotcnmfjWZZYOPZ3fcA2B0lc4HRBZNeARYIUMDfyPiiiBmFYrwGEa7JON9aD
RKg3JmKGdBI6Fu3NeZtny4nTxioeydm68jW/J4vVzxjNemvsvoojYqjTAMSfBz5aAcRS1AAA
AA==! !
!ArrayedCollection methodsFor: '*Javascript' stamp: 'aw 8/28/2007 21:54'!
                 z#H4sIAAAAAAAAAMsq9iwOS8zJTPHMS0mtsFLITq3k5eWMA9EKmcWeeSWp6alFCol5KVYK0SAx
O1sFAySujUJxak6aQnFmVWpsLABzVrHJTAAAAA==! !
!ArrayedCollection methodsFor: '*Javascript' stamp: 'aw 9/4/2007 16:35' overrides: 50342670!
            z#H4sIAAAAAAAAAMsq9k6tLObl5YxT0DBQKMm3UihOzUlTKM6sSlXQVTDUVEgs9i9KSS1KTXHO
z8lJTS7JzM8DAOBz00Q0AAAA! !
!ArrayedCollection methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:13' overrides: 50342678!
                           z#H4sIAAAAAAAAAMsqDijKL8nn5eWMU/AK9k/KSk0uUUgsKkqsBIsDAGb38lcfAAAA! !
!Number methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:10' overrides: 50342678!
       z#H4sIAAAAAAAAAMsqDijKL8nn5eWMU/AK9k/KSk0uUcgrzU1KLQJLAACI5nZtIAAAAA==! !
!UndefinedObject methodsFor: '*Javascript' stamp: 'aw 9/13/2007 14:14' overrides: 50342678!
                          z#H4sIAAAAAAAAAMsqDijKL8nn5eWMU/AK9k/KSk0uUcgrzckBCwMALRlsOh4AAAA=! !

JSParser initialize!

JSObject initialize!

----End fileIn of /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/javascript.st----!

----SNAPSHOT----(14 May 2021 19:04:08) Cuis5.0-4526.image priorSource: 298775!

----QUIT----(14 May 2021 19:04:46) Cuis5.0-4526.image priorSource: 355219!

----STARTUP---- (14 May 2021 19:05:40) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!JSObject methodsFor: 'field access' stamp: 'GDK 5/15/2021 08:27:15' overrides: 16865753!
                          z#H4sIAAAAAAAAAEsssVLIVshMc0wqTs0rsVJI4oorLi1ILVJAl4hGCCsXFOVXVManp5YA5QOK
UqEKrNJr0hWyip0Tc3LCM0syHIvSS3OBMsVWCtXFqTlpegrZtbHINsUCAIudBBh8AAAA! !
!JSObject methodsFor: 'field access' stamp: 'GDK 5/15/2021 08:28:54' overrides: 16865809!
                   z#H4sIAAAAAAAAAEsssVLITq1UKCgtsVIoS8zh0ihOzUlTyMxLzilNSS32Tq0Ey2sqZKaFFJWm
WilExxWXFqQWKaBrjNXjQkgoFxTlV1TGF6eWAPUFFKUWp+YBRaOtimsU4ooVsoqdE3NywjNL
MhyL0ktzgXLFVgrVIHv1QEbqgYyrBZqHwyYAEx+Ni7MAAAA=! !

----SNAPSHOT----(15 May 2021 08:29:12) Cuis5.0-4526.image priorSource: 355299!

Object subclass: #DriverJSCash
	instanceVariableNames: 'jsObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-JSBridge-Cash'!

!classDefinition: #DriverJSCash category: 'Kernel-JSBridge-Cash' stamp: 'GDK 5/15/2021 10:56:32'!
Object subclass: #DriverJSCash
	instanceVariableNames: 'jsObject'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-JSBridge-Cash'!
!DriverJSObjectProxy class methodsFor: 'class initialization' stamp: 'GDK 5/15/2021 10:57:23' prior: 50340736 overrides: 16964803!
                           z#H4sIAAAAAAAAAG2OPQ7CMAxG5w69g1VW1AN05UcCCZayoSKZ4lALt4mctEGIwxNgYWC03uen
xwMHRuEH5VmxUMJAEDqCbQ1XsWeUIs/qHkUCyg0wVDBbKk+kaeDGdHoSA2f03O4plkmyMRAJ
Opy+IifjlYc5+M5GiFZv3mFLyVockyLycLGxATYrVasVHCtShUrbSeEJp7e9KX8T2O+suo7b
PMvYHHSk9PSJsI6G1R17J+SbD12j+Df+w8GklKYs8hc0zHt6AQEAAA==! !

DriverJSObjectProxy initialize!
!DriverJSCash class methodsFor: 'no messages' stamp: 'GDK 5/15/2021 10:59:12'!
                       z#H4sIAAAAAAAAAMvJT0zhinMpyixLLfIKVkgtS8yxUtAIT01yzslMzStRyCgpKXBPLbFSUAex
iq309UvzCrLT9ZLzc/WTE4szdFPycx1M9Az1jPRTMotLwGJ6uZl5elnF6poKyfl5JUBT9ACc
eWsbZgAAAA==! !

----SNAPSHOT----(15 May 2021 10:59:18) Cuis5.0-4526.image priorSource: 356071!
!DriverJSCash methodsFor: 'no messages' stamp: 'GDK 5/15/2021 11:02:19' overrides: 16962569!
               z#H4sIAAAAAAAAAEvJTy32yy8JzUtJLSouScxLsVLILU7nqlEoS8xRqOECkfEgEYXi1LySkHwr
haxi/6Ss1OQSPbBccn5ecUlRaXJJfpGCLVwORTgzLaSoNNVKITquODUnTSE5J7G4WCEvtRyu
2gpkV6weVxyQAgB0xF1ljwAAAA==! !
!DriverJSCash methodsFor: 'accessing' stamp: 'GDK 5/15/2021 11:02:30'!
     z#H4sIAAAAAAAAAMsq9k/KSk0u4eJUcswrLk8tUijJSFUoS8wpTVXIT1OASStxcXHGwXkAUumq
3TUAAAA=! !
!DriverJSCash methodsFor: 'accessing' stamp: 'GDK 5/15/2021 11:02:30'!
  z#H4sIAAAAAAAAAMsq9k/KSk0usVJIzIOwuDiVglNLFEoyUhXKEnNKUxXy0xRgqpS4uDhhbIV4
uBYAzbLISUUAAAA=! !

----SNAPSHOT----(15 May 2021 11:02:34) Cuis5.0-4526.image priorSource: 357283!
!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:03:42' overrides: 16990961!
            z#H4sIAAAAAAAAAMvMyyzJTMzJrErlKi4tSC1SQAjocWUV+ydlpSaXKMQruBRllqUWeQUrpJYl
5lgpqKtolGfmpeSXa6oDAJpRGcNCAAAA! !
!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:05:17'!
z#H4sIAAAAAAAAAEvJt1JI4qpRyFOo4cpTiFcoTs1JU8hLrSjR40pSKEvMKU21UsjTA0rlpOal
l2Qo2CoYKGSmuSXmFAMlouPyFMAGxHIBAEo0/qhIAAAA! !
!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:07:01'!
                    z#H4sIAAAAAAAAAMtLrShxybdSSOKqUchTqOHKU4hXKE7NSVMASehxJSmUJeaUplop5OkBpXJS
89JLMhRsFQwUMtPcEnOKgRLRcXkKKSADYrkAbIavxUwAAAA=! !
!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:07:12' prior: 50342854!
z#H4sIAAAAAAAAAMtLrShxybdSSOKqUchTqOHKU4hXKE7NSVMASehxJSmUJeaUplop5OkBpXJS
89JLMhRsFQwUMtPcEnOKgRLRcXlgtWBDYrkAjRBH41AAAAA=! !
!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:07:37' prior: 50342847!
z#H4sIAAAAAAAAAEvJt1JI4oorTs1JU0jOyMxJKUrNU0jLLCouUchLrShxyQdKAwAlOsk0JAAA
AA==! !
!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:12:40'!
                            z#H4sIAAAAAAAAAEvOz8lJTS6xUkjiqlHISy1XqOECkfEKxak5aQrJOYnFxWDhrGL/pCywQg2X
osyy1CKvYIXUssQcKwV1FY280pwcTXVNPS6wppR8K4Voq4oaiDkgMjElxUqhIlaPKw7IAwCx
jdr+cgAAAA==! !

----STARTUP---- (15 May 2021 11:15:12) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:16:08'!
               z#H4sIAAAAAAAAAEvJt1JI4ipOzUlTSM7IzEkpSs1TSE1MzgCK6gEArU/erRwAAAA=! !
!DriverJSCash methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:16:46'!
         z#H4sIAAAAAAAAAEvOz8lJTS6xUkjiqlHIU6jhylOIV/AvSkktSk1xzgfLZebnKeSllutxFafm
pCmk5FspRFtV1OQpJKakWCloJCmUJeaUplopVGjG6nHF5QEAPQO1m1EAAAA=! !

----SNAPSHOT----(15 May 2021 11:16:58) Cuis5.0-4526.image priorSource: 357982!
!DriverJSCash class methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:18:12'!
              z#H4sIAAAAAAAAABXLvQ5AQBBG0X6f4iskaDzAtFQahVIQ7EjImE3Wb7EPj+4U987ebbkT4elY
nBKmzyZAEYyix84yQ/nGulfj+kWEpPDLxb6swdcghDhK9BRJ4zQz/w3rCA09QTFYS3jazHT6
AkgvZ5xoAAAA! !

----SNAPSHOT----(15 May 2021 11:18:24) Cuis5.0-4526.image priorSource: 359914!

MorphicCanvas subclass: #ReactCanvas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-JSBridge'!

!classDefinition: #ReactCanvas category: 'Morphic-JSBridge' stamp: 'GDK 5/15/2021 11:23:08'!
MorphicCanvas subclass: #ReactCanvas
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Morphic-JSBridge'!
!ReactCanvas methodsFor: 'no messages' stamp: 'GDK 5/15/2021 11:23:33'!
           z#H4sIAAAAAAAAAEtLLUnO4HIpyixLLfIKVkgtS8yxUtAIT01yzslMzStRyCgpKXBPLbFSUAex
iq309UvzCrLT9ZLzc/WLUhOTSxwMzfVLc1MgHL2CovyU0uSSzPw8vdzMPL2sYnVNheT8vBKg
UXoAq5/29GsAAAA=! !
!ReactCanvas methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:30:37'!
        z#H4sIAAAAAAAAAHWOMQvCMBSEd3/F26og/oDM7SKIUAcHUXgmpw2kSXmJDaL+d9vi0MXtOO7u
OyOcFfExiDO7IF1Dgo6tDF7JLd9RQwcxkMWlFNtDtgeqwTqRFnBC5dDCJ0WFsX1B2aZGUWl1
ssGzPMkj/8zXHDJip5m9VxThbp81LeeB+Li2o4ikg3PQA+Gk4nuMTuWh9e/pebX5Ak2xNJvW
AAAA! !
!ReactCanvas methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 11:31:08' prior: 50342931!
                           z#H4sIAAAAAAAAAHWOMQvCMBSEd3/F26og/oDM7SKIUAcHUXgmpw2kSXmJDaL+d9vi0MXtOO7u
OyOcFfExiDO7IF1Dgo6tDF7JLd9RQwcxkMWlFNtDtgeqwTqRFnBC5dDCJ0WFsX1B2aZGUWl1
ssGzPMkj/8zXHDJip5m9VxThbp81LeeB+Li2o4ikg3PQA+Gk4nuMTuWh9e/pebX5Ak2xNJvW
AAAA! !

----SNAPSHOT----(15 May 2021 11:32:47) Cuis5.0-4526.image priorSource: 360259!
!NothingCompiler methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 17:24:59' prior: 16955519!
       z#H4sIAAAAAAAAAK1UYWvbMBD93l9xuB9q0y7QdazgskJKOxgso5B9C2LI9tUxRJKRzswhyX/f
SW3TtDh2OvrFPu7Zd++9O6lu3By+wVHkgwhyoxRqGutiWsscHUS6URnaDgTI/QpY2sKna5g5
XDxAiZRyWMMf4McpnI8AdW4KtAzpe+7xsyK0cpFC/AwsKvqhC2w59VgQLMriuzUqhTZJhID1
fnqObKXLDkTqJc0Z+jh27QCVSpPpyhOquiP/xr44MHTz6oFukJjFix0a/27dOIN4R8oue1Nf
8eu2qcX2o0YP1utVNMzcU/9P7vvG0Kugo6wvMKBD2rLxqeEpHLgmv9mYTo1C9NBY9fWXHT8c
Ry945ttMkOamiGfxiVYhPGGjMpBuGo7BGezk5TadcHSzJBxbK5eQSYdfv9wFQYWHpkuVmYVI
UgXRJgojna3Bwdp5A7aTTeHzSO1fv4HDM0HnZIlT1EXyvjvh46UmIweFYf4prZ8bamzpvmFR
JABGO/w8405ix2wE5mR4dE/r5dIE+Loc29KxWSLxuxCsO3Dvhg5Q327xXedC/nU6N5pYWRSa
rM4vLjfiH9V/BhLyBQAA! !

----SNAPSHOT----(15 May 2021 17:25:05) Cuis5.0-4526.image priorSource: 361636!
!NothingCompiler methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 17:54:06' prior: 50342955!
          z#H4sIAAAAAAAAAK1U30vDMBB+96846oMt6kARHyoK8xcIKsJ8G0HS9uwKS1KSK3Y4/3cvnc45
ulbFlzbcJXff992XlJWbwClsBX4RQGqUQk1DnY1KmaKDQFcqQduSAXL3TS6uYf8Mxg6nz5Aj
xbws4Qn4swsHA0Cdmgwtp/QD97gtCK2cxhB+JqYF3egMaw4tCoJFmV1bo2Koo0gImG+G58gW
Om/JSD2jCaf+D13dA6XQZNrihKpsia/JFzYI3aR4pnMkRvElh8aXpRp7EK5QWUVvyhP+XVal
WG6qdG+9Tkb9yD30P2LfNIZOBi1lfYEeHtLmlQ/1T+GHNnlkYVo5CtEB47Wrv2w5sB185RPf
5g5pYrJwHO5o1Sx3WKgEpBs112APVuJyGY54dT4jHForZ5BIh8dHVw2hzKdGM5WYqYhiBcFb
0Ix0PAcHc+cFWE42hsOB2my/nstzh87JHEeos+h3b8L/U40GDjLD+GOafzbUWNNDxaRIAAxW
8HnErcC2WQhMyfDoPuzl4gj4uRza3LFYIvJeaKT7oe/6LlCXt/itc038ezg1mphZsG7udT/z
6YvFViHeASFn+/ETBgAA! !

----SNAPSHOT----(15 May 2021 17:54:11) Cuis5.0-4526.image priorSource: 362433!
!NothingCompiler methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 18:26:23' prior: 16955499!
          z#H4sIAAAAAAAAAI2PwQrCMBBE737FgB6saD4gUKV38eJRimzTFStNUjYRKuq/G6ueevGwsDvM
G2Ytx7OvkUMHbtlEL5MYdldbsWiC8dayi4Wr9x0ZDpiPFO470dXYOVMbrNY4VGW20G/TcD0M
bJrjgCXIGYrsKDbeKeB+n376KPzaKBgIX9KucdD9o0cTChG6gVydpB6nRkJEnuPLlqUCKbAz
vmYBte22iSzUhudzifTBN/v/vKx8AacA6AkmAQAA! !

----SNAPSHOT----(15 May 2021 18:26:33) Cuis5.0-4526.image priorSource: 363233!
!NothingCompiler methodsFor: 'as yet unclassified' stamp: 'GDK 5/15/2021 18:35:45' prior: 16955491!
   z#H4sIAAAAAAAAAH2PTwuCQBDF732Kx17UQ0HXBYM6eOgQQd1EQtexDPcPu0oGfvg27GJYlzcM
P968N3dpEC+YHwxCS0mq3aryZHJBDq07dLIgy/s3m6DlBqmjpsKVWo6UlNAlWb+pfScNRzg6
oeiRWC05+ijLMPikuppJCtmTHMMApjSLePG3y1e2M7jAyxLrFQrECPytAHV1th1Nu+1srsTt
qM2I5kp6X5I37pfxw2bfy15ReROiTQEAAA==! !

----SNAPSHOT----(15 May 2021 18:35:50) Cuis5.0-4526.image priorSource: 363688!

----SNAPSHOT----(18 May 2021 17:37:03) Cuis5.0-4526.image priorSource: 364132!

----QUIT----(18 May 2021 18:12:29) Cuis5.0-4526.image priorSource: 364212!

----STARTUP---- (22 May 2021 07:11:07) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(22 May 2021 19:04:07) Cuis5.0-4526.image priorSource: 364292!

----STARTUP---- (27 May 2021 17:24:43) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


----QUIT----(27 May 2021 18:35:27) Cuis5.0-4526.image priorSource: 364492!

----STARTUP---- (2 June 2021 21:22:45) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


OMeta2CuisSmalltalkRecognizer subclass: #HaskellCodeGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'VMMaker-Translation to C'!

!classDefinition: #HaskellCodeGenerator category: 'VMMaker-Translation to C' stamp: 'GDK 6/2/2021 21:23:47'!
OMeta2CuisSmalltalkRecognizer subclass: #HaskellCodeGenerator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'VMMaker-Translation to C'!
!HaskellCodeGenerator methodsFor: 'no messages' stamp: 'GDK 6/2/2021 21:25:23' overrides: 16961286!
                    z#H4sIAAAAAAAAAI2MQQrCMBBF15NTDLNJ0lYPEFDwDC5rhDSNELRJqVko9PCmKYK46u7P8N7r
HtHe8cAYUEsMQIAgReh7F5K/eTcpg7sjtqZBjlzLWnVI80LO4IYxvRnIAnBx4Q12aGOwJrlg
ko8hS33kmpVw1n661X8G5ILZOAwZOYX+PBrrnqvqXuOEgvaEy5LVuum63jhjaciS+363tnNp
Awqk6QO7yhJyLAEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/2/2021 21:26:37' prior: 50343069 overrides: 16961286!
               z#H4sIAAAAAAAAAI2OzUrEMBSF18lTHO4myfz4AGEUZulGwVl2KqRpRjO2SakBFfrwpqkiIwiu
7rmXc79zmi7aF1xzzqgizphkkjTBty4kf/Ju1AbbG1RmAwFRq7VuQNPsnJjrh/TBmSoGIY9i
gwY2BmuSCyb5GPJTG0XNCzi/Qf6AV0r736gvlvQZ03XOJo1Kn6cz1hC7rZhHcG+39w/uhLuY
nn14yqGHNGYBO9bqMr4E29j3OXMf2sNgrHtdyrj3YYSkK8Ks1GrR9LjsmFAaqVLu+3rZ9G92
Jv3DyqimTzWyPHB+AQAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/2/2021 21:26:50' prior: 50343081 overrides: 16961286!
      z#H4sIAAAAAAAAAI2QzUoDMRSF15mnONxNkv74AEEFl24U2uU0QiaT2rQzyTAGVJiHN81UpILg
Kic393znkKaL9oS7qmJUE9b3qDnXFWOCCVIE37qQ/N67UZnyalbg4FouVQOaKG9OzPVD+qyY
nO1ix1doYGOwJrlgko8hm9qYuQWcbRA/4IVU/jfqwhI+Y7rO2aRQq+N0xBL8ds3PR3Dvj88b
t8dTTAcfXnPoNo1ZwI5aXseXYBv7Pmc+hHY7GOve5jLuYxgh6IZwVnIxa3qZ75hQGslS7nt6
3fRvdib9Y5WRvny85PoL7ER6v48BAAA=! !

----SNAPSHOT----(2 June 2021 21:26:55) Cuis5.0-4526.image priorSource: 364692!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/2/2021 21:30:01' overrides: 16961313!
                          z#H4sIAAAAAAAAAEutKChSsOXi4sxMSc0ryUzLTC2ySlTQULKyVVKoUVCKV9JUACmxSlLQtVOI
Vi9KTUzx9A9KTVNQ11FIUtBRULezs1UoL8osSYULJ8Zy1XDmFqe7AvUBANy+Ar9fAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/2/2021 21:34:15' overrides: 16961281!
 z#H4sIAAAAAAAAAEvKzEssqvQtTlew5eLihPCs8hVKQbRrRUGRVYGCrp1CtLqdna2CRkwFiKOu
o1CgowAVqQSJVKgr6CjkA8UUKjU11WMBSYQ8jFQAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/2/2021 21:37:22' overrides: 16961431!
                         z#H4sIAAAAAAAAAD3JMQqDMBgF4FlP8bYo1AsE6ubcA4QMof2jTyRKElHR3r3QwfX71uDi0e1L
xLMsi2oNzLhwa61H8CMh01OiJpoWpiLeLsnLa5xGJfbBTcr+S3nHCcp+MedB4sYkGoa2fmC0
P3o5deJsAAAA! !

----SNAPSHOT----(2 June 2021 21:37:34) Cuis5.0-4526.image priorSource: 366633!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/2/2021 21:38:24' prior: 50343128 overrides: 16961431!
                z#H4sIAAAAAAAAAD3JMQoCMRBG4do9xd8lAfUAAQULaw8Qpxg00VmWKJMsZlHvrixo9/HemFmn
fbsrNl23sGOWihf+1fkeco65SpKoXrDaIljBiUs8JI9nMEUumQdD8zKJZYCh9Zdcdqo8/Y49
thmNnKE3bvUa9SElegQht0RPHzhplviMAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 06:39:17' overrides: 16961341!
                        z#H4sIAAAAAAAAAMtOrSzPL0rxLU4PSCwqUbDl4uKEClklKiRl5iUWVbpWFBRZJSno2ilEVyfq
KSTVxgIAXyC/BjUAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 06:39:58' overrides: 16961331!
                 z#H4sIAAAAAAAAAMtOrSzPL0pxrSgoUrDl4uJMysxLLKoEca2KUpPLFKDyvsXpVsWpOQq6dgrR
QDpNoSwxpzTVSgGkJhYAIUjNeUQAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 06:40:07' prior: 50343157 overrides: 16961331!
                     z#H4sIAAAAAAAAAMtOrSzPL0pxrSgoUrDl4uJMysxLLKoEca2KUpPLFKDyvsXpVsWpOQq6dgrR
ILosMac01UoBpCQWANnzFrlDAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 06:43:58' overrides: 16961336!
         z#H4sIAAAAAAAAAEWOQQrCMBRE1/YUs0sr9QIBvYHoPvxFSH+1WBNJgk2w3t20Im4G3jA85sZ5
cr47hgv2VbX541n7uJUJqk4wbhzZRAkl85zRDz5EakptjY5sdRycJRl4xO4ApaRn85wXNDrw
qZd4KfFzCFpHor/rB+o1RYv0lSJwkXZoRbO0i4fecPHKfhoClwNE9AEnQHfcswAAAA==! !

----SNAPSHOT----(3 June 2021 06:44:08) Cuis5.0-4526.image priorSource: 367523!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 06:51:32' prior: 50343172 overrides: 16961336!
                        z#H4sIAAAAAAAAAEWOwQrCMBBEz/Yrll7SSv2BgP6B6D3sISQbDdZUssGmWP/dtCJeBmZ2eDs3
msYh2iNfYF/V2tpIzCcna/CWQvLOU5QZdgdQGat58++fdUzbclJNBjP0PZkkQclpnsD5yAnb
EgejEwWd/BBQMvUrSMlI5jkv1mim8g1eSvwYAteScHf9gGZV0UH+QoGpQC10ol3ShYNvGNKV
4uiZygBE/ACeFAxJ1AAAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 06:52:01' overrides: 16959206!
                           z#H4sIAAAAAAAAACvNyyxRsOXi4szJLEktSszhquHMTEnNK8lMy0wtsqpQ0LVTiFYvzStOTEsN
SC1Kyy/K9fRXUFEoSk1M8fQPSk1TUNdRqIgF6kosKkqs9MksgTGd8/OKS4qAvKSc/ORsIK2k
oaSQWlFQpKCkqcQFAHhSoLd3AAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 06:52:40' prior: 50343186 overrides: 16961336!
                z#H4sIAAAAAAAAAEWOQQ7CIBBF1/YUk25oTb0Aid7A6J7MgsCgxAoGiKUR7y6tMW5+Mn/+fzM3
micf9DFeYN+0UutAMZ4Mb8FqcskaS4Fn2B1ACB5KRmzK5l86y5C2dS+6DMqPI6nEQfC5zGBs
iAn7ajslEzmZrHfII40/GqlnWUYlI9WT8BLsx2C4hpi5ywd0q7IB8hcKkSpUw8D6xV04+Aaf
rhQmG6k+gIgfowAQXdkAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:04:06' prior: 50343198 overrides: 16959206!
           z#H4sIAAAAAAAAACvNyyxRsOXi4szJLEktSszhquHMTEnNK8lMy0wtAnISi4oSK30yS2BM5/y8
4hKQRFJOfnI2kFbSUFJIrSgoUlDSVOICAFO7e3dOAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:04:32' prior: 50343120 overrides: 16961281!
         z#H4sIAAAAAAAAAEvKzEssqvQtTlew5eLihPCs8hVKQbRrRUGRVYGCrp1CtLqdna2CRkwFiFOU
mpji6R+UmqagrqNQoKMAlasEyVWoK+go5APFFCo1NdVjAR1ll4ReAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:04:58' overrides: 16961276!
             z#H4sIAAAAAAAAAEvKzEssqnStKChSsOXi4tSIjlXQtVOIVi9KTUzx9A9KTVOP1VRAUgRh+han
c9VwlsJEAV3FeadFAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:05:22' prior: 50343228 overrides: 16961281!
 z#H4sIAAAAAAAAAEvKzEssqvQtTlew5eLihPCs8hVKQbRrRUGRVYGCrp1CtLqdna2CRkwFiFOU
mpji6R+UmqagrqNQoKMAlasEyeWllnvmg6Q0KtQVdBTygbIKlZqamuqxADvi1y9pAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:10:10' prior: 50343208 overrides: 16961336!
                 z#H4sIAAAAAAAAAEWOzYoCMQyAz/oUYVioyvgCBb17kJG9lhxKm65lx1aSujPDju++VZG9hPx8
yZdvmobM/ihfsFs21nsmkS7oBqKnVGKIxHqE7R6M0TyPiMt58b90slw2dW5WI7jc9+SKBqOn
eYIQWQquazs5WyjZEnNCLdS/r5H7mR+ls0JVCb9GvW8ofELqlsQGOhGHzJdDBx+QaDh0nxRq
Gi72CqtnVC2MLyMIVaOHVq0rwmT9C6/EQ4h3yOVMPESh+iki/gGh5/wPAgEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:29:00' prior: 50343252 overrides: 16961336!
   z#H4sIAAAAAAAAAGWPsU4DMQyG5/YprAopLSo8QCTYO6CrWCMPVuJAxDVBTtq7E8e747YqDCyW
Y3/+P+WDp6FIeKlv8LRcUQjCtXbRriAFzi3FxGJHeHgG56zMI+JyXvwd7Unave7degRf+p59
s+DsNE8Qk9SGGx1nT40ztVQy2sr9LY39aT4/PVVWJXw5c8sweIHMMVeKvGeJRQ67Du4g87Dr
XjlqGw/0CetLNVsYr0aorMYAW7NRRJjCFVfiLMRHTWWRIr+OSKn/H4DfUNo7y5Aq65cQ8QfU
kTAZKwEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:51:11' prior: 50343236 overrides: 16961276!
              z#H4sIAAAAAAAAAEvKzEssqnStKChSsOXi4tSIjlXQtVOIVi/NK05MSw1ILUrLL8r19FdQUShK
TUzx9A9KTVOP1VRA0gZh+hanc9VwlsJEAcXplsBXAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:53:21' prior: 50343140 overrides: 16961431!
         z#H4sIAAAAAAAAAD2JTQrCMBCF1/YUb5cEqgcIKLhw7QHiLEI7xSnYlkmKKerdlYLdfT/zEHW5
lElxrKqdnQfJeGOrzveQlocsnbB6wf6EYAVNTHztPF7BNONjUk6JW0Pr3goMHX4a01k1Lv9r
b2WFQs7QB2O+sz4lsUcQcjV6+gLvzxpNlAAAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 15:53:42' prior: 50343287 overrides: 16961431!
    z#H4sIAAAAAAAAAGWMQQrCMBRE1/YUs0sC6gECCi5ce4CYRWh+8RdMy0+KLerdlYp14W7eezBD
CjIdx16wq6qVHhIXPLBYY1twpFS4YRLL2OzhNKMOmU6Nxd2purv2QjlTVH7Oi4Hy2zeGfBAJ
07fq8ziP0ZtPj/R/8XPKP9GVC8mNM1k49maN1r8AmGqVprgAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:05:51' prior: 50343297 overrides: 16961431!
                        z#H4sIAAAAAAAAAGWMQQrCMBRE1/YUsxDSgHqAgIIL1x6gZhGSX/wV0/LTYot6d2ulunA3vDe8
LjoZDn0j2GbZIu8it3jgS7WpwIFiyyWTGMZ6hyJneJfoWBrcC+XrayOUEgVlJ6262Dh/wRKz
grKbkbu0F3HDfMtP/TR6qz8+0H/rx8beO6vsE3V7JrlxIoOCrV6hsi9/6lSFyAAAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:06:22' prior: 50343308 overrides: 16961431!
        z#H4sIAAAAAAAAAH3MwQqCQBgE4HM+xRyEVageYKGgQ+cewPawrL/0G63yr0tK9e6Zod26DfMN
E72V4di3gl2SrLLoucMTS5vrGlyS77hiEs3Y7FFkDGcDnSqNR6Fcc2uFQqBSmYlV9K11V6SY
aYyfRpntqDYcROwwj7NzP4Xe5F8v6c/jD5fPF5ruQnLnQBoFm3yN2rwB3LytqNcAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:22:54' prior: 50343319 overrides: 16961431!
        z#H4sIAAAAAAAAAGWMQQrCMBBF1/YUs0sC6gECCi5ce4A4i9BMcQqmZZJiivbulYp14e6/9+AP
0ct4Lr3Aoao2eoic4QWrNbYFDhQzN0xiGXZHcJqh9okujYWnU3V374VSoqBwyatRuH+TTycR
P36jvpZlFDSfHuj/4ecUTtDlG8mDE1lwjGYLLc42oT2LtwAAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:23:55' overrides: 16961347!
        z#H4sIAAAAAAAAAMvJLEktSsxRsOXi4kzOz81NzStxzEsJLkhMTi1W0OAsKfYrzU1KLeLi5OSs
AfKcMxKLEpNLEALBJUWZeelWFQq6dgrR6krqOgoVCok5OU6lJW6ZRcUlULZPYnGJjoI6EMTC
NVbmJuXngHiaXAAb4sgLhQAAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:24:39' prior: 50343340 overrides: 16961347!
                z#H4sIAAAAAAAAAMvJLEktSsxRsOXi4kzOz81NzStxzEsJLkhMTi1W0OAsKfYrzU1KLeLi5OSs
AfKcMxKLEpNLEALBJUWZeelWFQq6dgrR6k4+emlF+bkQQQUldR2FCoXEnByn0hK3zKLiEijb
J7G4REdBHQhi4cZU5ibl54B4mlwAFFENYZMAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:30:43' prior: 50343265 overrides: 16961336!
    z#H4sIAAAAAAAAAHWQsW7DIBCG5+YpTlElnCrNAyC1e4bKUVeLAcHRoBKIDhzbqvvuPdtyM1Rd
EHA/33fHJw5dIvuWP+Bls9XWEuZcO7kFbzEW7zyS7OH5FZpG0tgrtRkf7o9OmsoT15uqB5NC
QFMkNHIYB3CeclE7vo5GF4y6+BSVzBhWGprbOB2NzshK+GrEyhBqDok2Zu3whOQSXY41PELE
7li/o+Otu+grVPMq9tAvRsjIRgt7seMIobZLnBOTUB2YikSJfh1O+/AXMAdTlDb93wvPZc5Q
4U2HlkdcHbO7IiwtRTgsaIZep7bu3Qn1DamckTqfkT9NKbUUfwA8ADB6kwEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:30:56' prior: 50343360 overrides: 16961336!
                          z#H4sIAAAAAAAAAHWQwW7DIAyGz+tTWNUk0qntAyBt9x6mVLtGHBCYFY3CZEiTaNm7102W9TDt
Yhn883+/+cChS2Rf8zs8r9baWsKcayfX4C3G4p1Hkj3sXqBpJI29Uqvx4f7oqKk88bypejAp
BDRFQiOHcQDnKRe14etodMGoi09RyYxhcUNzGW9HozMyEr4asXgINYlEG7N2eERyic6HGh4h
Yneo39Bx6876E6qpii30MxEyMtHCVmxYQqjtLGfFDaj27IpEiX4ZTvvw12ASpiht+j8L72VO
UOFFh5ZXXBgTuyIsLUXYz9Y/qe7hhPqGVE5Inc/If6aUugIxBUN+jAEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:35:25' prior: 50343095 overrides: 16961286!
                              z#H4sIAAAAAAAAAI2QzUoDMRSF15mnONxNkv74AEEFl24U2uU0QiaT2rQzyTAGVJiHN81UpILg
Kic393znkKaL9oS7qmJUE9b3qDnXFWOCCVIE37qQ/N67UZnyalbg4FouVQOaKG9OzPVD+qyY
nO1ix1doYGOwJrlgko8hm9qYuQWcbRA/4IVU/jfqwhI+Y7rO2aRQq+N0xBL8ds3PR3Dvj88b
t8dTTAcfXnPoNo1ZwI5aXseXYBv7Pmc+hHY7GOve5jLuYxgh6IZwVnIxa3qZ75hQGslS7nt6
3fRvdib9Y5WRvny85PoL7ER6v48BAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:36:05'!
                              z#H4sIAAAAAAAAAEvPyU9KzNGwqtBUsFXgii5OzUlTKEgtSssvyrVSqIgFAOwbByYfAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:39:42' prior: 50343406!
              z#H4sIAAAAAAAAAF2LoQ6AIBgGO0/xNXTTF3DTZrUYGeEX0bEhIBAIPrw2p/F2d7v1C9mqKzV6
MCHRDhB8pUyYz7EoHbLxDvTYL18Yy2QsbzDnaNwOFRtw41ImpzTe9LP9ci6ZSNpuCDpuPh4d
irwBhVUlD5IAAAA=! !

----SNAPSHOT----(3 June 2021 16:39:46) Cuis5.0-4526.image priorSource: 368987!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:45:52' prior: 50343412!
z#H4sIAAAAAAAAAF2NMQ+CMBhEd37FbYUESVhJdCGsLoy1w+dnIY2lraVDB3+8dTI4vty7u9X6
O9l6yA3OqKTC6QIpHpQI82vKrEMy3oFKeuQ3pnw1VrSYUzRuBccWwrg9kWONn3qo/emLj8+y
zGTtOKK+8fd+owCG7LtONUJVctd2QdCxyNuArD4XXmFZswAAAA==! !

----SNAPSHOT----(3 June 2021 16:45:58) Cuis5.0-4526.image priorSource: 376615!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 16:48:15' prior: 50343423!
                            z#H4sIAAAAAAAAAF1OvQrCMBjc+xQ3CGmhFlwLdildXTrGDJ8xLcE0iUmGDD68EQSp2/1ytxp3
I1P3ucEZFRc4DuDsTokwP6cslU/aWVBx9/yFKV+0YS3mFLRdIUMLpm1MZKXCL7qr/cUXFx7Y
KCYVyoAkY8YR9VV+XnzlQwEeEvzUdaJhouJRmQVehVLeemTxBhrHL3zDAAAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 17:29:03' prior: 50343436!
    z#H4sIAAAAAAAAAF2OMQuDMBCFd3/FGwoqWKGr0C7i6uKYZohplNBrYmOGQNv/3iiFotPdu3t3
7xvJ9oKyKuQ4I2EcxwtYehNeoHs2QarJa2sg4nar32hCqykt0HmnzQjpCqTazF4YqfC3bs52
9sG6Ox5i9srFACmI6hrZVS4Uv/EhNhMk2Kkseb67XzkjBYmeFEL80VoTNV5mrVUVPpF04eQJ
mxUNmJSLqY8KgX8BlICGbPwAAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 17:44:57' prior: 50343446!
                           z#H4sIAAAAAAAAAF2OMW/CQAyFZ/Ir3lApIFGkrifBQhnLwphmcC4mjercpXdX9aS2/x0HkBBM
tp/fs79OfEMyN3mBNYqqxvMGVdlSIhy+dtnymHrvQLq9n/+wy/teyiUOKfSugw1LlL2LiZxl
3Kx3sQf70YdPDBQTB31gSWS7xfzdThRX+UmbERbVy2pVLx7yZ06lEGqEkfXG3jud8evO1Zj8
r6TaFTMrFCNeufnuOr1LaPDzwYGLGdBOKozBm3fUYsB6o4YJQl2XUtZFFVmOGDko9mCQ6xNK
tDFEPQEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 18:01:52' prior: 50343458!
  z#H4sIAAAAAAAAAF1QsW6DMBCd4SveEAmQaCQyIsGSZuiQtGpGynAYQ1GMoWBUpLb/3gNaomSw
7u75ved3LlWTkXLD0UMEO0nxECNxcjKE88dhFLI1VaNBfHs7f+Mwnirl+DibrtIlROfDqXRv
SAuJK/VGdkcvmu6CmnojO35AkFL7Pdw3MaX4gzfctBBIgu029e70c05OoShTEiN7nBrNM770
XMNw/OGk3NmWUNT3eJTZUJbsS8jw+S47aVtAPqEIQxwbTTlqRDETphDMWoptrbutHu7xVRZ4
ekbmr5139V1cXQp82k1wxCeOo/8FB91TIV9kx79Qs3QDtx3MbEQBbxzHMHSRC7DzPCe1k16q
Au0iCTGmv0IaGUy/AQAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 18:03:52' prior: 50343471!
                 z#H4sIAAAAAAAAAF1QsW6DMBCdw1e8IRIg0UjJiARLmqFD0qoZKcPhHBTFMdQYFantv/cIbaJk
sO7u+d3ze650U5AO4iFEAi/L8ZAi8w/kCPuPzaC4dXVjQHJ7O39jM+xq7UfYO1ubCspG8GvT
OTKKcaXerN3Ry8YecaLOsZUHFGm9XiN4U6OLP3guTQuFbLlY5OHd/tmnuNBUaMYgGrvGyIwv
c65xPPyIU+m8mdLUdXjkoq8q0SUU+Hxny94MOIwo4hjbxtABJySpEEYTwpqKN7tku2gE21cu
8fSMIrp04VV3Ug1oGdFqhBM5aZr8B7TsemskYG86KvmFrXzHSTTmCNrenRVpKdHTFI6OPAGr
MPRzL+tYl2inlRhD/guWzvNPyAEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 18:15:34' prior: 50343330 overrides: 16961431!
                 z#H4sIAAAAAAAAAGWNSw6CQBBE13KKYsVMoka3k2jiwrUHgFlMoImD4WMPRIh6d/lENLqreq9T
3RSGu2NbMXaetxBNYWs8MFOpMtiEitqmllhZrPYIhUVsHJ1ShXsYxGVeMTlHSaBHPZNAr/tm
3IHZdG8ponYMrZaTT+h/4cOmm7Tky8/AgCCifMiOrhA5fB8b+VW2EkLK/s0TZX0mvllHCqHV
colMvwALif67+gAAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 18:16:58' prior: 50343504 overrides: 16961431!
               z#H4sIAAAAAAAAAGWOsQ6CQBBEa/2KoeIuUaMtCSQWtvoBeAWBJa7KgXcYIeq/e0BEo93se5PJ
XnVi2k1TGYTT6URcNdd4YKQyOIIz0jXnTCZgzCPEgpEmlnZ5gHvsp2VRGbKWMl/1eiS+Wrgr
sWtjkvYtxb7pQ6Pk4DP6X/iwoZOX5vQz0CGIfdFlSxeIAp6Hpfw6VhJCSkRR6IptV+QcLcIQ
S9QH0tiWestnNKCzJbgo3U9PlE6aG1sKELOSMxzVC+mdH+wnAQAA! !

----SNAPSHOT----(3 June 2021 18:17:05) Cuis5.0-4526.image priorSource: 377003!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 19:26:59' prior: 50343376 overrides: 16961336!
                               z#H4sIAAAAAAAAAHWRy2rDMBBF181XTEJBTusGshW0+yyKQ7dGCyGNGlFHKiM5tqn771XsOi6Y
boQe1+fcwR/YNZ70a3iH59VGak0YQmH4BqxGF62xSLyFpxcoS059K8Sqv5s/OkqKD+m9zFpQ
vqpQRQ4l7/oOjKUQxTZdOyUjOhmtd4IHrCYaqkt/PSoZMCnhq2QTg4khxGoXpMEjkvF0PhRw
Dw6bQ/GGJm3NWX5CNqwsh3Y0QsBk1JCzbYoQSj3GU+IqFLtERSJPN4eRtloChqB3XPv/u6S5
1AkyvMiqTiNOjsGdEcaaHOxG9G+ruRwbBHIeNVvyb+3/gtfrZdmcwSPsmfgGH09IjQ2YfoMQ
4gff3YJ43wEAAA==! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/3/2021 19:28:45' prior: 50343487!
                     z#H4sIAAAAAAAAAF1QwW6CQBA9w1e8gwmQoCkeSeBiPfSgbeqRkmbABYnrQmFpN2n77x2gavSw
mTfvzb59s6WsM5JuaDxEsJMU8xiJsydN2H2sTS4aXdUKxOpt/4O12VbS8bHTbaVK5K0Pp1Kd
JpULXEdvrt2NF3V7xIk6LVp+ICcpVyu4b/mQ4p+eMWiQIwkWi9S7uz/m5BSSMilg2GNbK+7x
rcYahuaXkzKyrVxS1+FRZH1Zsi8hw9dBtMK2gP3AIgyxqRXtcUIU88AQgqemYluX3S4e7uZV
FHh6RuZfkHf1nVxdCnxaDnTEJ46j84Kt0H2reMFedVSIF9Hyd5zYYwa36fXoSAGvHsfQdBQT
sfQ822pI5wc84JMk3kPTsTVDBmdJjZKZJBO6E+sqzBF4k9Z5TmonnZAFmunpECb9A/xxqrUQ
AgAA! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/4/2021 06:48:53' prior: 50343532 overrides: 16961336!
    z#H4sIAAAAAAAAAH2RzW7CMBCEz+UpFlTJoaRIXC21dw5VUK+RD1a8LlYTG60dSNT03WtMA62g
vVj+mXwzs3nH/uBIvfg3eJrMpFKE3heaz8AotMFog8Q7eHyGsuQ0dEJMhrvLRxtJ4SG+l1kH
latrrAKHkvdDD9qQD2Ier20lA1oZjLOCe6xHGlb74XispMdoCR8lGxlMJBFrrZcaN0jaUbMu
4B4sHtbFK+q41Y3cQZZWlkN3cgSP0VFBzuZRQijVSR4VR0OxjFQkcnT20NLU14AkdJYr93eW
2KvaQoZ7Wbex4uiRvDPC0JKF5Qn9neoSjiUDeamaXfPP6X+Cp9PrsDmDBawiMhF37X8DbJwy
uv81lBxYtktdbs1xsbpRITX4BBe2SAfjMf51IcQXfiMor04CAAA=! !
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/4/2021 15:12:06'!
 z#H4sIAAAAAAAAAGWNQQrCQAxF93OK7NJC8QABD9BNBRduRCWOUYQ4BWccCo53N20XIt0kP/9/
Xm4S2h0/I2UbEPghBF45xs6kKzDaEYqb9wmqqed7VfGJYE9DGRpAwENtbvCcJHC692Hljnjh
xIDNDzg1mxlqev2X4dvOBT+XbE0iaDdbuULVvVT5rDJiwJJ68dnMD34BNNoJQdgAAAA=! !

----SNAPSHOT----(4 June 2021 15:12:15) Cuis5.0-4526.image priorSource: 380052!

----STARTUP---- (4 June 2021 19:12:40) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


Symbol allInstances reject: [:x|x == (Symbol findInterned: x asString)]!

----STARTUP---- (4 June 2021 19:17:21) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


OMeta2RuleParser methodDict!

OMeta2RuleParser methodDict at: #keyword put: self!
!OMeta2RuleParser methodsFor: 'private' stamp: 'GDK 6/4/2021 19:20:16' prior: 16960847!
       z#H4sIAAAAAAAAAMtOrSzPL0pRsKooVrDl4izJz07N06go1lSoy0ktKUkt8i9yyUzPLFHQtVOI
riiOBQBT6s63LwAAAA==! !

----SNAPSHOT----(4 June 2021 19:20:23) Cuis5.0-4526.image priorSource: 382107!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/4/2021 19:21:02' prior: 50343582!
     z#H4sIAAAAAAAAAGWNQQrCQAxF93OK7NJC8QABD9BNBRduRCWOUQpxCs4wFBzvbtouRLpJfv7/
vDwktAd+Rco2IPBTCLxyjJ1JV2CyIxS37AtUc88PquITwZHGMjaAgKfa3OA5SeDUD2Hjznjj
xIDNDzg3mwVqevuX4dvOFT+XbE0iaHd7uUPV9ap8VZkwYEm9+mzmB7+ELmoY2AAAAA==! !
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 19:26:49' prior: 16939988 overrides: 16866189!
                        z#H4sIAAAAAAAAANVTQW7bQAw8S68Y6CSjqBBfBeRgoC16Sg/NzVGMtURVbKXdYJe248CPL7Vr
uS3ygt7kITmcmaVDa+wX52sY+23/k1rJs+J7ayxkIPyiM4z35oze+Yj07IMgjE7QOiuGLdsf
INaah4HlESXbjlsjc0F5aHqRc5xYQUlmZKSJrCifEUxG2oHCbX2FjQ0nStuUiV7h+tQatyrF
G3kH7mFdgjiovIPtKjwO+j2RDK7DiccRe4I7kvfcdWSVDkfj2R0CwmHfjiYE3Ry5B3MkdNz3
5GdpbIX8iydRG86GaD8qjW6T/lAVeXa5uQlivGg+lsOAS56l3zuUizOwahCW81ejHU9P12QD
v9EKH7Cu8uw6vfurVOXzg5Dx7YDeuwnlMI9P6jBNiotRkfovlq3i6kVJ5+o8y7Z1ivKCslwE
7xBo7LE3gduN1CnsFe7v4yvOJ7FdWhVbXDSpcisph6Iaz789tsZn7xXW/djW9HrpzRioaVaq
JuP+0R9IC8/XJ26adz7Xs7OTnhXhRCldihbX0V4EPq7/K3/PuAOKB5dOCZuHT/MN//mDFL8B
tpXn5o0DAAA=! !
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 19:26:55' prior: 50343627 overrides: 16866189!
                          z#H4sIAAAAAAAAANVTQW7bQAw8S68Y6CSjqBBfBeRgoC16Sg/NzVGMtURVbKXdYJe248CPL7Vr
uS3ygt7kITmcmaVDa+wX52sY+23/k1rJs+J7ayxkIPyiM4z35oze+Yj07IMgjE7QOiuGLdsf
INaah4HlESXbjlsjc0F5aHqRc5xYQUlmZKSJrCifEUxG2oHCbX2FjQ0nStuUiV7h+tQatyrF
G3kH7mFdgjiovIPtKjwO+j2RDK7DiccRe4I7kvfcdWSVDkfj2R0CwmHfjiYE3Ry5B3MkdNz3
5GdpbIX8iydRG86GaD8qjW6T/lAVeXa5uQlivGg+lsOAS56l3zuUizOwahCW81ejHU9P12QD
v9EKH7Cu8uw6vfurVOXzg5Dx7YDeuwnlMI9P6jBNiotRkfovlq3i6kVJ5+o8y7Z1ivKCslwE
7xBo7LE3gduN1CnsFe7v4yvOJ7FdWhVbXDSpcisph6Iaz789tsZn7xXW/djW9HrpzRioaVaq
JuP+0R9IC8/XJ26adz7Xs7OTnhXhRCldihbX0V4EPq7/I39ZphafcQcUDy5dEzYPn+Yz/vMf
KX4D23nPbZADAAA=! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 6/4/2021 19:27:36' prior: 16939792 overrides: 16865753!
                    z#H4sIAAAAAAAAAFWOMQ7CMAxF5+QUfywLB+hWpK5wAATILY4U1RSUpIhKPTyWw8L2bf/3ZCot
Jl4RQzdknksLOshznLx3G+J85w8272q4IbMEBJ164Ye2T+kYxQR77xq7DpTj2KnHmJ2KrXLG
9WfGm2RhXJQwgEr94LVoaCglWm1XeW0p+L/8AiRSN+K0AAAA! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 6/4/2021 19:27:42' prior: 50343673 overrides: 16865753!
          z#H4sIAAAAAAAAAFWOMQ7CMAxF5+QUfywLB+hWpK5wAATILY4U1RSUpIhKPTyWw8L2bf/3ZCot
Jl4RQzdknksLOshznLx3G+J85w8272q4IbMEBJ164Ye2T+kYxQR77xq7DpTj2KnHmJ2KrXLG
9WfGm2RhXJQwgEr94LVoaCglWm1XeW15p+j/+gsWQE5KtgAAAA==! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 6/4/2021 19:28:42' prior: 50343683 overrides: 16865753!
      z#H4sIAAAAAAAAAFWOQQrCMBBF18kp/lI3HiC7Cm71AKIyrRMIja0kqVjo4Z1OC8XdzPz3H0PF
oeURwVd15q440DH2TWutmRC6J38xWbMMD2SOHl62U+SX0Jd0DlEFB2t2mtaUQ1OJRzt7ESty
xX0140NxYNzmBqVEI6i4De7LwqtMEv3uPciw0at7Vlgj3v/7DzKzmqfTAAAA! !
!Behavior methodsFor: 'accessing method dictionary' stamp: 'GDK 6/4/2021 19:29:13' prior: 16798944!
        z#H4sIAAAAAAAAACvOLy1KTnXOT0l1LLFSKE7NSU0uyS/i4uKM01DQAHLTFHJTSzLyU1wyk0sU
EpGUaCpkpvll5lgpRMflZebEaiqkp5YE54MMc8svQihTyMwDc9IA08guv2kAAAA=! !
!SystemDictionary methodsFor: 'retrieving' stamp: 'GDK 6/4/2021 19:30:16' prior: 17059510!
                      z#H4sIAAAAAAAAAI1RQU7DMBA8O69YlUsiJFSulorUAj0BlUhvUaicZNNYOHZlO0ClPB67dquA
OHDyejy7OzOWQ1+h3rQ5yga12bQUWH7sKyUSMltK84kabIdQq0FaUC0wIU5Aj7ZTjXE1s1B7
VElgT9yiZuImIQWkee9gy8Q7/LHlSh1QUsEqFDSDEizvcateB/mP1sXiV8csIWOUaA5YcybW
gu3P9epoEcYkIYGxg7nTN+XtwKBooWMmD2iOAmur9CUM4O1WD5ij9cMoFEArGH8s2EEFpR/s
Rzn1K+zYB1faPKgTvxbMGCeDkFCZuMMsZfMcwoxM9wI05HvikzSNN6cwJnxRloGXWUztMNk4
5NwjlX3hIoIRMzWTa983MVBmkVOkaVSoBl3jvWpwaanXm0HLZZNbzeV+IuAO5u47lKTwqLXS
0HgbFL/GlgmDJZRlmXkbJIToPZ5/IpzXcOtJLry3gHwDmhWAVZYCAAA=! !

----STARTUP---- (4 June 2021 19:31:22) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 19:32:29' prior: 16939988 overrides: 16866189!
    z#H4sIAAAAAAAAAM1SvW7bMBCepaf4oElGESFeBWQwUBSd0qHZEsegpWN1rUQG5NmuAz98T6SV
BMgLdJPu5/vjxc64bz60MO7H/jd1UhbVz844yED4Q2eYEMwZ1odUsRyiII5e0Hknhh27XyDW
XoCB4xE1u547I3NDcWh6kXPaWEFB5spIEzlRPCOYjHQDxTf6BhsXT5TZFIn+wts8mlgV4pWC
B1s4n0scVd7B9Q0eBv2eSAbf48TjiD3BHykE7ntyCoejCewPEfGw70YTozIn7MEcCT1bS2GW
xk4ovAQSteFdTPaT0uQ2649NVRaXNzdRTBDNx3EccCmL/L9DvTgDqwZhOX83OvH0dE028iut
8AXrpiyu27sPraacH4RM6AbY4CfUw7w+qcO8KT5FReq/WljFt4uS3rdlUTy2OcoL6noRvEOk
0WJvIncbaXPYK9zdpVecT+JxGdXa4mKbO3VWaN73FEzbmtPH4ZVyF2wfwoF06fn6oNvtJ1fr
2cdJj4hwopwlJUPrZCYVbtb/sZtn3ALVvc9ngs391/k+34+/+geCcu+paQMAAA==! !

----STARTUP---- (4 June 2021 19:33:01) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!


MethodDictionary!
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 19:34:34' prior: 16939988 overrides: 16866189!
z#H4sIAAAAAAAAANVTQW7bMBA8S68Y6CSjqFBfBeRgoCh6cg/NLXEMmlpV20pkQK7tOvDjuyKt
JED7gd6oXc7szHAVrXFffGhh3LfDT7JSFtV3axxkIPyiC0wI5oLeh1TpOURBHL3AeieGHbsf
INZegIHjETW7jq2RuaE8ND3LJSFWUJK5MtJETpTPCCYjdqD4Or7BxsUz5WnKRL/h+3w1TVWK
Fwoe3MP5XOKo8o6ua3A/6HkiGXyHM48jDgR/ohC468gpHU4msD9GxOPBjiZGnZy4B3MidNz3
FGZp7ITCcyBRG97FZD8pTW6z/thUZXF9dRPFBNF8HMcB17LI33vUizOwahCWy1ejNx4fb8lG
fqEVPmDdlMUNvX/Xasr5QcgEO6APfkI9zPBJHWak+BQVqf9qmSq+XZR0vi2L4qHNUV5R14vg
PSKNPQ4mst1Im8Ne4e4uveK8Eg/LVa0tLna5U2eF5g3nvGwVZ1z3z7bOUrTG+J5rt1JtBff3
4UiKero9+G73l+v17POsS0Y4U86akuF1MpsKH9f/sdsnfAKqrc9rhs3287zfbz9P9QeBSC9T
qQMAAA==! !

----SNAPSHOT----(4 June 2021 19:34:46) Cuis5.0-4526.image priorSource: 382786!
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 6/4/2021 19:36:00' prior: 16939792 overrides: 16865753!
            z#H4sIAAAAAAAAAFWOMQ7CMBAEa/sVW4aGB7gLEi08AAG6hItkxSTIdpAj+fGcHZp0e9qd0VE0
GHmFHdou8BQN6OTmftRaZdjpxQlZqy08EdgNGOQ6O37L+uov1lXBUaumth0F27fiqcxBxHVy
w+NvxpfcwrgXgrynFbRbz3EDTMpVWNry4WeRkAompj33A1ODffHFAAAA! !

UndefinedObject compile: 'getSourceFor: a in: b ^'''''!
!UndefinedObject methodsFor: 'as yet unclassified' stamp: 'GDK 6/4/2021 19:37:11'!
    z#H4sIAAAAAAAAAEtPLQnOLy1KTnXLL7JSSFTIzLNSSFKIU1cHAPnKBvIZAAAA! !

----STARTUP---- (4 June 2021 19:37:59) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 20:08:20'!
                          z#H4sIAAAAAAAAAE2OQQrCMBBF9znFBzd2U3Ab6K6I4BEkyphOTSAkkGmLQg5vjC5cDW948+dn
DrxRXE4kThU4FOVww6FXwmEGiSTrafEpypg0Lrptyr4NbBRWhg2VMAxoJ1+iOFX73/LRhnVi
OfNLY3dP2ceH6eDnIwXhKn/+OjxT1vjFu1qqM6ZXV/cGg/Asn6gAAAA=! !

----SNAPSHOT----(4 June 2021 20:08:34) Cuis5.0-4526.image priorSource: 388181!
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 6/4/2021 20:14:27' prior: 50339155 overrides: 16865809!
                  z#H4sIAAAAAAAAAIVPvQqDMBCezVMcLiqID5CtS8dSELqIlqgnFS+JJFEq9OGbWkFaCt3uvt87
4TgMuMA4OQ6zoAlZLgWREzTAZPGEdwd9dxRkkUNRWaQOlL6gsb1WB/ftLjMIa6MHVCFbtWKT
9N3ZoEXl14LPjxk8i43ThkMcXaMUdiSFFYi9LUlA2HyRtaYyY//Kfyni/R2J7qbbjfMl3Je8
AhotR3+bxXZv+0hlLKje8xNa9LtDLwEAAA==! !
!MethodDictionary methodsFor: 'accessing' stamp: 'GDK 6/4/2021 20:14:41' prior: 50343818 overrides: 16865809!
             z#H4sIAAAAAAAAAIVPvQqDMBCezVMcLiqID5CtS8dSELqIlqgnFS+JJFEq9OGbWkFaCt3uvt87
4TgMuMA4OQ6zoAlZLgWREzTAZPGEdwd9dxRkkUNRWaQOlL6gsb1WB/ftLjMIa6MHVCFbtWKT
9N3ZoEXl14LPjxk8i43ThkMcXaMUdiSFFYi9LUlA2HyRtaYyY+xfe/ZDEe//SHQ33W6cb+G+
5RXQaDn64yy2e91HKmNB9Z6fumFfVTABAAA=! !
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 20:18:07' prior: 16939971!
   z#H4sIAAAAAAAAAG1SXUvDQBB8zv2KoS+2UAu+9k1tRfGjDwo+iJZNsm2OXu7K3cUa8Me7ubQE
ihDI7c7N7Owknmv3zQuyW/auCaZ95HaOHbfQm+s8sI1z0I1xxU5lo7dKB8hjXYRnMqZFeWLO
gJsmCktQX5NBUiajsgN7Ruks4/3+4WkJwjPHypULXUQkMGdtt2gCl1PEilUW2hC5Rq23VUTh
KVQi/+qgrfSpFBZq2rFIFW7fJpKVESqLnUO3Z09RO4vxodJF1Vl+Wb0NXkXnSBUmiemgsm6n
wcdkCrJlryt1d+jv0yayT+Vxv9lIqexXFEv+ARuuJTL8qqxvrBHYbLCRatljK/+iTUp4prJx
QnMKuriWoBNnIhmmKx/4OkYPmdMwPoVxmrAGeU/i50QT7KyDfSNHq41Ao38GDfho0JV7XETn
5xift6a4GJdyjhLPxQQUXts6d516TL/CGv37ElfSO+79c+uM0UE+Rrjzrh7Mfp3C+gM3oyvO
ggIAAA==! !

----SNAPSHOT----(4 June 2021 20:18:31) Cuis5.0-4526.image priorSource: 389231!
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 20:21:35' prior: 50343841!
           z#H4sIAAAAAAAAAG1SXUvDQBB8vvsVQ19soRZ87ZtaRfHrQcEH0bJNNs3Ry125u6gBf7ybS0tA
hEB2d25m5yYJ3PhPXpHbcvBttN0dd0vsuIOpzjeRXVqCLqwvdlpNXmoTIY/zCYHJ2g7lkbkA
LtokLEFDQxZZmaxWXxwYpXeM15vb+ysQHjjVvlyZIiGDGzZuizZyOUeqWavYxcQNGrOtE4pA
sRb5Zw/jZE6lsNDQjkWq8Psuk5ys0Cr1Dv2eAyXjHaZftSnq3vLj08voVXQOVGGSmI5a9Xca
fczmIFcOutL3xXCeqsQht4f7LSZaqx9RLPkbbLmRyPCj1TBYI7KtUEl3NWBP4dHYnPBCq2lG
NxRNcS5BZ85MMsxH3vBxiB6yp2W8C+O4YQ0KgcTPkSbY5M8I+1ZKZ3qP6p9NIz7qyjEukg9L
TP+O5jiZllIniedkBorPXbPxPTnlX2GN4X2Ks8VhX2W+L721JsrHiNfBN6PZj2NYvz63cLaC
AgAA! !

----SNAPSHOT----(4 June 2021 20:21:40) Cuis5.0-4526.image priorSource: 390700!
!Object methodsFor: 'accessing' stamp: 'GDK 6/4/2021 20:28:19'!
       z#H4sIAAAAAAAAACtOzUlNLskv4orLy8wBAFFPS3ANAAAA! !

----SNAPSHOT----(4 June 2021 20:28:41) Cuis5.0-4526.image priorSource: 391400!
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 20:40:52' prior: 16939915 overrides: 17017663!
                  z#H4sIAAAAAAAAAE2PwWrDMBBEz9JXDD4ltAR6FeRQCoHec0t8WFvrSlSWgqTWccnHV8Jx2tvu
ajRvZrDXt+CcTTb4dIhhVEiZYpaiORoGOx7ZZ1BezjCU0DF7RB7DN2uQ12W+OOrL0s3w1u2k
OBqbMHI2QaPqEoYQJ4oaQ2EgG478XP650FO2/qPYzCigaDlJkQ1Vkl5Iq3cRT9BfjBzQPzJj
stkUw8ILnneNbKS44ZNnWK/5ipsUy6D2S4WS7oRNFdQLuwEdJdu/ZoXNQ7kM5zMoRpqR7A/j
CS/bLfb7WhEtJmMdH8glVjhJUaCep/eVKTaPbcWknvwhRFXDFZ87ww7/PMQinOii7s+1nfpz
btE2v2t85KyzAQAA! !

----SNAPSHOT----(4 June 2021 20:40:56) Cuis5.0-4526.image priorSource: 391601!
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/4/2021 21:16:35'!
     z#H4sIAAAAAAAAAEtJzEtPLcovLc6pDEotSy0qCcm3UihLzOEqTs1JU0gsAXMUMtMCilKLU/OA
3GiripoKhezUymKXfBAvuwasMimxODPZESifrVBQCqQ0UEU1KsBmZWtq6sXG6gEAApUh5XUA
AAA=! !

----SNAPSHOT----(4 June 2021 21:16:41) Cuis5.0-4526.image priorSource: 392194!
!MethodDictionary methodsFor: 'private' stamp: 'GDK 6/5/2021 06:37:05' prior: 50343909!
                            z#H4sIAAAAAAAAAEtJzEtPLcovLc6pDEotSy0qCcm3UihLzOEqTs1JU0gsAXMUMtMCilKLU/OA
3GiripoKhezUymKXfBAvuwauMluhoBRIaSQWFSVWgkU0KiASmpqxsXoANdAsXWsAAAA=! !
!SystemDictionary methodsFor: 'startup - restore lost changes' stamp: 'GDK 6/5/2021 07:07:59' prior: 17062231!
                              z#H4sIAAAAAAAAAH3NPQoCMRCG4To5xeABPIClVgGxMLuVbDEsXzZhYyIzWcXb+9sJ9g/vK9BW
BfuqbRe5TFAXDhihynK31qys8WfOuXGe6T9+WWsUOVBk7erxo7+SUuhkwYZO1Du/XCDXpFVo
SXSLKL1LxXOAb9ywzXWcU5me+J37/dIwrO0DnDGMvbwAAAA=! !

----SNAPSHOT----(5 June 2021 07:08:06) Cuis5.0-4526.image priorSource: 392507!
!MethodDictionary methodsFor: 'removing' stamp: 'GDK 6/5/2021 07:36:42'!
                               z#H4sIAAAAAAAAACtKLUstKgnJt1Ko4KpRSFao4UpWiFcoTs1JU0jOL6jUA3JTEvPSU4vyS4tz
KoNS4ar1uMCKklKT83NTrRSS9QDvHBMiSgAAAA==! !

----SNAPSHOT----(5 June 2021 07:36:51) Cuis5.0-4526.image priorSource: 393191!
!HaskellCodeGenerator methodsFor: 'as yet unclassified' stamp: 'GDK 6/5/2021 07:57:42' prior: 50343566 overrides: 16961336!
                             z#H4sIAAAAAAAAALWTzW7CMBCEz+UpFoTkUNJIXCO1dw4VqNfIBzdeF6vBRmsHEpW+e40pofyU
nnqx7GQyM99Gfsd2Y0k+uzd47A2ElITOzVQ+AC3ReK00Ut7AwxMURU7bhvPe9u740VyQvw/v
i6SB0lYVlj6HIm+3LShNzvNReGxK4dEIr63hucPq4Iblers7lsJhiISPgh08GI8iVhsnFM6R
lKXldAZDMLiZzl5Qha1aihUkcWUpNPtEcBgSJaRsFCSEQu7lQbEL5FlwRSJLXYYSuro0iEJr
cml/7xK4ygUkuBZVHRAPGTE7IfQ1Gcj21t+tjuVYDBBH1OTSv2v/07jfvyybMhjDJFhGx1V9
a4BLK7VqT4aSAktWkeXaHMeTKwgdgbdhRF1c9y/OeYu/6UKLLLstO6MGxiNz6PDaXq3hF5pu
tBiemp8Rpv/W+ROsXyBttMNwXTjnXyVq9h2HAwAA! !

----SNAPSHOT----(5 June 2021 07:57:48) Cuis5.0-4526.image priorSource: 393494!

Stream subclass: #EventSensorStream
	instanceVariableNames: 'sensor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Firewall'!

!classDefinition: #EventSensorStream category: 'Kernel-Firewall' stamp: 'GDK 6/5/2021 08:27:17'!
Stream subclass: #EventSensorStream
	instanceVariableNames: 'sensor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Firewall'!
!EventSensorStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 08:27:28'!
                            z#H4sIAAAAAAAAACtOzSvOL+LiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgEgqcXFxxkHZAK1GYAEv
AAAA! !
!EventSensorStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 08:27:30'!
  z#H4sIAAAAAAAAACtOzSvOL7JSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4CoUeLi4oSw
FOLhygE+T5JuPwAAAA==! !
!EventSensorStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 08:27:45' overrides: 17051039!
                              z#H4sIAAAAAAAAAMtLrSjhiitOzSvOL1IAcVzLUvNKAJGpIB4WAAAA! !

----SNAPSHOT----(5 June 2021 08:28:07) Cuis5.0-4526.image priorSource: 394211!
!Stream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 08:29:56'!
                      z#H4sIAAAAAAAAACvILEgNybdSyC/JSC3iiouOBjMU8lIrSgJKS6wUilNz0sC8WIWi1ILURCCd
l1oeUJSfnFpcDBQqLs1Nta7MLy0CKQQA6mpZ6k0AAAA=! !

----SNAPSHOT----(5 June 2021 08:30:03) Cuis5.0-4526.image priorSource: 395225!

EventSensor subclass: #StreamSensor
	instanceVariableNames: 'stream'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Firewall'!

!classDefinition: #StreamSensor category: 'Kernel-Firewall' stamp: 'GDK 6/5/2021 08:32:43'!
EventSensor subclass: #StreamSensor
	instanceVariableNames: 'stream'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Firewall'!
!StreamSensor methodsFor: 'accessing' stamp: 'GDK 6/5/2021 08:32:54'!
               z#H4sIAAAAAAAAACsuKUpNzOXiVHLMKy5PLVIoyUhVKEvMKU1VyE9TgEgqcXFxxkHZADgA6m4v
AAAA! !
!StreamSensor methodsFor: 'accessing' stamp: 'GDK 6/5/2021 08:32:56'!
       z#H4sIAAAAAAAAACsuKUpNzLVSSMzzT8pKTS7h4lQKTi1RKMlIVShLzClNVchPU4CoUeLi4oSw
FOLhygHuv4uaPwAAAA==! !
!StreamSensor methodsFor: 'accessing' stamp: 'GDK 6/5/2021 08:34:00' overrides: 16874830!
   z#H4sIAAAAAAAAAI1Sy04DMQw8b7/C4gMqcUMrceApcdgK0YoLWlUhcViLbFLFLgWpH4+Tpajl
xM07sccz4/UoduhSxrsPjMK3xNZkR/GtS1v+AVtwE3yEzZqze9RRGHUWsGLgcxpBBoTn7mzW
7Cf4eus9ZpCvDcJ+pnNPyChAcbMVYBzNZigUnMAGqjTWRNgZEvApV7qIn3LYYbwUtoEYUsS5
7qlMy18i4iW9RRPQzZqG/CpvsYUXrZvB8MNp7xpEn+fl8S9LJJl4GPr5JHvE8RUnRcGwgNCI
+mUEHsAOaN/RVcmT0iKttNW8HlMIum1VJkKyJnQUAjHaFN2NAu9lxXFca7jK2Xyp9V0LF6qw
ODhtYMloxhpOcVCtdShDcqrGUATyiyQLCmq/tXsLLpXK7Z26NpFV6tge36jvC0891PrkdkZa
OP99u4RqaYmRD2ZXii/0HNCXKHcDBbzX5A7BN4zB16LZ5GSReRquPCcSpib3378Q+m/sfNEl
wAIAAA==! !

----SNAPSHOT----(5 June 2021 08:34:06) Cuis5.0-4526.image priorSource: 395514!
!Color class methodsFor: 'instance creation' stamp: 'GDK 6/5/2021 10:28:07'!
                      z#H4sIAAAAAAAAAG2Zy44ctw6G936KArxwvAl0vxg4i+AA5wnOLnCMcU97PMh42miPEQzgh89P
Uqom1Q27EKd+li7kJ4pSf7v/7+npdP7f6fxh+7EdTvfHD9vhza9tvP+x/Xqz//PT9vY3/Dkf
77eQ8xYiPW17+y67d+9J+/74/DeksIXQIBUt/Tx/fzpuIUWIHf/NSrw/Hr9/mhax4vGw0J8/
Pt8/PpwgoO2YFvHz0098F/Bdgpyjkp4eH76+fBoGmbsNOSmDw+vdMyRqEt9np6SX493TkNBs
8kp6OB+PzzIaajFedzksEk2kXVl8I0/AC9nzXC/S6/Hp6fSPuBcTseLdt8/Hs2jUZtAuPJ3v
nh+OQ4w87MW/u4Xn4dimP59P/9CE+ohqtJN9ZdfMx3r+k+iINn9u/LSj4vB4+tI7wwrm4Rsc
75rRBgqYoe9uDHVXDS2uw6SMEe8mAxffqemwqowDdxsC+0NpChhfu7AKoJUFE+NrE08lozEy
rAV42HetDSIczQePu9HtMAlOVoFz1oSpgZYSZpa1prFJ4hGlKm4QJZqWEjU4gIYGv/pamziY
NGMy0PEiLoMWNlLenyUMAx6H2frCM1cGTA+Y8lixnldtWOjBe8DuazXaRANzTdKwUjU95Aqf
64hUWOnJUAti6ZtWhY2UhKxkvtT0EDk+jAUTLD2UHoOkMqUJPaS5OGIYLD2+0DrCrEu97naY
EPO0cEq2JkQPgYeM7bNp29CT2SNKVfQQH9FMZ0UjtCtfKxNfPTxnxiX0EFK+Ogw6LZN+5QHP
ZwmD0ONr4TRBM1cGTA+C4EEmPW/fxYUet3V0y1tJXODxDW3uOMeb8NBC85VzmzKZ8ARMlXYq
F7UqaKBR3+YWF2/AQ1z2zHuSMmB2qmRLyf7RoAPJtwB/BC0NLMgTHU8M130Ok4rh+simxoTI
CZKGacJKM+SQ2rSqyEGz1bSqqWhxq/XKzdqCmOWEGRduCnkZoQp1mfKr7NzjWSIwuKH0URLP
WxnMrINRNQp+stSgN/omBCPNfOI3QpwTZLoJTSgbNh7fk7YYzHTEzpFo2mYgSpG1z4sn3SCG
vN/CQCoZYsh5faaxZIghiZrOZjgDB6Q32iS9K9d9DhPkEV72HJtkiaHcB0hb1ZIGBp1bRyle
0Hcyztc0IPnFaw9rC/RdTL8DF2YUy74v0wUMre/P4vxBC1YAE5ONO5gWvEZ3o660tMQtjv7y
Cgsaos2tFi0aWJA7cuP1oSwGLAV4ek4jSmMU0KenSi2ZzxQr0EvnUSudUXHMLoVOKUyK4zZ9
NIMVCij91iyLJd/EJEo6q8laECVUGMKzvOXkm5TkLRv3XSjxHYlDSxoBFG3uyrHKAFxGM56B
CPJ2w1DDMk8AQKEYz+JyIaRTHso8W6XPbQgz5JNJsYBQ1VM33uvLCghqS67XnBY1IMgieZY/
ZeED/dXIGUlpEn6JY+A0X27zwbu90Scf8Az5XSmTD5SsPhhFwo+l4Yvb7EgMH1x3dkpyxgJ8
UC6kZJDNxzsfkR1o/ar4QJvGd+oI5JFerv06DbA0sLCiMRh84MAB4Lm4KpYPbI3zWVwufLTE
yUe2jmL48H7DVs+7fTV80EYB73RvlLmXILlgJiVoUfOBOVA9V5o2GHzg5FUi17hKk4Ny5o1c
zmv1Bh9B+HHm08kH+baYiUw+qCJyRpHw58KolxvdzZ0o8UA581bLR6X6wW2c6+oVH54B4k2z
3uCjCAN15YOcBq+7K79OA5BBxZJpV/jA0kB5kPMyTWSHOv4u7hY2kI+pgnWmS0KDdm6gypth
s2hgeSNz8v7aVjQcpxXZ19stNNAhZeVi2p1oOE4rybQskfe810uF0m6j4ecm2lY0CFYOVFvR
wC5gm5TAJ8mo2V33JgZN0q0dqYDBmbpuvGG1FYwkJ7tovlNgYJSmzz3u+A7Ft7vy6jRANip0
njSeYzBwrsaWlMoyy1fKevJ3cbaAgdFQUWn8yVygKKCTIi3tbrmgPSPJJ33hgqB1nPuUprGg
S6k6zkR9wQKla8xcwSpNDjSRy97itaLPwlzz8qLoCxS0aToznMEENjU+DPbl/qTSrseHmH6L
CFryoCk6a0BE0L7n6YJLSzsRmQ8RVlREIEObJlUmaIukgfDI3HR7YcYrQCBtA6eYlzm+Uv0m
fxc3CxCofLEesgnCvGbjcxIh8Qd8qm9kM7/mYuAizftWObbzLdcuXt2SUMKnAO4W85ybHK81
Kw4qHNcmVjJXJE0KIGMgNyR0tcqXoFqSC5JS98rwIo2domU+AlHJsHY579/SWOLJWHyTXV9c
1ZVkbmQzHyEuor4b6XIK3TVzNdKXuFydWPIauRlTHOoaTSasEeVTaNfKvDVNpPG95q7ZM2ja
9rAEG05kFapw+I581+QE2hgv+5UKJg2nl0WX2/WkQhlMKOkylK8HmpLmpp/5ioZP50uH875C
htO6MeB7LlGK7nEJpFOSvqhgx16k5fbKaNfHTmcNLr+UkPve/pFMDBMNgrbvy/sRQU/bD18t
7pI9F3oq/MShyQYQOZhuzDl+ScePjr5h/UjFz/FJ1MojR8sluBbkp5HO51vPeCYTPLnj5uug
pa8ROi8Bikbner/t0Uk3AheTkfRZsBhFhyXZ9tawFW9kKcgpAvS26pDRDSOq+960MJMk2YuX
6o2Y9cZOSUq+FOJ1rri6RKy3pUkbsJSXJvdDfJJD/C7MQqt7uRjehT1eWIp0z7D0NNciQeB5
d1QGXH+nPSj1Rry8lfTZzBtFx8t1I5l4YRTp0ub73y+/Tt6fPmx/fjgcfv12OGxfHs8/Xrb/
4CfNu+d7vOdXX16+4tXh4/vt8cv/zz/xS+eff/HHG378hMWP4+H0fL898P+8fH0832+f+d9f
Tj/PL18/fvz9zV/Pj0//Avoo3ikzHQAA! !

----SNAPSHOT----(5 June 2021 10:28:17) Cuis5.0-4526.image priorSource: 396940!

----STARTUP---- (5 June 2021 10:29:34) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!Color class methodsFor: 'instance creation' stamp: 'GDK 6/5/2021 10:30:44'!
                         z#H4sIAAAAAAAAAG2ZyY4cNwyG736KAubg+KZ9ORp5jxjjTGMyyCxGx4bRb5+fpFRNqgqZQoD+
qY38RFHy29OfH68f1/8+/fXwB/67Xp62kPMWIn1te/ic3ecvG5QfL+//QgpbCA1S0dKv64/X
yxZShNjx/6zEp8vlx7dpESs+Dwvd/OX96eX5AwL6jmkRv7/+QruAdglyjkp6fXn+5+e3YZB5
2JCTMvj79vgOibpE++yU9PPy+DokdJu8kp6vl8u7zIZ6jMchh0WihbSDxRt5Al7Intd6l26X
19eP3+JeLMSKj2/fL1fRqM+gXfhxfXx/vgwx8rQX/+4Wnqdju/5+/fhNC+ojqtEu9saumZ/1
/DfREW1ubvy0o+LweWrpnWEF6/ANjnfNaAMFrNB3N6a6q4YW12FSxox3k4GL79R1WFXGgYcN
gf2hNAWMr11YBdDKgonxtYmnktEYGdYCPOy71gYRjtaDz50MO0yCk13gnDVhaqClhJVlrWls
knhEqYobRImWpUQNDqChya++1iYOJs2YDHS8iMukhY2U928Jw4DHYbW+8MqVAdMDpjx2rOdd
GxZ68Dtg97UabaKBtSbpWKmaHnKFz3VEKqz0ZKgFsfRNq8JGSkJWMi01PUSOD2PDBEsPpccg
qUxpQg9pLo4YBkuPL7SPsOpSj8MOE2KeNk7J1oToIfCQsX02fRt6MntEqYoe4iOa5axohHbw
tTLx1cNzZl5CDyHlq8Ok07LoG094fksYhB5fC6cJWrkyYHoQBA8y6Xv4HBd63NYxLB8lcYHH
N/S54xxP4aGN5ivnNmUy4QlYKp1ULmpV0ECnvs0jLp7AQ1z2zGeSMmB2qmRLyf7RoAPJtwB/
BC0NLMgTHV8MxzGHScV0fWRTY0LkBEnDtGClGXJIbVpV5KDbanrVVLS41Xpws7YgZjlhxoWb
Ql5GqEJdlnyTk3t8SwQGN5Q+SuJ1K4OZdTCrRsFPlhqMRm1CMNLMJ34jxDlBplNoQtlw8Pie
tMVgpiN2jkTTNwNRiux93jzphBjyfgsDqWSIIef1mcaSIYYk6jqb6QwckN7okPSuHMccJsgj
vO05NskSQ7kPkLaqJQ0MBreOUrxg7GScr2lA8otHD2sLjF3MuAMXZhTbvi/LBQyt79/i/EEL
dgATk407mBb8jOFGXWlpiVsc4+UVFnREh1stWjSwIHfkxvtDWQxYCvD0nEaUxihgTE+VWjLN
FCvQS+dZK51RccwuhU4pTIrjPn00kxUKKP3WLJsln2ISJZ3VZC2IEioM4Vk+cvIpJXnLxn13
SnxH4tCSRgBFmzs4VhmAy2jmMxBB3m6YaljWCQAoFONbXC6EdMpDmVer9HkMYYV8MykWEKp6
6sZnfVkBQW3J9ZrTogYEWSTP8qcsfGC8GjkjKU3CL3EMnObLOR982ht98gHPkN+VMvlAyeqD
UST82Bq+uM3OxPDBdWenJGcswAflQkoG2TTe+YjsQOtXxQf6NL5TVyCP9HL06zTA1sDGisZg
8IELB4Dn4qpYPnA0zm9xufDREicfOTqK4cP7DUc9n/bV8EEHBbzTvVHmWYLkgpWUoEXNB9ZA
9Vxp2mDwgZtXiVzjKk0uypkPcrmv1RM+gvDjTNPJB/m2mIVMPqgickaR8OfCqJeT4eZJlHii
nHmr5aNS/eA2znX1wIdngPjQrCd8FGGgrnyQ0+B1d/DrNAAZVCyZfoUPbA2UBzkvy0R2qONv
cbewgXxMFawzQxIadHIDVT4Mm0UD2xuZk8/XtqLhOK3Iud7O0MCAlJWL6Xei4TitJNOzRN7z
WS8VSjtHw89DtK1oEKwcqLaigVPAdimBT5JRszuOJgZN0q2dqYDBmbpufGC1FYwkN7to2ikw
MEsz5h53tEPx7Q5enQbIRoXuk8ZzDAbu1TiSUllWeaOsJ3+LswUMzIaKSuNP5gJFAd0UaWt3
ywWdGUma9IULgtZx7lOaxoIepeq4E/UFC5SuMXMFqzS50EQue4vXir4Lc83Lm6IvUNCh6cx0
BhM41Pgy2Jf3k0qnHl9i+hkRtOVBU3TWgIigc8/TA5eWdiIyXyKsqIhAhjZdqkzQFkkD4ZG5
6fXCzFeAQNoGTjEva7xR/SZ/i5sFCFS+2A/ZBGE+s/E9iZD4Cp/qF9nMP3MxcJfme6tc2/mV
axcPrySU8CmAu8W85ybHe82KgwrHtYmVzBNJkwLIGMgLCT2t8iOoluSBpNS9MrxL46Roma9A
VDKsQ873tzS2eDIWb3Lqi6u6ksyLbOYrxF3UbyNdbqG7Zp5G+hKXw40lr5GbMcWlrtFiwhpR
voV2rcxX00Qav2vumr2Dpm0PS7DhRFahCoffyHdNbqCN8bKtVDBpOr0suryuJxXKYEJJj6H8
PNCUNA/9zE80fDtfBpzvFTKd1o0Bv3OJUvSISyCdkvRDBTv2Li2vV0Y7XjudNbj/Swm57+Fr
MjFMNAk6vu+/jwh6On74aXGX7L3QU+EnDk02gMjB9GLO8Us6fnT1DWsjFT/HN1Erjxwtj+Ba
kH8a6Xy/9YxnMsGTN25+DlrGGqHzEqBodK732x6ddBK4mIyk74LFKDosyfa3hq14I0tBThGg
X6sOGb0worrvTQszSZK9eKmexKw3dkpS8r0Qr3PH1SVivS1d2oClvHS5X+KTXOJ3YRZa3cvD
8C7s8cJWpHeGZaS5FwkCz6ejMuD6O+1BqSfx8lbSdzNvFB0v141k4oVZpHufXz79D4fcHRWc
HAAA! !

----SNAPSHOT----(5 June 2021 10:30:50) Cuis5.0-4526.image priorSource: 396940!
!Color class methodsFor: 'instance creation' stamp: 'GDK 6/5/2021 10:32:53'!
   z#H4sIAAAAAAAAADWNTQrCMBCF9znFO4ELwS4CrjyGVElmkrZQM5CMkEUO71R09/F+X3yTXapH
AAknj+gGCMMRnmhpz/glGjhpIvW4+z468lab4mq9UNjEbmmSwibFeT65x7cFW6a/sxys61YZ
8cAs76oraiiLHZ8v0wciAh1FjQAAAA==! !

----SNAPSHOT----(5 June 2021 10:33:07) Cuis5.0-4526.image priorSource: 403167!
!UndefinedObject methodsFor: 'as yet unclassified' stamp: 'GDK 6/5/2021 11:23:06' overrides: 16962182!
                 z#H4sIAAAAAAAAACvOrEpViDMAAJOyIeoHAAAA! !

----STARTUP---- (5 June 2021 11:23:58) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!StandardFileStream methodsFor: 'as yet unclassified' stamp: 'GDK 6/5/2021 11:25:24' prior: 17049673!
                    z#H4sIAAAAAAAAAEsrzcnxS8xNVYhTVwcAxb/yDwwAAAA=! !
!UndefinedObject methodsFor: 'as yet unclassified' stamp: 'GDK 6/5/2021 11:27:49'!
                           z#H4sIAAAAAAAAAEtOzCtLLFaIK07NSVMoKs3Ly8xLD88vyklRgMgAAK0IJekgAAAA! !

----STARTUP---- (5 June 2021 11:31:54) as /run/media/grahamkelly/MyDriveLinux/Projects/DbSt2/dynabook/Cuis5.0-4526.image!

!BlockClosure methodsFor: 'as yet unclassified' stamp: 'GDK 6/5/2021 11:38:16' overrides: 16963436!
                          z#H4sIAAAAAAAAACsoyswrCS4pysxLV4hTVwcAxr50cw8AAAA=! !
!UndefinedObject methodsFor: 'as yet unclassified' stamp: 'GDK 6/5/2021 11:39:05' overrides: 16962182!
   z#H4sIAAAAAAAAACvOrEpViDMAAJOyIeoHAAAA! !
!UndefinedObject methodsFor: 'as yet unclassified' stamp: 'GDK 6/5/2021 11:39:58' prior: 50344293 overrides: 16962182!
                               z#H4sIAAAAAAAAACvOrEpViDMEAAWCJp0HAAAA! !

----SNAPSHOT----(5 June 2021 11:40:25) Cuis5.0-4526.image priorSource: 403511!

Stream subclass: #MergeStream
	instanceVariableNames: 'a b flag'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!

!classDefinition: #MergeStream category: #'Collections-Streams' stamp: 'GDK 6/5/2021 13:39:33'!
Stream subclass: #MergeStream
	instanceVariableNames: 'a b flag'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Collections-Streams'!
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:39:42'!
                             z#H4sIAAAAAAAAAEvk4lRyzCsuTy1SKMlIVShLzClNVchPU0hU4uLijFNIBACHc/k4IAAAAA==! !
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:39:42'!
             z#H4sIAAAAAAAAAEu0UkjM80/KSk0u4eJUCk4tUSjJSFUoS8wpTVXIT1NIVOLi4kxUiIcrAgBr
q2YiMAAAAA==! !
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:39:42'!
z#H4sIAAAAAAAAAEvi4lRyzCsuTy1SKMlIVShLzClNVchPU0hS4uLijFNIAgBhLWDmIAAAAA==! !
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:39:42'!
             z#H4sIAAAAAAAAAEuyUkjM80/KSk0u4eJUCk4tUSjJSFUoS8wpTVXIT1NIUuLi4kxSiIcrAgB7
F7BAMAAAAA==! !
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:39:42'!
z#H4sIAAAAAAAAAEvLSUzn4lRyzCsuTy1SKMlIVShLzClNVchPUwBJKXFxccaBWQCG/TAdKQAA
AA==! !
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:39:54'!
        z#H4sIAAAAAAAAAEvLSUwPS8yxUijjAjEV4hXKAHvdioETAAAA! !
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:41:01' overrides: 17051039!
                 z#H4sIAAAAAAAAAMtLrSjhiotOy0lMV8hMCykqTbVSiE5UAAnHAgXcEnOKQSJJEJFYhdS84tIi
kAhYR7wCmMrLL4kFADubHHBJAAAA! !
!MergeStream methodsFor: 'accessing' stamp: 'GDK 6/5/2021 13:41:22' overrides: 16990961!
                            z#H4sIAAAAAAAAAMvMyyzJTMzJrErlSstJTFeIVygpKk3V4youLUgtUkDIAgAJOBGoKAAAAA==! !

----SNAPSHOT----(5 June 2021 13:41:33) Cuis5.0-4526.image priorSource: 404873!